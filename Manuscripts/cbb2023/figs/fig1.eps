%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: packer-examples.pdf
%%Creator: Adobe Acrobat 22.3.0
%%For: josep
%%CreationDate: 1/26/2023, 8:27:00 AM
%%BoundingBox: 0 0 475 127
%%HiResBoundingBox: 0 0 474.4705 126.9194
%%CropBox: 0 0 474.4705 126.9194
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 565 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c006 79.164648, 2021/01/12-15:52:29        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2017-06-21T15:08:06-05:00"
   xmp:CreatorTool="matplotlib 2.0.0, http://matplotlib.org"
   pdf:Producer="matplotlib pdf backend"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -126.919 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 126.919 li
474.47 126.919 li
474.47 0 li
cp
clp
gsave
25.6278 104.719 mo
108.788 104.719 li
108.788 21.5594 li
25.6278 21.5594 li
cp
clp
25.6278 104.719 mo
109.148 104.719 li
109.148 21.1994 li
25.6278 21.1994 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 126.919 ]ct
[83.52 0 0 83.52 25.6278 22.2 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 116 
/H 116 
/M[116 0 0 -116 0 116 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
=n_LXmHa$"jl>7RgXt*+dETkVa2Pp2]t:h`['Hp<X/MnkT:VO>QB[JkMN3d_QC+/5T;&0ZWN38/['mNW
]thJ%a2uNLdF6XugYC]FjQGdnmI0]@p\OgNrsGQpS<];!Mhm(:HXqDEEGfN&@:3>C<Duai9hIoF77'4$
4ZYM[2)?p>/Lr;$/MAe62)[BR4?Yko77Kd>9hnPa<**=4@:a1kDfp>PItEH6O->isTVSKdYI1jN]t_J*
aN;ZQdF-Opf%8U.g=tB\g]@Za"o\W."U"u7"pk27"pt_H$OdFQ"qD(P%1WjWr=/o<%1WmH%0R.N%1WmH
%K6hV%1E[T%LimX%1WgW$k!IO$k!CK#RLb@#R1J:r<3*()[QfZ$P!ga)]^%F,qCW'1cIEW5!_J%6pj=.
6Jqj_!($\e!WiK.#7:tR'cJ)=.l0(L84uoeAG#EZlKRKmj58YGf[eNtc-+2K`PT@&]=>;VZEC=1W26;^
SXZ"4P)t]]LG+IDOHPosS"61GUo(,lY-PFC\@]Gg_8F=7bK\G_e_&U2hr3VYl0@[)o_%tTr;Ps\2P?S*
OcPEUKn"GnF`D;2ARSnM=]J<r:/"8M7RTR-4?PY`1c7'C/hJS'-n-Yu/hf(=1cIEU3B]Pl6q0[=9MSG^
<**=2@:a1iDfp8NItEB4O-,]qTVA?bYHbRJ]YDA)a2uQPd*gFof%8U.g=tB]g]7T_rWEB."pG8:#Q>#5
$4@7L$k3+Er=8i:rXSr;rso#;rXJo;r!r]8rXJr<%/gY6%fZtK$k!IN$k!CK#RL_?#R1G9r<*rA#6kJ@
$4@=U'H8&7+se`l0f1gL4?btqrBgQOZiKRqD#jY=!WrT2$4RR^(`anQ0/c*a92o0dmHWoujP\qNg=Op)
ccjSR`l5g/]Xt\]['Hj8X/MkhT:MF<QBI;hMMHh<LlROZQC+,3T:r'XWN32-['dEU]Y;5"`lQ?JcdL@q
g>(TDj6,XkmI0QJp%S=[rp'MmS<]4rMhck5HZsONDJ!Be?<^Q4;,C"]8Ol6<5sIIo3B&cN1GCF5.k2qo
-RgPt/hf(;1cIBT4[)(u7Rp$D:/Fee='K!>AS,asF*Dt\JVB#AOd2?)U8P&nZ+%9V^Ve#&a2uQMd*gCn
f%8R-g=k<:g]dZ[&Hr@C#R1M>#mgqH$jm@N%1NaE%fQn=%LrsH%L3FP%LimW%M/OK!t>_L%K6hA%1N^T
%LimG%M9*Y$k!FM$k!CK#RCY>#R1G9r<*l>#6kJ?$4@7S'H7u5+seTh0f(aK4?Wa15sbK;U&Z&3!<N<)
"U>8A&JQ'&,q1K*3^cV?mHWosjB1?sgtLB1e'H7[aMu-7^:_"d[Bm0AX/W%oU7RpEQ^3eqMMd1AJ:WE1
MN<pdQ^XJ:TqnQaX0/b7[CEc[^;7\+aNMfRdaQh%gtpuLjQPmrmd]uEq>:0WrstBWNJN@@I=$0ZDf0/s
?s[>I=&i*o9h\,K7RTO+4?PV^1c$j?/hJP&-mg8e-RgMs/hf"91c@<S4Zkqs7Rp$D9i+\d<Eid<@qKOp
F*DtZJVAl=Od29'U8OulZ*h-T^VIh/aihrUdF6Xsf%A[/g=tE]";(hB#6kD=#RLhG$OR7L%1N^TrXSr;
!t>\L%K-b<%1NgH%13RU%M'$Z%1NdV%K6hA%1N^U%LimH%MB3Z%1E[R$4I:L#mgkB"pY>9#6"`F"U,,8
#7(YF$kX0h)]p7I-S@&.2`Wr_5=%S&6e_U]!(6hg!WiH-"U>JI'Gqi8.5*J<6qck1kN([\gtUK4e'ZF`
aN)9:^qI@i[^<?EXfJCtUn=3IR$NtuNf&XHJUW-%LPUsBOHc&uS"61GV5C5mYd1XE\@]Gi_8F=8bK\G_
e_&X3hr3VYl0Ia*o_/%Ur;Q'_4-P_`LP:5)H$++EC1Ug[>Zk'*;,0eW7n,p65<M(i2`*BJ0J>"..Oc_k
,pjre.4Zu'0JbRC2`Wu`5!M>%7Rp'E:/Oqh='T-AASQ%"Fa8=`Jq],DPEhQ/Uo18sZ+%<X^Ve+5air,Y
daZguf@ej2gY2i6"U5,9"pk27#RUqJ$4I=P%Lr@H!"Jl:!t5VK%fHhB%LrpX%M'$Z&,d":%K6h@%1E[T
%Lr@H!t>_K$OmLP$k!CK#RLb@#R1G9r<3*((C:BT$P!ga)]^%F,qCT&1cIEW5!M>#7'?U]!,hl=!WiK.
#7:nP'cJ)=.k`eH8Eo<ui8<>Df[eNtc-+2J`PT@&]=>8UZEC=1W26;^SXPq3P)t]]LP:;.I!gHsKntbN
P*VK(SY)XPVQ$W!ZF%$L]=kqp_oKjAc-Ohgf\5-<i8a"blL"'4p%JOaqu6!_B9.t+JU`#jF`D;2ARSnL
=]J<r:/"5L7RTR-4?PY`1c$pA/hJS'-mp;e,U=]`-RgPt/hf(;1cIEU4[)/"7Rp$D:/Okf='T'?AS,as
Fa&1^JVB#COd2?-U8P&nZ+%<W^Ve+4aV)hBd*gFof%8R-g=l`6"pP>;#Q>#5$4@7L$Om"Dr=8i:rXSr;
rXSr;rXK2C%Ls!Z%1NdXr!r`9r=/i;%/gY6%M9-Z$k!IN$k!CK#RL_?#R1G9r<*rA#6kJ?$4@=U'H8&7
+seTh0f1gL4?Ynp!(3@Y)Z]s@!WrT2#7V7[(`anO0/c,ZjP\nMg=Op)cW895aMu-7^:_(f[Bm0AX/i1q
U7\!FQ^3eqNf&UEJUVrkH[L?pKntbMP*VH'SY)UOVQ$W!ZEpsK]=bko_oBd@bg4_ff@o$:i8a"alL"'1
p%S:ZrpKe#Mhck3HZsONDJ!Be?<^K2;,C"]8JFZa6pX%"4?5>W1GLR9/Lr;!-7'u;,$6*;,pt,l/M8_3
1Gh$M3^#Yk6q0[<9MSD]<**:1@:NncDf^,LI=[*1NKKKoS>)p\XKf7F]YDA'a2uNLd*gCnf%/L,g'%Zb
#6kD=#mgqH$jm@M%1NaE%fQn=%LrsH%M'!X%LimW%M''[%M'$Y%M/OK!t>_L%K6hA%1N^T%LimG%M9*Y
$k!FM$k!CK#RCY>#6k>8r<*r@#6kD=$4@7S'H7u5+sA<d0f(aK4$>eoec<el7KEMk!WrT0#7V7Z(`ahM
0/hqPhqZu=f%&0mbK7fD_SEjs\[JlNYcXt*VPKiUS!]M+OH,3SKn4c%H$=O]IXm'+MN3d_.[HHkStDaR
W2Zi%ZF%'N]=l"s_oKmBc-b"jf\>3=iT01dlgF66p@nF]mf,P.Kn"GpF`D>7ARStO=]JBt:/+>N7R]X.
5!:qc2Dm9E0.e\(.46Dg,U+BU,UFca-n6`!0/,1>2E*WY4?c&"84H*A9hnPa<EEF5@:a1kDfp>PItEH6
O->ouTVSKdYI1jN]thP+aN;ZQdF-Opf%8U."9f&8#RLeC$4@7M$k*RT%1WgW%LrCI":YbK%M&FH&e5B\
%Ls!Z%1`pZ%1WjY%LimXr=/`9%h0!X%1WgW%LimW%LidS$P*XR$4-tE#R1P="pG,4"U+f/'F>'S$P!gc
)]^%F,qCW'1cIEW5!c1KoDejlrW6p>"U>AF&JZ3),qCe3hqZr<f$i$kbK.`C_S3^q\@/cMY-"b'VPKiT
S!]M)OH,3SKn4]#H$4:QH$k!iK858COHPosS"61GV5C5mY-PFC\@]Gi_8F=7bK\G_e_&U2hr3VYl0Ia*
o_%tTquH`cs(mC=HZsUPDJE`k?<gW5;,L(^8k2?=69dRq3]AlQ1GCF5.k2tq,paf\+<M^M,U=]`-n-Yu
/hf(=1cIEW4[)/"7Rp'E:/Oqh='T'?ASQ%"Fa&1^Jq],DPEhQ/U8P&qZ+%<X^Ve+4air*=d*gFof%8RY
#R1P5#mCYD$jmCOrXJf9rser;!t5VK%fQq:%L!:O%M'$Yr!rl=%1WpH%fQq:%KR"Ir=/]8&If3Y$Od@N
$OR1G#mUY?"pG2/";V1H"pkSC$P!ga)]^"E,qCT&1cIEW5+DTj!<E6'!sJo:%1s<l*@35ngtLB2e'H:^
aMq?$_S3[p\@&]LY,eV%V50`SR[BD(O,f*QKn4]"H$47KF*;hUI"6j'LlROZQC+,3T;&-YWN32-['dEU
]tV>#`lQ?JcdL@qg>(TDj6,[lmI0T<p\Oddnc'>RHZsONDJ!Hg?<^Q4;,C"]8Ol6<6#8bJ4?>DX1G^^;
/Lr;!-RC&_+s7pK*ZuXN,UOic.4Zu&0JbLA2`Wo^5!MG)7nHBL;,L:o>@(`LAo)C,GC+gjKo;"SQ'n/:
VlQo(\%95e_o9[<bg"M_e(*%$#R1M>#mgqH$jm@N%1NaE%fQq;%f[";%Kd.L%Li[R%1WjY%Ls![rXK)B
%h9$Y&,m%@%1WgVr=/u?$k3[U%K-bK%1N^R$OR:M$4-tD#6kG<"U4i-'a4gH#m^kG%M9Bo)]p7M-S@,0
2`X"N!65(-!<E6'!sJo7%1s9k*@9Lpf@A?rbfe)I_ns.#\[]&RZEC7-W265\SXPn2P)kKXLP(/,HZsXS
Df0K7G'A:\J:WE1MCjmPQC"&2T:r'XW2m),ZaI<T]Y;5!`lQ?IcdL:og>(QCj6,XkmI'N;p\F^co)D"&
GB7\?An,7U>?=g%:eaVT7n,m45!1qf2`*<F0J4q,.OZVi,pFKT*Zc=C*ZuUM,UOfb.4Qo%0JP@?2`Ni]
4?u,!7Rp$D:/Fee<Eid<@qKOpF*DtZJVB#AOd29'U8OulZ+%9V^VIh/aihrUdF6Xs"pYD>#mq%K$4@4N
%1E^F%fHh;%Lr@H!Y#SKrXAo=%hJXL&e>H_%M'$[%LrpX%h9'Y%1WgVrXK,A%1E^V%1W7G!t5VI%1N[P
$k!CK#m^b?#6k>8rWEr>"U>5:#RUqJ&JQ!"+!MjU/h]">3N3#L!,hl=!WiH-"U>JI'GqkFf[eO!c-+5L
`PTF(]=>;VZEUI3W2?A_Ssu+5P`Uo_LkUD1I!KmWEGfT1EHHALI"$TuLPUtPPa7]+StDaRVQ$W#ZF%'N
]=l"r_oKmBc-atif\>3=iT01dlg=05p@eUar:9l)H$++EC1Ug]>Zk'*;,0eW7n,p65<M(i2`<NL0J>".
.Oc_k-6scX+!2LC*?Q@G+s\H]-7C;n/MAe62)[BR4?Yko77Kd>9hnPa<**=4@:a1iDfp>PItEH6O->is
TVSKdYI1jN]t_J*aN4Y1d*U4jeHl-\#RUqJ$OdFQ%Lr@H!"Jl:!t5VK%fHhA%LrpX%M'$YrXT,A%M'$Z
rXT)?%Ls$J%fHk9%N>ic%1NdV%LrpX%1WdS$k!IO$4-tE#R1P="pOr.rWWo?#n.1O',2B++<i*^/ho1A
quE;g)Z]s@!X&Z3$4RR^)VEWiccsYSa2Pp0]t:e^ZrXK8XfJCsUn=3IR$NnsNf&UGJUVulG&qY@CM@R%
EH?;KI!gHsKntbNP*VK)SY)XPVQ$W!ZF%'M]=kqp_oKjAc-Ohgf\5-<iT'+clL"'4p%S=\rq-4/F`D;2
ARSnM=]J<r:/"5L7RTR-4?PY`1c7'!0J4q-.OZYj,pXZW*ZlF%)b(hi*ZuXP,UOic.4Zu&0JbRC2`Wo^
5!_S+7nQHM;,L:o>[CiMAo)C.GC+gkKo;"SQ'n;>VlR#+\%95e_oKg>bg"M_eG]aX$4@7L$k3+Er=8i:
rXSr;rso#;rXK,A%Ls!Z%1`FLrXJu@%hS^M"V2+Q%1WpH%fQq:%KR"Ir=/]8&If0X$Od@N$OR1G#mUY?
"pG2/";1nD"pkSC$P!a_)]^"E,pt<"1sc6E!(Hti!WiH-#6t\M("Uj[bfe)I`PT@%]=>8TZEC7/W265\
SXPq3P)kW\LP(/,H[0dUDf0?)B4l!tDf^)IH[L?pKntbMOt2icR[p(EUo(,lY-PFB\@]Df_8F:6bKS;\
e^rO1hr*PXkj%R(nb)YQqu69g7WE<X@pr\J=]J<q:/"5L7RTO,4?PV_1c$pA/hJS'-mg5d+sJ-N*ZZ1=
)B'P8*ZcFJ+s\K]-RgPt/hf(;1cIBT4[)(u2b$;/9MSD]<**:1@:NncDf^,LIt<<3NKKKoS>)p^XKf7F
]YDA'a2uNLd*`4,$4@7L$OdIR%/g\8%0@"L%K-bJ%1NdV%LimY%h9'[%h9*[&H31H&.T3\%hB-Z%M/OK
!t>_L%K6hA%1N^T%LimG%L!7M$k!FM$OdCM#m^eA"pbD:"oSQ9"U>5<#RUqJ&JQ0'+!MjU/hs.%oDik3
!<N<)"U,,?&_5:RbK7fD_n`st\[JlNYcXt*VPKiUS!]P,OH,3SKn4c%H$=@MDJX*$AnPgoDK0cBH$k'k
K85>EOHc*!S"?7HV5UAoYd:^F\\#Pj_SaF9bK\G`e_&X5hr3YZl0Id+o_/+Wr:U)1De`il?sHi9;c-:a
8k2?>69dXs3]ArS1GLO7.k2tq,pjl]+WhdH*#fe6)B0Y:+!2XM,UFca-n6`!0/57?2E*WY4?c&"7n60G
:/Oqi='T-AASQ+$Fa8CbJqo8FPF%]1UoCDu[C<`\^r+46air*Bd0L'e$k!IP$P!UU%1WjWrXK&?$k3[V
r=';J%LimX%h9$Z%M'$Z%hK6_rXTDI%M'$[%1WjY%LimXr=/`9!t>_L%K-bb%1WgW%1<RP$k!CK#RLbA
#R1J:"9\l2"pP;=#n.1O',DN-+<i*^0D>I>!!!'!!Z;+E#7;!hc-+2K`PTF(]=>;VZEC=1W2?A_<1TMG
QB[JkMMQt;IXHEaFE)26CM.-d@qTLkDK0cAH$k!iK858COHc&uS"61GV5C5mYd1XE\@]Gi_8F=7bK\G_
e_&X3hr3VYl0Ia*o_/%Ur;QHj+)5@q?<gW5;c-:`8k2?=69dRq3]AlQ1GCI6.k2tq-!V`A+s7sL*?,q9
)AjA2)]Ke>+!;aQ,UOid.4Zu'0JbRC2`Wu`5!_V,7nQHM;,^Fq>[CiMC2@g2H$b$mKo;"UQ'n;@VlR#+
\%98f_oKg>bg6\)$jmCO%1WjG%f[";%Kd+K%M&FH#7_4Q%Ls!Z%K6kA%Ls$]%h8dS%M'']%M&IK!t>\L
&,d":%K6h@%1E[T%Lr@H&If3Y$Od@N$OR1G#m^_@"pG2/"TAT6#mgqH%MKNq*?QIO/'@q9!([+k!WiH-
#7A`!aMu39^:h.g[C!6BX/i1qUn=3HR$NnsNf&UGJUVrkG&qY@CM@Ek@:3MRB4l!tEH?;KH[L?rKntbN
P*VIaR[p(FUo(,lY-PFB\@]Gg_8F:6bK\A]e_&U2hr*PXl0@[)o_%tTqu6Bj/7i6r>?Os';,0eV7n,m4
5<M%h2`*<H0J4q-.OZYj,pFNU*ZlCA)]BV3(E!,i)]Ke>*ZuXN,UOic.4Zu&0JbLA2`Wo^5!_S+7k@5*
:/Okf='K!>AS,asFa&1^JVB#COd2?-U8P&nZ+%<W^Ve%2aik,$$4@:A%K-e9%K?q<%K6k;%K6hB%1WjY
%Ls![rXK8H%hB-\%M'$[%hS^M"V2+R%1WpH%f[":%KR"Ir=/]8#7V+N$O[:M$OI.H#RL_?#R1G9r<*T7
#6kJ?$4@=U'H7u5+sii]p&K.7!<N<)"UE5l`l#[-]Xt\]Za-a7WMlYfT:MF;QBI;hMMHh8IX?9^F)Pr3
BkCj`?<plG@qK@hDJsT>GC+^fJVAo?O-5fqR[p(EUo(,lY-PCA\@]Df_8=45bKS;\e^rO1hVdGWkj%R(
nb)YPqu6Wls!_A_>?=g%:ej\U7n,m45!1qf2`*<F0J4q-.OZVi,pFKT*Zc=@)]9P2rYJ$@)AsG4*?H7E
+X/0Y,pt,l/M8_31Gh$M3^#Yk6q0[<9MSD]<)m./@:NncDf^,LI=[*1NKKKoS>)p\XKf7F]YD8$a2nMo
$4@4N%1N1Fr=&c;%K-bB%1NdV%LimY&,m%E%h9*[&.]<^&,m%J%h9-]&.T3\%h9'Y%M/OK!t>_L%K6hA
%1N^T%LimG%M9*Y$k3RO$k!CK#RCY>#6k>8r<*Q5#6kD=$4@7S'G_W0,5)#.!#kq>!WiH-aiDB;^qI@j
[^<?EXfJCtUn=6JR$La:OH,3SKn4c%H$4:LDJX*$@q&hP>[:`H@qTLlDK0cAH$k'kK85>EOHc&uS"?7H
V5UAoYd1XE\\#Pj_8F=8bK\G`e_&X3hr3YZl0Id+o_/%Ur;$@8?sHi7;c-:a8k2?>69dRq3]ArS1GCI6
.k2tq,pjl]+9ru1*?6":)ArAg:`()h)]Tk?+!;aQ,pjre.P!)(0JbRE2`Wu_5!_V,7nQKN;,^Fq>[UuO
C2Rs4H$b$mLPq4WQ^OMBVlR#/\%98f_oKh+$k*RT%1WgW%Lr@H!t5VK%fHhA%LrpX%M'$YrXT;F%M'*]
%M'$Z%0I(M%hARLrso#=#7V.Q%h9$Y%fHk9%Nc,i%1NdV%LrpX%1WdS$k!IO$4-tE#R1P="pG,4"U+f/
#mgnH$P!ga)]^'D!6G41!<E6'"NSKu^:h.g[^<?CXfJCsUn=3IR$NnsNf&XHJUVulG&qY@CMRQm@:3DH
>?kHA@:NqaCMn-5G'SI_J:iW5Nf]DSQC+/4T;&0ZWN32-['mKV]tV>#a2lHKdF-Rtg>(TEj6,[mmI0]?
p\Ogequ8$K=]J<r:/"8M7RTR-4?PY`1c7'C/hJS'.46Df,U+?P*uu:>)B'Il(B>6M(EF>2)B0V9+!)OK
,U=]`-n-Yu/hf(=1cIEW4[)/"-q6^!9MSG^<**=2@:a1iDfp8NItEB4O->isTVA?bYHbRJ]YDA)$k3+E
r=8i:rXSr;rso#;rXK/B%Ls!Z%1a!K%L*IU%h9*[%fQnA%Ls!Z%hB6N%L!@R%1NdXr!r]8rXJr<%/gY6
%L!:N$k!IN$OdCM#m^hB"pbD:"oSQ3"pY>=#mq%M&JQ0)ScJB_E<-(A!l`$j]Xt\]['Hj8X/MkhT:MF<
QBI;hMMHn:IX??`F)Pr3BkLpa?=$l>=BSm7?=@>VB5;C'F*;hUI"6j'LlROZQC+,3T;&-YWN32-['dEU
]Y;5"`lQ?JcdL@qg>(TDj6,[lmI0T<p\OaerqudC=]J<q:/"5L7RTO,4?PV_1c$pA/hJS'-mp;e+sJ-N
*ZZ1=)B'Il(]G3L(B><O)FPMb*ZcFJ+s\K^-RgPt/hf(;1cIEU4[)(u7Rp$D:/Fee='K!>AS,asF*Dt\
JVB#COd2?)U8P&nZ+%9V^V^Hh%1EaG%fQn=%LrsH%MfK_%LimW%Ls!Z%M''[%h9-]%h9*[%f?bH%Ls!Z
%hB3]%h9*\%LimYrXK#>%LimG%L!:M%1WgVr=0DJ%1EUP$4I:L#m^eA"pbD:"oSQ2"U>5<#RUqJ&JQ2S
!2'<4!<E8=^:_"d[Bm0AX/W%oU7RpEQ^3eqMMd1AJUURFGBS%GChm`s@pr\L>Zk-.='8d5?=@>UB5;=%
F*;bSI"6d%Ll.7VQC"&2T:r'XW2m),ZaI<R]Y;5!`lQ?IcdL:og>(QCj6,XkmI'N;p\F^crVn0D;,Bt\
8Ol6<5s@Cn3Ar]M0eb43.Olhn,pa`Y+<DRD)]KY5)#b<S()7T"(B,+>(`F81)]Tn?+<_pS-7(#g.P38,
0f(XF3''2b5=@t28PDiT;,gP"?=@>UCi4<<H[UI!MiEjaQ^jeJWN<A4\\,Zd%1E^F%fHh;%Lr@H!Y#SK
rXAo=%hJXL$4dUW%hK6_%M'$ZrXAi9r=&`:'FtZb%hK6^%M'$Z%1WmY%LijW%1W:H"q;"M%LrpWrXKPM
$k3US$OR:M$4."E#6kD;"U4l.$3^S<"pYD@$k*^^`;n']8-&b,]t:e_['Hp<X/MnkT:MI=QB[JkMMQt;
J:)WcFE)26CM.-d?s[)B=B/=#=Bf$9?t*VYBkqU+FEVqWIXm'+LlRR]QC'+jStDaRVQ$W#ZF%'M]=l"r
_oKmBc-atif\>3=iT01dlg=05p@nF]rr2pC;c-:`8k2?>69dRq3]AlQ1GCI6.k2tq,pjl]+<M[G)]K\6
)#b?N('#*K(B,*l(`F;3)]^"B+<i'W-71,i.kND.1Gq'L3BTGg5t+75,>(X);,^Fq>[UuOC2@g2H$b$m
LPq4WQ'n;@VlR#+\%96_%K-b:%K-b=$k3[Vr=&uA%LimX%h9'J%gWXT&.f?^%h9*K%0?qG%/p\A%Ls!Z
%hB3]%fQt@%1WjYr=8c8rXK)@$k3XU%K-bA%1WdS$k!IO#mptE#m^_@"pP80"TAT/#mgqH%MP61p&K.7
]t:e^['Hj:X/MkjT:MF<QBI>iMMHn:IXHEaF)c)5BkLpa?s[)@=B/=!<)m%'>[:`G@qTFiDK0`@H$k!i
K8#,AOHPosS"61GUo(,lY-PFB\@]Gg_8F=7bK\A]e_&U2hr3VYl0@[)o_%tTqu6U@s%uNb8Ol6<69dRp
3]AlO1GCF5.k2qp,paf\+<DUF)]K\6)#b?N('53d(&f!J(B><O)Ef#[+!)OK,U=]`-RgPt/hf(=1cIEU
4[)/"7Rp$D:/Okf='T'?AS,asFa&1^Jq],DOd2?-U8P&nZ+%:Rr=8i:rXSr;rXSr;rXK/B%Ls!Z%1a!K
%L*IT%h9*[%fQn;%/pV7%/p\?%Ls!Z%hB6N%L!@R%1NdXr!r]8rXJr<%/gY6%M9-Z$k!IN$k!CK#RL_?
#R1G9r<*?0#6kJ?$4@@1!29H8]=>8TZEC7/W265\SXPn2P)kW\LP(/,H[0dUDf0?)G%P5m?=$l>=&i3t
:f:7m='8d6?=@>UB5;C'F*;hUI"6d%LlROZQC+,3T:r'XWN32-ZaI<T]Y;5"`lQ?IcdL@qg>(TDj6,Xk
mI0T<p\F^cs%Z6Z7n,m45<M%g2`*<F0J4q-.OZVi,pFNU*Zc=@)]9P2rYG\Q'c%N!"Vqgf()7Va(I&`T
)&aG7*ZcFJ+s\K]-RgPt/hf(;1cIBT4[)(u7Rp$D:/Fee='K!>@qKOqF*Dt\JVB#AOd2?)U8OulZ+'ZA
rXAo=%Lr@H((C]_%1WgW%hB-[%hB-\%M0-^%M'$ZrXB&?$O[:L$Om"D!tGeO%LWgY&.T3\%hB-Z%M/OK
!t>_L%K6hA%1N^T%LimG%M9*Y$k!FM$k!CK#RCY>#R1G9r<*<.#6kD=$4FWLc2^MJ[^<?EXfJFuUn=6J
R$NtuNf&XHJUi,nGB@hBChmZn@UNMJ>?Fm*;c$4c;cHb!>?kHA@Uj%bCi467GBnRbJ:iW7Nf]KlR%'[=
T;&0\WN38/['mNW]thM&a2uNLdF6XugYUiHjQGdnmdKfAp\Ogf9hIoF77'4&4ZYM[2)?p>/Lr;"-RC)b
+sA$M*?6":)ArGiq\B8K()@Ya(B,*n(`F;3*$$+C+X/0X-71,j.kND/1Gq'L3BTDf5t+758kgF';,^Ir
>[UuOC2Rs4H$t0oLPq4WQ^OMBVlR#/%1WjWrXK&?$k3[Vr='>K%LimX%h9$Z%M'$Z%hK6]&,m%G%1N^S
$OR7K$O[CB%0I(M%hARL$k<aX%M'!Y%M'$Y%M&FHrXKSN%LijW%1WjW%LimW$OdCO$OR1J#RLbA#R1J:
"9\l2rWWE1#n3$uq>bTF['Hj:X/MnkT:MI=QBI>iMMQt;IXHEaFE)26CM.-c?s[)B=B/=!:ej_Z:fC=n
=Bf$9?t!PXBkqU+FEVqWI"6j)LlRR]QC+/4T;&0ZWN32-['mKV]thJ%a2lHKdF-RtgYC]Fj6,[mmI0]?
p\Oe18k2?=69dRq3]AlQ1GCF5.k2tq,paf\+<M[G)]K\6)#b?N('>9e()?c`!#>JKrYIj;)B'P6*?Q@G
+s\E\-7C;n/MAe62)I6P4?Yko6q0[=9MSG`<**=2@:a1iDfp>PItEB4O->isTVA?bY7;$O%K6h>$k3[V
rXJi:"UtqO%h9'J%gWXT&.f?^%h9*K%0R(I$OR:@$3CSC%/p\A%Ls!Z%hB3]%fQt@%1NdXr=8c8rXJr<
%/gY6%M9-[$k!IN$k!CK#RLb@#R1G9r<*6-#6kJ@lN![[+LJGWX/i1qUn=3HR$NnrNf&UGJUVrkG&qY@
CM@Ek@:!t\>Zk0/<)QOf9M8&R:f:7m=BSm7?=@>VB5;C)F*;hUI"6j'LlRR[QC+,3T;&-YWN32-['dEU
]tV>#`lQ?JcdL@rg>(TDj6,[lmI0T<p\IBL6pX%"4?>DX1G^^;/Lr;!-RC&_+s7pK*?,q9)ArGirY>YP
'c%Mu'a,3d()7S`(B,*M)#bF6)]^"A+<i!T-71)h.kNA-1G^jH3BB;e5=@t28PDlV;,gV$?=@DWCi=H?
H[gU#MiX!cR@L"LWt,+<rso&<rXK>G%1WgW%1WjY%Ls![rXK,D%hB-\%M&II"q1kI$4@1IrX&]7$Om"D
rsf/B%M'']rXK)B%h9$Y&,Zq;%K-b?%1E[U%1W7G&If0X$O[:M$OR1G#mUY?"pG2/"9Sf4"pr$EcN$YE
Y,eP#V4sTQR[9>'O,AgMK7SJuGBS%GDJNru@pr\L>Zk-.<)QId9M%`G9MJ8[<)m"&>[1TD@qK@hDJsT>
GC+^fJVAo?O-5fq7@Kd>TqnQaX0/b7[CEi]^;7\+aNMfRdact'gtpuLkNM3umd]uE7RTO+4?PV_1c$j?
/hJP&-mg5d+sA'M*ZZ1=)&a@k(BP?e(B"sO'GM8r'GgZ_!YuLdrYHXn)AsG4*?H7E+X/0Y,pt,l/M8_3
1Gh$M3^#Si6q0Zc8PDlU;,gP"?=@>UCi=B=H[UI!MiEjaQ^jeJr=&c;%K-b<%1NgH%0@"M&,m%G%h9*[
&.]<^%h9*K%0-h8$O$kD#71_ErX/]7r='5H%h9-]&.T3\%h9'Y%M/OK!t>_L%K6hA%1N^U%LimG%L3CO
$k3RO$k!@K#m^eA"pY>9"o\W,"U,,8P5tI[Gd+<NW2?A_Ssu+5P`Uo_LkUD1I!KmWEGfT.B4GCY?<g]:
<E2so:/+AQ7n63H9i+bf<ENI1?!q,OB5)1"EHHALI"$TuLPh+RPa7]+StDaRVQ$W#ZF%'N]=l"r_oKmB
c-b"jf\>3=iT01dlg=05p-h;44?XNB2`<NL0J>"..Oc_k-6scX+!2LC)]BV3rYPGI!u2Rd'`JjG('#*K
(B,+2(`F;3*$$+C+<i'W-71,j.kND.1Gq'L3BTGg5t+758ki&X;cHh'?t!V]DJsZCH[gX&MiX'eR@pAS
%Kd+K%M&FH!tGeM%Kd1O%LrCJ#S%=T&.]6]%M&II$4I=N$4@1I#mU\ArX&]7$Om"D!tGeO%fR"=%fQtD
%1WjY%LimXr=/`9)\!2b%1WgW%LimW%L`^R$OdCM#m^hC"pbD;"oST(#3Goa!%"bJW26;^SXZ"4P)t]]
LP:;.I!KmVEGfQ-B4G@X?<gW8<E)mnC/.Gq8Oc-<7nZNM:fC=n=BSm7?t!PXBkqU+F*;hVI"6j)LlRR[
QC+/4T;&-YWN32-['mKV]tV>#a2lHKdF-Rtg>(TEj6,[lmI0[65<M%h2`*BJ0J4q-.OZYj,pXZW*ZlCA
)]BV3rYPPL%2BWo'bhAs',2)p'bhDb()@Ya(B,+1(`F;3)]^"A+<i'V-71,i.kNA-1Gq!J3BB;e5t"14
8k_uW;,gV%?=@D[Ci=H?H[gX$MiX!cR@sNhrseu<rXJi:#7V.Q%h9$Z&,m%C&.f?^%h9*K%1EXQ$OR7K
#mgkA#R:\8$3CSC%/p\<%Ls!Z!Y5eQrXK)B%h/sX&,Zq:%K6h<%1N1Er=0DK%1EUQ$4I:L#m^hB"pbD:
"oSQ(#.afa!)]eqV4sTQR[BD(O,f*QK7SJuH$47IDJNs!@pr\M>Zk-.<)QOf9M%fF6UF.07nHBK:f:7m
='8d6?=@>VB5;C'F*;hUI"6j'LlROZQC+,34eJFDVQ$W!ZF%$L]=bko_oBd@c-Ohgf@o$;i8a"alL"%)
4?PV_1c$pA/hJS'-mg5d+sJ-N*ZZ1=)B'Il(BtWi()7Q"(&emW',(ul',;2q()@W"()7Va(B><O)BBb;
*ZcFJ+s\K^-RgPt/hf(;1cIBT4[)(u7Rp$D),="*<**:1@:a%eDf^,LIt<<3NKKKo%LrsH%MfK_%LimW
%M''[%M''[%h9-]%h9*[%fQnI$k!FM$OR1H#R1M<#R:\8$3CSC%/p\H%Ls!Z%hB3]%h9*\%LimYrXK#>
%LimH%L*@O$k3[U%K-bC$k3UQ$OR:M$4-qC#R:P>"pG2/"HEJ2!2u`gSt2=:QBI;dMMHh7IX?9^F)Pl1
BkCj`?<pf==&i3t:/4JS7n,j45sdq.7nHBK:/Y%j='8d5?=@>UB5;=%F*;bSI"6d%Ll.7VQC"&2StVsW
W2m),ZaI<R]Y;5!`lQ?IcdL:og>(QCj5fFhm6!Kk2Dd3E0J4pg.Olhn-7'iZ+<DRD)]KY5)#b<Q()7V`
'b(ik'b_5n'+trl'bh>tr"T2IrYIR3)AsG4*$-.D+X/0Y,pt,k/M8_31Gh!L3^#Si6q0[<9MJ>\<)m./
@:NncDKC#KI=[*-NKKJ9%K-b<%1NgH%06qLr=/l>%M&dT&.]<^%h9*K%0-h8$OmFL#7(M="U>5;#71_E
r<rQ5'b1`a&.]<_%h9*[%LimY%LrpW%LimH%L*@O$k<aV%K6hM%1E[S%1<LO$OR1H#R:P="pG51"Q9?_
!%OkAT:MI=QB[JkMMQt;IXHEaFE)26CM.-d?s[)B=B/=!:ej_X8Oc-96"3)F6:F@692/,W;cHb!>?kHA
@Uj%bCMn-6G'SIaJ:iW5Nf]KkR%'Y=U8=`dX0An:[^`r_^qmq/aihrVdad")gu%)NkNV:q3]AlQ1GCI6
.k2tq,paf\+<M[G)]K\6)#b?N((h8s()7T"'GD/o'+trk'GD2rr>#AJrYGJL3Z&bR)]Ke>+!;aQ,pjre
.4Zu'0JbRC2`Wu`5!_V,7nQHM;,^Fq>[UuOC2@g2H$b$mKo;"U$k3[Vr=&uA%LimX%h9'J%gWXT&.f?^
%h9*K%2''W$OR7K#mgkA"pG27#6kG=$2t85$O[CB%0[4O%h9*\!Y>hOrXT)?%Ls$J%fHk9%L!:M%1NdV
r=0JM%L`^R$OdCM#m^hC"pbD:"U"t9!8.?$Un=3HR$NnsNf&UGJUVrkG&qY@CM@Ek@:3DH=]e[';G^+^
91_T?6UC]8.7$9f7Rp*F9i+_e<ENC/?!q)NB4l!tEH?;KI!gHsKntbNP*VK(SY)W6Uo(,lY-PFB\@]Gg
_8F=7bK\A]e_&U2hr*PXkrLa[1G^^;/Lr;!-RC&_+s7pK*?,q9)ArGirY>\Q'c%Mu'bpHW#ndmb'bqDu
()7S`(B,*M)#bEq)]^"A+<i'V-71)h.kNA-1G^jH3BB;e5t"148PDlV&lDV0>[CiMAo)C.GC+gjKo;!$
rXSr;rXK/B%Ls!Z%M'*L%L*IT%h9*[%fQnF$k!FM$OR1H#R1J:rWEB.#6kG=$2t85$O[CB%0d:P%h9*\
&H3.C%hB*Y%M/IIrseo:!=]J9%K-bE%1N^R$jmCN$4-tE"pY><"pG/5N<"F"SXPn2P)kW\LP(/,HZsXS
Df0?)An,7U?<gW7<E)jk:/"5N7RKL.5!;"k5!_M&7Rp$D9hnSc<EE=.?!^rLAnPmsDf^)IH[L?pKntbM
P*VH'SY)UOVQ$W!ZEpsK]=bko_oBd@bg4_ff@o$:i8`uZ1c$j?/hJS'-mf?K,pFKT*Zc=@)]9P2rYGVO
'c-`_rY,JK'+trlrXoJM'+trl'bh>trY5JM'c-cb1`.,K)B0\<*ZuXN,UOfb.4Zu&0JP@?2`Ni]5!MG)
7nHBL:f11n>@(`JAo)C,GC+ahKo>p?#Rq4Q%1WgW%hJXL"qM1S%M0-^!tGhO%fQn;%/gPI$4."E"pY;7
"U"u3"U>5;#71_ErX/]7rXBAJ%M'$\%hK3]%M''[%1WpJ%Kd.M%1W:H"q;"M%1WgVr=0DJ%1EUP$4I:L
#m^eA"pY>9"lKB`!%XY1R$NtuNf&XHJUi,nG'%_AChmZn@UNMJ>?Fm*;c$4`91_WB6U<t$4?Hk35!VD#
77Tj@9heG_<)m%)>[:`H@qTLlDK0cBH$k'kK85>EOHc&uS"?7HV5UAoYd1XE\\#Pj_SaF9bK\G`e_&X3
hr3WS2)?p>/Lr;"-RC)b+s7sL*?6":)ArGiq\BJQ()7Mu'GD,m'E/UI'+trk'`JjI('56e(&f!J(GlsI
)B0Y:+!2XM,UFca-n6`!0/,1>2E*WY4?c&"7Rp'F:/Oqi='T-AASQ+$Fa8=`Jqjj7%0m@Q%1WjY%LrCJ
"qD+R&.]6]rXKDI%1EXQ$4@1I#mUY="U=l-"pP59"pYA>rX&]7$Om"D!tGeO%fQtI%Ls!Z%h0!Y%h9$Y
%fHk9%N5cd%1NdV%LrpX%1WgT$k!IO$4-tE#R1P=#.+Ba!*>YWQBI>iMMQt;IXHEaF)c)5CM.-c?s[)B
=B/=!:ej\W8Oc-95s@Ip4#f;a5!D8!77Kd?9MJ>^<)m%)>[:`G@qTLkDK0cAH$k!iK858COHPosS"2:+
U8=`dX0/b8[^`r_^qmq/aNMiUdad"(gu%'J1GCF5.k2tq,paf\+<DUF)]K\6)#b?N('kWj()7Mu'GD2Z
'*Jp\'+trW'*T!_',;5rrY>JKrYGJL+W)+9)]Ke>+!;aQ,UOid.4Zu&0JbRC2`Wu`5!_S+7nQGd:/Oqh
='T'?ASQ%"Fa&1^K)Q5Y%L3FQ%M'$Y%hJXL"qV=V%M'$ZrXB5D$O[:L$4."E"pP80"98Q&"9er6"pbG?
rX&]7$Om"D#S%=T%M'']%M&IK!t>\L&,Zq:%K6h<%1N1Er=0,C%L`^R$4I:L#mCS@#6kG<N;s*KQBI;h
IYro7JUVrkG&qS>CM@Ek@:!8F=]e[';G^+^8P)B=6U<n!4?GM]3'05c5!_M&7Rp$D9i+_e<ENC/?!^rL
B4l!tEH?;KH[L?rKntbMP*VK(SY)XPVQ$W!ZF%$L]=kqp_oBd@c-Ohgf@o$;1GCF5.k2qp,pa`Z+<DRE
"</9u)ArGirY>SN'c%P`'`8X>&do?d&ebon'GM;u'c$]`rYGPOrYe0D*?Q=F+sJ9Z-7:5m/M8_51Gh$N
3^#Yk6q0[<9MSG^<**:1@:a%eDf^,LIglhs%1WgW%M'$Z%hB-\%M0-]%M'$ZrXAi9$k!FM$OR1H#R1J:
"9nW)#6b56#6kG=$2t85$O[CB%0d:P%h9*\&H3.C%hB-Z%M/OK!t>_L%K-b?%1E[U%1W7G%LijU$O[:M
$OR1G#R:P>gAnP[0U@l_MMd1AJUVriG&qS<CM@Bj@:!5E=]\U&;GKt\8Ol6;6:!du4$,D\2E*TW4$?V.
5sdq.7nHBK:/Y%k='8d5?=@>UB5;C'F*;bSI"6d%Ll.7VQC"&2T:r'XW2m),ZaI<T]Y;5!`lQ?IcdL:o
g>"A7/Li4u-7'r^+WqgI*#fh7)ArGi!YuLdr=oPO'GV8p&ebrP&df9c&ebon'GM;t'a#0d'c-cb1)LoI
)B0\<*ZuUM,UOfb.4Qo%0JP@?2`Ni]4?l5'7nHBL:f11l>@(`JAo)@+GC'c/rXAo=%hJXL$4dUW%hK6_
%M'$ZrXAi9r<il<#mU_?#6b56r<**&r<*E1"9f#7#R:YC$N:D5%/gV<%M'$\%hK9^%h9*[%LimY%LrpW
%LimH%L*@O$k<aV%K-bG$k3US$OR:M$4."E#6q@3hZ-oGOH,3SKn4c%H$4:LDJO$#@q&hP>[(<1<Du^h
9hS&I770@+5!1nd3&WWP2`Nl]5!VD#77Kd?9heG_<)m%)>[:`H@qTLlDK0cAH$k'kK858COHc&uS"?7H
.A`o@X0An:[^j#`^qmq/aihrVdad")0.e\(.46Dg,U+?Q*uu:>)B'Il(]+sV'c%Mu',2)n&eblj'DrIM
'+tok&ebll',;8\('#*K(B,*p(`F;3*$$+C+<i'W-71,i.kND.1Gq'L3BTGg5t+758ki&X'N7t4>[UuO
C2@g2Gmt5n%1WjY%LrCJ#S%=U&.]6]%M&II$k*OP$4@1I#m^_>"U=r/!<WK(!s&N,rWEE0"U>5;#7:A:
!XfAErXAr>%M''K&-!.=%g*7N%M/LJr=/`9'b(Q\%1WgW%LimW%L`^R$OdCM#m^h;#`SfjOH,3RKn4]#
H$4OUEGfQ+B4G@X?<gW8<E)mn:/";P7RKO/5!D(j3&ifR1c.*L3'05d5!_M&7Rp*F9i+bf<ENC/?!q)N
B5).!EH?;KI!gHsKntbNP*VK)SY)XPVQ$W!ZF%'M]=kqp_oKjAc-OhgfI\U'-mp;e,U+?P*uu:>)B'Il
(]G0S'c%Q"'GV>Z'DiFB&c<:@'*T!^',;5rrY>JKrYGJL3#EPP)]Ke>*ZuXP,UOic.4Zu&0JbRC2`Wo^
5!_S+7nQHM;,L:o>[CiMAo)C.%LrpX%M'$Y%hJXL"qV:U%M'$ZrXB,A$O[:L$4."E!X8i4qZQg!qZI'+
#6kG=$2t85$O[CB%0d:P%h9*\&H3.C%hB*Y%M/IIrXJi:!=]J9%K-bE%1N^R$jmCN$4-tEec<2[23*QL
K7SJuH$47IDJNru@pr\M>Zk-.<)QOf9M%fF6UF(&4Zkec2`<NM1GgpH2`Nl]4[)/,6:4448PDiT;H-Xt
=^56=@:Nq_CMn'3G'SF^J:WE1NfT?hR$sS<TqnQbX0/b8[CEi]^;7_,aNMfRda]it-mg5d+sJ-N*ZZ1=
)&a@k(BtWi()7Q"(&emM',(ul'D`=D&J,Ndq[s;N'+trl'bh>t()7Q"!>QCL(B><O)E\rZ*ZcFJ+s\K]
-RgPt/hf(;1cIBT4[)(u7Rp$D:/Fee='K!>@qKOq%LimY%h9'[%h9*[&.]<^%h9*K%1N^R$OR7K#mgkA
#6b56r<2s!r<*?/"9f#7#R:\8$3CSC%/p\@%Ls!Z%hB3]#7h:T%h9$Y&,m%@%1WgVrXK,A%1E[U%1W7G
$4I@P$O[:M$OR1GWW;)[@>]kpJUi,nGB@hBChmZn@UNMJ>?Fm*;c$4`91_WB6U<t$4?GM^2Dm<J1G^jF
2E*TW4?c"r6:FC792//X;cHb!>?kHA@V07eCi467GBnRbJ:iW7Nf]KlR%'\>U8=e3WN380['mNW]thM&
a2uNLdF0Qo-RC)b+sA$M*?6":)ArGiq\BST()7Mu'GD,m'+tokrXo>G&J,KcrXoGL&eYij'+u#Y'a,9e
()@Ya(B,*r(`=52*$$+C+X/0X-71,j.kND/1Gq'L3BTDf5t+:68ki&X;cOT7>[UuOC2OIj%M'$Y%h9*[
%M'*]%M/OK%LijU$k!CM$4."D"pP58rWE6("S`'""9\W+$jHk?"pYA>$4@1K$Om"D!tGeO&H31K%Ls!Z
%h0!Y%h9$Y%fHk9%Kd.M%1W7G$OmRT%LidS$OdCM$&nolLkUD/I!KmWEGfQ9CM.-c?s[)B=B/=!:ej_X
8Oc-95s@Ip4#f2X2)I-F0etOA1c@9P4$5\j5se"07nZQN:fC=n=Bf$9?t*VYBkqU+FEVqWI"6j)LlRR]
QC+/4T;&0ZWN38/['mKV]thJ%a2lHKd4$Fh,pXZW+!2LB)]BV3rYPPL!#5_S()7T"'GD2Z'*8dZ'E/XD
&IB!\&.oKe&ebljrY#DI'GD2rr>#AJrYGJL0Gk]H)]Ke>+!;aQ,UOid.4Zu'0JbRC2`Wu`5!_V,7nQHM
;,^Fq>[CiMC(:^a%LrCJ#S%=U&.]6]%M&II$k*LO$4@1I#m^_>"U+f-!<WJu!s&N,r<*9-#6kG=$2t85
$O[CB%1!FR%h9*\&.T3L%g*7M%M/LJr=/`9"UtkL%1WjG%L<LR$k!IN$k!Em!4`(YKn4]"H$47KDJNs!
@pr\M>Zk0/<)QOf9M7rH6UO.'4Zkec3&WWN1c#%b#r4:n1c@9P4$5Yu5!_M&7Rp*F9i+_e<ENC/?!q)N
B4l!tEH?;KH[L?rKntbNP*VK(SY)XPVQ$W!ZF%$L]=kqp_oBd@bpOe`+sJ-N*uu:>)B'Il(]G0S'bqK!
'GV>['D`@@&cN=D&J,Ndq[s5L'+trl'bqDu()6farYGJL!#Y\R//oTO*ZuXN,UOic.4Zu&0JbLA2`Wo^
5!_S+7nHBL;,L:o>@(`L%M'$Z%hJXL"qV:U%M'$ZrXB;F$O[:L$4."E"pP56"oSSr"8r?-"U"u6"pbG?
rX&]7$Om"D"V)"Q%M''M&H3.C%hB-Z%M/IIrseo:!=]J9%K-bA%1N^R$OR:MW;u#[.=lqpGBS%GDJNru
@pr\L>Zk-.<)QId9M%fF6UF(&4Zb_b2`<NM1GU]a0/YI>1GgpH2`Nl\4[).u6UjR;9MJ8[<)m"&>[:ZE
@qK@hDJsT>GC+^fJVAo?O-5fqR[p(E*MfR3X0/b7[CEi]^;7\+aNGkU+sA'M*ZZ1=)&a@k(BP?e(B#!I
'Ef'_&ebrT&d&^W&J4pP":u.V&J=mQ#SRja',))p'GgZ_!YuLdrYHdr)AsG4*?H7E+X/0Y,pt,l/M8_3
1Gh$M3^#Yk6q0[<9MSCg;,gP"?==BD%LN^V%h9-]&.T3\%fQn;%/gP>$4."E"pY;7"oSSp"8r?/"U"u6
"pbG?$4?b?!"Ai9%h9'[%M0-^%M'$[%LrpX&,m%@%1WgVrXK,A%1E[U%1W7G"q1qL%1<LOquDl[%tK%Q
G'%_AChmZn@UNMI>8^OC<Du^h9hS&J770@+5!1nd3&WWN1bpd?r\%/(0etOA2)[BQ4$5\l5se"17nZQN
:fC=n=Bf$9?t*VYBl%[,FEVqWIXm'+MN3d_QC+/5T;&0\WN38/['mNW]thJ%a2oYR+s7sL*?6":)ArGi
q\B>M()7Mu'F#3a&eblj'E/XD&cWFA%g3FT&J,QR&dK'_&eblk&et<[r>#AJrYGJL.Ms'B)]Tk?+!;aQ
,pjre.P!)(0JbRE2`Wu_5!_V,7nQKN;,^Fq>[S$NrXT8E%M'*]%M'$ZrXB8E$k!CM$4."D"pP58rWE6(
"TAN$!rrDu!s&N,rWEE0"U>5:#7:A:!XfAErXAr>%M''K&-!.=%gNOR%M'$Y%M&FHrXKGJ%LijW%1WjW
%LimV$OdEi!58F^I!KmVEGfQ-B4G@X?<gW8<E)mn:/";P7R][15!D(j3&ifR1c-sB0e`MY%PKOk1,CaD
2E*TW4?bqp6:++17nZNM:fC=n=Bf$9?t!PXBkqU+F*;hVI"6j)LlRR[QC+/4T;&0ZWN32-['mKV]tV>#
a!;iO*ZlCA)]BV3rYPPL#Se*j'bhAs',:BYq\&l?!Y>nRrXK,C&.fEb&J=pRrY#GJ'GD2r'`JjK'c-fb
rYI%$)B'P6*?Q=F+s\E\-7C;n/M8_52)I6P4?Yko6q0[=9MSG^<**<6%hJXL"qV=V%M'$ZrXB5D$O[:L
$4."E"pP8."RZBh"9er6"pbG?rX&]7$Om"D#7_4S%M'']%L3IR%hB*Y%M/IIrXJi:!=]J9%K-b>%1N^R
%&<mg!,$S#F)Pr3BkLpa?=$l>=&i3t:ej\U8Oc'75s@Fo4#f/W2)I-F0eY14/hJ\.0/#%81GgpH2`Nl]
4[).u6UjR;9MJ>]<)m%'>[:ZE@qTFiDJsT>H$aphK8#,AO-5frR[p(FUo"m+X0/b8[CEi]^;7]2+<DRE
)]K\6)#b<U()7T"'c%P`'`8X@')iIE&.]<L%L*FS&.oHc&c31K',(ul',;2q()@W"rYGJL!#Y\R+WDFC
*ZuXN,UOic.4Zu&0JbLA2`Wo^5!MG)7nHBL:f11#<t>fO%h9-]%h9*[%fQnH$k!FM$OR1H#R1J:"9n`,
pB(BspB1?s#6b56#6kG=$2t85$O[CB%1`pY%h9*\&.T3\%hB-Z%M/OK!t>_L%K-b?%1E[U%1W7G!t5VI
$hjXf!#0TtDes3'An,7U?!LN6<E)jk:/"5l7n,j45s@Fn4#f/V2)I*E0eY14/hJV+/hSe10etOA1c73O
4$,Sh5sdq.7nHBK:/Y%k='8d5?=@>UB5;=%F*;bSI"6d%Ll.7VQC"&2T:r'XW2m),ZaI<R]Y;3)*Zc:?
)]9P2rYGVO'c-`_#8@je',(ul'DrIJ&eYcf&J,H`q@3]?%hK<a&J=mQ#SRja',))p'GgZ_!YuLdrYI7*
)AsG4*$-.D+X/0Y,pt,k/M8_31Gh$M3^#Si6q0[<9MJ>\<"BHL%hK6_%M'$ZrXAi9r<il<#mU_?#6b56
r<2s!!s/Q,!X&Q+!s8W$"8r?/"U"u6"pbG?$4?b?!"Af8'b1`a&.]<_%h9*[%LimY%LrpW%LimH%L*@O
$k<aV%K6h>%1E[Sb5fE[5]h!`CMRQm@UNMI>?Fm);c$4`91_TA6U<t$4?GM^2Dm<J1,1L:/hS_,.kE8)
/h\q61,CaD2E*TW4?c"r6:Eq)7nZQN:fC=n=Bf$9?t*VYBkqU+FEVqWIXm'+LlRR]QC+/5T;&0ZWN38/
['mKV]tb^3*?,q9)ArGirY?"Z()@W#'bh;q',(ul&eYlW')iIE&.fBN%KHt:%MK?a&.oHc&J>]i&eYij
'+tum'c$Z_!#>JKrYI1()B'P6*?Q@G+s\H]-7C;n/MAe62)[BR4?Yko77Kd>9MSG`%h9'\&.]6]%M&II
$k*LO$4@1I#m^_>"U=r/!<WK!"8i5p!s&N,rWEE0"U>5;#7:A:!XfAErXB/D%M'$[%hK3\%g<IS%1WjY
r=8c8rXK)@$k3XU%K-b;%1]!1mf4eVDJNs!@prbO>Zk0/<)QOf9M7rH6UO.'5!1nd3&WWN1bpd?0.nk/
/H..a/1iJ,0/51:1GgpH2`Nl]5!D8!6UjR=9MJ>^<)m%'>[:`G@qTFiDK0`@H$k!iK8#,AOHPosS"61G
Uo(,l%Bd"D[CEi^*uu:>)B'Il(]G0S'bqK!'GV>Z'DiFA&HWLT&,d";%K-b@%hK9a&.oNP')iOJ&ebon
'bpW_!#>JKrYGPOrYcjt*?Q=F+s\E\-7:5m/M8_52)I6P3^#Ym6q0[<9MSFj%Ls$\%h9*[%fQnF$k!FM
$OR1H#R1J:qZQWqq?$BnqZI'+#6kG=$2t85$O[CB%0d:P%h9*\&H3.C%hB*Y%M/IIrXJi:!=]J9%K-b:
%JBdh!#9BeBkCj`?=$l>=&i3t:/4JS8Oc'6@mN:A4?GM]2Dm<I1,1F8/hS_,.k<)".kE8)/h\k41,CaD
2E*TW4?Yko6:4448PDiT;H-Xt=^56=@:Nn^CMn'3G'SF^J:WE1NfT?hR$sS<TqnQbX0/b7[CEgh)]KY5
)#b<Q()7V`(&emM',(ul'D`=B&J,$V&.]<M%Km4M$k3[E%L*FS&.oHc&c31N',(ul',;2q()@W"()7Va
(Fg7?)&aG7*ZcFJ+s\K]-RgPt/hf(;1cIBT4[)(u7Rp$D:(@gG&.T3\%fQn;%/gP>$4."E"pY;7"oSSu
"8i6!!qufq":#)5"U>5;#7:A:!XfAErXBAJ%M'$\%hK3]%M''[%1WpJ%Kd.M%1W:H"q;"M%1WgVr=6sM
_uN)>CM.-d?s[,C=B/@":ej_X8Ol3:5sRUr4#f2X2)I-F0ek=7/hJV*.k2tt.k</&/h\k40etOA2)[BQ
4$5\l5rM%u7n63H:/Fkg<ENI1?!q,OB5)1"EHHDMI"$TuLPh+RPa@c,StDaRW2Zi%ZF%'N*#fe7)#b?K
((:on'bhAs',(ul&eYlW')iLC&H<:>%L!:M%1E[TrXK,C%hK9a&/"mS#87^_'+trk'`JgN()7T#'c-fb
rYHmu)B'P7*?Q@H+s\H]-7C>o/MAh72)[BR4?Pen77Kd>9b.dG%M/OK%LijU$k!CM$4."D"pP58rWE6(
"Si-#!X&,t!<WE!!s&N,rWEW6"U>5:#71_F$4@4MrXAr>%M''K%fd(I%M'$[%1WjY%LimXr=/`9#Rq7Q
%1WgW%Lo!0n,R<@B4G@X?<g]:<E)mn:/";P7R][15!D(j3&ifR1c-sB0eY.3/M&D&.Ocbp.P!##/M8Y/
0ekF>1c.*L3'05d5!_M(7Rp*G9i+bf<ENI1?!q)NB5).!EHHALI!gHsLPUtPPa7]+SY)XQV?s6&Y-PFC
)]BV3rYPPL#Se*j'bhAs',:BY!YQ+ZrY#2B!Y>nRr=0)B%1E[R%1E[Tr=02G&.fEb&J5Wg'+trW'*Jp^
',;8\('#*K(B,*r(`F;3)]^"B+<i'V-71,i.kND.1Gq!J3BTGg5t"148e;LC%h8RLrXB5D$O[:L$4."E
"pP80"9AT-pB1$hpB(F!"8r?+"U>5;#7:A:!XfAErXB,C%M'$[%hK3\rXT)?%1WpI%fHk9%KR"Ir=/c:
nGo*[)J<Pg?=$l>=B/<u:ej\U8Oc'75s@Fo4#f2X%Q-("1,1F8/hS_,.k<(ur[:>e.P!##/M8Y/0/54<
1c.*L3'05c5!_M&7Rp*F9i+_e<ENC/?!^rLB4l!tEH?;KH[L?rKntbNP*VK(SY)XPVQ$W!ZEtMg)#b?N
('>9d()?f_r"Jo>rXf2C%hJUK!t>\J%K6_;%1E[Tr=0#B%hK<a&J=mQ$PO0d',))q'G_H!(&f!J(B><O
)B]t>+!)OK+s\K^-RgPt/hf(;1cIEU4[)(u7Rmt!%h9*K%1N^R$OR7K#mgkA"pG,5r<2isoE,$opB1?s
#6b56#6kG=$2t85$O[CB%0d:P%h9*\&H3.C%hB-Z%M/IIrseo:"q:tM%LijW`;n![7Uok5?!LN6<E)jk
:/"5L7RKL.5!:th3&``Q1c$mA0/"q1/M&D&.Ocbo-RU;k.4Zo"/M8Y/0/54<1c.*L3'02b5!_M&/k/?&
9MJ8[<)m"&>[1TD@qK@hDJsT>GC+^fJVAo?O-5fqR[p(EUo()kY-Jr_rYGVO'c-`_#8@je',(ul'D`=F
&J,Nc%hJUK!t>\J%K$V4%K-b@%hB3`&.oNO&dT-a&ebon'GM>^'`o-c(B,*o(`F81)]]t@+<_pS-7(#g
.kNA-0f(XF3''2b5=@sN%h9*K%0-h8$O@(G#7(M="U##-"Sr3%!WrQ#!ri;t!WiH+!r<#t":557"U>5;
#71_ErX/]7r='#B%h9-]&.T3\"V2(Q%1WpJ%Kd.M%1W:H"q;"M%LrpWR/lm[EaiE_>[(<1<Du^h9hS&I
770@+5!1nd3&WWN1bpd?0.nk//1`;$.4?Sl-7:2i.4Qhu/1iJ,0/51:1GgsI2`Nl]5!VD#77Tj@9heG_
<)m%)>[:`H@qTLlDK0cAH$k'kK85>EOHc&uS"?7HV5C5m!O*F?(]+sV'c%Mu',2)n&eblj'E/XD&HWLT
&,Zn=%1E^B$NghH%1W7G"V2.U&J,QR&dK'_&eblk&et<[r>#AJrYGJL+;c"8)]Tk?+!;aQ,pjre.P!)(
0JbRE2`Wu`5!_UJ%M&II!t5SG$4%"H#mgkA"pG51"9AT-pB13mrW2frpB(F!"9&E-"pG59#6tS7$3CSC
%/p\<%Ls!ZrX]#=rXT5C%Ls!Z%1WmH%K6h?%1E[T%dX1i!$>TT>Zk0/<)ZUg9M7rH6UO.'5!1nd3&WWN
1bpd?0.p0U/M&D&.Ocbo-RL,d-R^Al.P!##/M8Y/0ekF>1c.*L3'05d5!_M(7Rp*F9i+bf<ENC/?!q)N
B5).!EH?;KI!gHsLPUtPP*VK)SY)XPVQ$Wq(]G0S'c%Q"'GV>Z'DiFA&HWLT&,ct?%1N^Tr<iT4r<i]:
$k3[E%L*FT&.oHc&c<:@'*T!_',;5rrY>JKrYGJL*Z,e6)]Ke>*ZuXP,UOid.4Zu&0JbRC2`Wo^5!]Yg
rXB5D$O[:L$4."E"pP8."SW#o!X&N)!W`>t!qufo"9er6"pbG?rX&]7$Om"D"qD+R%M'']rXK)B%h/sX
&,Zq:%K6h>%1E[T^];X[.:-7^=&i3t:ej\U8Oc'65s@Fo4#f/W2)I-F0eY14/hJV).k2tr-mpA@,p"B\
-R^Dn.k</&/hSe10etOA1c@9P4$5Yi5sdq.7kdM.9i+_e<EE=.?!^rLB4l!tDf^)IH[L?rKntbMP*VK(
SY)UOVPt@J()7T"'c%P`'Ef'_&ebrT')iIE&.]<M%Kd.L$k<.CrX/T3!t>YJ%K-b@%hB3`&.oNO&eG]i
&ebon'GM;u'bqK!()Ibf(E!,i(`OJ:*ZuXN,UOic.4Zu&0JbLA2`Ni]4q@Q$%1EUP$4@1I#m^_?"U##-
"SW#o!ri<#!r`5s!qufq":#)5"U>5;#7:A:!XfAErXB5F%M'$[%hK3]%M''P%LimYrXK#>%LimH%Kd.L
$k8F$q>`<V=]\U&;GKt\8Ol6;69m^t4$,D\2)R3H1,1F8/hS_,.k<(u-n$Dh,paf^,pjrd-n-VE.m,C9
/h\k41,CaD2)dKV4$>bn6:4448PDiR;H-Us=^53<@:Nn^CM[p1G'A:\J:WE1MN<pdQ^XJ:TqnOf(D[`$
r=oPO'GV8p&eYlS&d8jY&J,H`r=/o=%1E^E$NpeD#mgt;$iCJ5%L*FS&.oHc&c31H',(ul',;2q(AnmI
(B,*g(`F81)]Tn?+<_pS-7(#g.P38,0f(XE3''5%%0-h8$N^YA#6bA;#6k;7r<2s!!WiH+q#Ua$!<N<'
!<W6$q>p^#!s8<$r<*E1"9f#7#R:YC$N1A2%2B?`%M0-^%hB-\%LrpX%h9'Y%1WgVrXJu=%1MP&UAuE@
=B/=!:ej_X8Oc-95s@Ip4#f2X2)I-F0ek=6/hJV);Ca4G-n$Gi,paf\,UF``-R^Al.P!##/M8Y/0ekF>
1c.*L3'05d5X@_*7Rp*G9i+bf<ENI1?!q,OB5).!EHHALI"$TuLPUtPPa7]+SY)XQrY>bS()@W#'bh;q
r=]5F&ek6WrXf2C&.e^L!t>\J%K-Y:$47(H!XT2@r<i]:$k3[E%MK?a&.oHc&J>]i&eYij'+tum'c$Z_
!#>JKrYHq!)B'P6*?Q@G+s\H]-7C;n/MAe62)I6P4:M`.$O[:L$4."E"pP80"9AT-pB13mrrN-$rW3$#
rrMuurrVos!<`N("9o&6#6kG=$2t85$O[CB%1!FR%h9*\&.T3L%g*7N%M/LJr=/`9!"H[CcN$X@<E)jm
:/";P7RKO/5!;"i3&ifR1c-sB0eY.3/M&D&.Ocbo-RL,c,U+BU,UF``-R^Al.P!##/M8Y/0ekF>1c.*L
3'05d5!_M&01JH)9MJ>]<)m%'>[:`G@qTFiDK0`@H$k!iK8#,AOHPosR[p(F()@W"()7Mu'`8X@')iIE
&.fBN%Kd.L$k<.C#RUnF$4.%G$4?_>!t>YJ%K-b@%hK9a&.oNP')iON&ebon'bhE!'c$]`rYGPOrYd"#
*?Q=F+s\E\-7:5m/M8_51Gh$N%1EUP$4@1I#m^_>"U##-"SW#o!Xo)1!WiB'!W`<'!W`>t!qufo"9er6
"pbG?rX&]7$Om"D"qD+R%M'']rXK)B%h/sX&,Zq;%K-d#!;caF<E)jk:/"5N7RKL.5!:th3&``Q1c$mA
0/"q1/M&D&.Ocbo-RL,c,U3427j93(,pjue-n-Sq.kE8)/h\k41,CaD2E*TW4?Yko6:4448PDiR;H-Xt
=^56=@:Nn^CMn'3G'SF^J:WE1NfT?hQ^XJ;(B#!I'Ef'_&ebrT&d8jY&J,H`r=/o=%1E^E$Ng_C#n$Y<
!t#>@$N1A2%K-b@%hB3`&.oNO&dT-a&ebon'GM>^'`o-c(B,*e(`F81)]]t@+<i!T-7(#g.kNA-0f(XF
%/gP@$4."E"pY;7"U"u."SW#o!ri<$!ri<#!r`3#!r`5s!qufq":557"U>5;#71_ErX/]7rXBAJ%M'$\
%hK3]%M''[%1WpJ%Kd.M%1W:HjoD=[,uml?:/+AQ7n#d25X%:l3&ifR1c-sB0eY14/M&G'.Ocbo-RL,@
,pXc6+[mS#,palc-n$Mo.k</&/h\k40etOA2)[BQ4$5\l5se"17nZQN:fC=n=Bf$9?t*VYBl%[,FE`"X
IXm'+MN3d_QC+/5rY>nW()7Mu'GD,m'+tokrY#2Brt,2@r=/l<$k<.CrsJT/!X]5@!"/Z4!t>YJ%K6hA
%hB3_&J,QR&dK'_&eblk&et<[r>#AJrYGJL+rD4:)]Tk?+!DgR,pjre.P!)(0JbRE$k!CM$4."D"pP58
rWE6("Si-#!X&6"rrN-$rrN$!rrN-$rrMos!<WE!!s&N,rWEE0"U>5:#7:A:!XfAErXAr>%M''K%h&pX
%h9*Z%Ls!Z%1WmH%0-mL!7Uur;c$4_91_TA6U<n"4?GM^2Dm<J1,1L:/hS_,.k<(u-n$Gi,paf\qB7%,
,UF``-R^Al.P!##/M8Y/0ekF>1c.*L3'05d5!_M(7Rnn#9MJ>^<)m%)>[:`G@qTLkDK0cAH$k!iK858C
OHPosRhcbS'GV;q'`A^B')iIE&.fBN%Kd.L$k<.C!t#AA$Mk&2$4.%Hr<i]:$k3[E%LWdY&.oHc&J>]i
&eb0W"VML_'bqG^('#*K(B50n(Dn&/)]Ke>+!;aQ,UOid.4Zu&0JbQo$4@1I#m^_>"oAGs"8N#u!WN6$
!WN6#!WN6$!WN6$!Vlfk!s&N,r<*9-#6kG=$2t85$O[CB%1!FR%h9*\&.T3L%g*7M%M/IIrXFkf-NHt<
9M%fF6UO.'4Zkec2`<NM1bpd=0.nk//1W5#.4?Sl-7'r`,5rbb+T<NQ+s\H\-7:/h.4Qhu/1iJ,0/#%8
1GgpH2`Nl]4[).u6UjR;9MJ>]<)m%'>[:ZE@qTFiDK0`@H$aphK8#,AO-5fr()?f_r"Jo>rXf2C%hJUK
!t>\J%K-Y:$47(Hp^%$0#mq%<$NghH%1W7G"qM4U&J,Ndq[s8M'+trl'bh>t()7S`(B,*M)#bEm)]^"A
+<i!T-71)h.kNA-1C=Ks#mgkA"pG,5r<3!"r<)isrrN-$rrN-$quQg!rrN-$rW2ispB1?s#6b56#6kG=
$2t85$O[CB%0d:P%h9*\&H3.C%hB-Z%M/OK!t>_L%H.;h!$tB68Ol6;6:!du4$,D\2)R3H1,1F8/hS_,
.k<(u-n$Dh,paf\rZM:b*s*N++T<NW+s\E[-71)g.4Hbt/1iJ,0/#%81GgpH2`Nl\4[).u6UjR;9MJ8[
<)m"&>[1TD@qK@hDJsT>GC+^fJVAo;O-5eD'GM8q'+trlq@WrD&.oHa&,ct?%1N^Tr<i]7$4.(5#m:SA
#mq(>$iLP5%L*FS&.oHc&c31H',(ul',;2q(B,$M()7Va(EF>2)&aG7*ZcFI+s\K]-RgMs/hdY?#mU_?
#6b56r<2s!!WiH+q#^QsrrW3$rrW#trrW0#!!<-#q?$[!!!<!!r<*E1"9f#7#R:YC$N:D5%/gVL%M'$\
%hK3]%M'$Z%1WmY%LijW%CH2h!$k938Oc-95sRUr4#f2X2)I-F0ek=6/hJV*.k2tr-mp>f,pXc7+TNYa
*rmG^+XA6W,palc-n$Mo.k</&/hSe30etOA2)[BQ4$5\l5se"07nZQ)9i+bf<ENI1?!q,OB5)1"EHHAL
I"$TuLPUtPPSOuJ',2)n&eblj'E/XD&HWLT&,Zn=%1E^E$i^S)#m1M@$4?_>!t>YJ%K-b?%hK9a&/"mS
$54$b'+trk'GD2rr>#AJrYGJL!#QRl)B0Y:+!2UL,UFca-n-Yu0+&!l#R1J:#6"`+!sJ?#q#^QsrrW3$
rrVrrrrW3$rrW3$q#^9m!<`N("9o&6#6kG=$2t85$O[CB%0I(M%hARLrso#=!=]M>%M/LJ!"Fnf,>1Tt
6UO.'5!1nd3&WWN1bpd?0.nk//1W5#.4?Sl-7'r`,5r_k+<VaJ*?Q@G+T<NN+s\H\-7:2i.4Qhu/1iJ,
0/51:1GgpH2`Nl]5!D8!6UjR=9MJ>^<)m%'>[:`G@qTLkDK0`@H$k!iK8#,AO;/K,'E/XD')iIE&.fBN
%Kd.L$k<.C!t#AA$Mk&/#l4i0$4.%Hr<i]:$k3[E%L*FT&.oHc&c<:@'*T!^',;5rrY>JKrYGJL(Dn&/
)]Ke>*ZuXP,UOic.4ZtV#m^_>"oAGs"8N#u!WN6$!WN5p!WN6$!WN6$!Vlfk"8`3)"U>5;#7:A:!XfAE
rXB&A%M'$[%hS^M"V2+Q%1WpI%c@>i!$Y!(6UF(&4Zkec2`<NM1GU[<0.nk//1W5#.4?Sl-7'r`,5r_c
+T<G`*?5&"rZ;+_rZO]S,U=Z_-RU;k.P!##/M8Y/0/54<1c.*L3'05c5!_M&7Rp$D9i+_e<EE=.?!^rL
B4l!tDf^)IH[L?pKnta'',(ul'D`=F&J,Nc%hJUK!t>\J%K-Y:$47(Hq?[3/#mgA6!X]5?!"/Z4!t>YJ
%K-b@%hB3`&.oNO&e5Qg&ebon'GM;u'bqK!(B,*M)#bEe)]]t@+<i!T-7(#g.gZIc#6b56r<2isq#^Qs
rrW3$rrVfnrrW0#!!<-#q?$Bnr<*?/"9f#7#R:\8$3CSC%/p\H%Ls!Z%hB3]%h9*\%LimYrXQ:8g&N9d
770@+5!1nd3&WWN1bpd?0/"q0/1`;$.OZ\m-7'r`,lJkn+<M[G*?6%>+!2X(+X/*U,palc-n$Mo.k</&
/h\k40f(UB2)[BQ4$5\l5se"17jL`%:/Fkg<ENI1?!q,RB5)1"EHHDMI"$TuLPcf\',(ul&eYlW')iLC
&H<:>%K[(J%/gS6$MXo1#RC_C#l4i0$4.%Hr<i]:$k3[F%f[(<&-*=A&dK'_&eblk&et<[";V^f()?fa
rtcCd(`=52*$$+C+X/0X-71,j#6kA9#6"`+!sJE%!<NB!!ri<$!ri<#!qZNm!ri<$!ri;s!W`B)q#^X#
"9&E3"pG59#6tPB$OR7L%/p\<%Ls!\rXT,A%M'$["UtqO%h9&.!!Gk_77'9\5Wq4k3&``Q1c$mA0eY14
/M&D&.Ocbo-RL,c,U342ruh=`rZ1t[!$M7a6m<m&,pjuf-n-Vr.kE8)/h\k41,LgF2E*TW4?Yko6:446
8PDlU;H-Xt=^59>@:NqaCMn'3G'SF`JV/`8NYE-@&ek'R!YGtUrt,2@rXK#>%1E^E$Ng_C#n$M8rWr?,
!t#>A$N1>7%1E[Tr=/l>%hS^Pq@WoE'+trlrY,PO()7Q"'c-cb(Dn&/)]Ke=*ZuXN,pald.Otf2"pY;9
"oST"!s&H*qZ?d!rrN-$rrN*#o`>'orrN-$rrMospB1?s%0Zk<#6kG?#mq%I$O[CB%2'-\%h9*\&.T3\
%hB-[%hB-Z%bgui!&.&;7R][15X%:l3&ifR1c-sB0eY14/hAM'.Ocbo-RL,c,U+EU+WqmL*uuFF+<Vh"
+X&$T,palc-n$Mo.k</&/hSe30etRB2)[ER4$5\j5sn"/8P;`P:fC=n=BSm8?t!PXCMRg-F*;hVIY!3.
MN3c5'GD/o'+tuU')iLC&H<:?%Kd.L$k<.C":>JB$4?Y:!!rE-!t#>A$N1>4%0?qI%K-b<%hK<O&c34<
'*]-c'GVB!(&f!J(Dmu-)B0V9+!)OK,UF`a-n6`!#mgkA"pG5/"Si-$!WrQ$!ri<$!r`6#!qu`q!ri<$
!ri;s!rE)u"8`3/"U5/:#mgqH$4@4MrXB&A%M'$[&.ngN#nIOU%M'$Z%1WlO!8dc&9hS&I770@+5!1nd
3&WWN1bpg@0/"q1/1`;$.4?Sl-7'r`,U342!$M7_!$M4`.O68c,pjuf-n-Vr/1`A*/h\q61,LgF2E3ZX
4?c"r6UaI992//X;cQh",$S;Y?t*VYCM[m.FEVqWJ:WE1MN3d_()7Ms'GD,m'+tokrY#/A!Y>kQr=/l<
$k<.C":>JB#n$81rsJ]4!Y#PIr!ic=&.ngQrXoVQ&eYij',)&n'GVAuq\K/I"rJ6s)]Tk?'-A>@,UOfb
.4Qi"0+&!l#R1J:#6"`+!sJE%!WiH+q?$ZtrrW0#rrVusrrW3$rrW3$q#^9m!<`N(":PJ<"pP>>#mq%I
$OdIC%1!FR%h9*]%h9*K%gNOR%h9'Y%LrIJN;s8[9M7lF77':*4W?LF3&``Q1c$mA0eY14/M&D&.Ocbo
-RL,c,U342"<\g/+!CP+8g5N,,pjre-n-Vr.kE8)/h\k41,CaE2E*TW4$>bn6:4448PDlS;H-Xt=^56=
@:Nn`CMn'3G'A:^JV/`8MN<pd'bhAt',2&mq%<fB&.oHbrt#)=!t>\J%K-Y:$47(Hp'Cg.#mq%<$NghH
%1W7G"V2+T&J,QN&dK'`&ebon'GUK\!YuLdrYHRl)AsJ5*?H7E+X/3Y-7C>n/M8^b$4-qC"pY;9"oST#
!s/N*"8N#u!WN6$!WE/t!WN6$!WN6$!Vlcu!s8W$"8r?."U"u6"pbG?$N1>4%/p\C%Ls!Z&.]<^%h9-L
%K[.O%fQn<%Lpth\,[jP:/";P7R][15Wq4k3&``Q1c-sB0eY14/hAM'.Ocbo-RL,c,U342rZM1`"X53<
,pk!/-n$Mo.k</&/hSe10etRB2)[ER4$5Yi5sn"/8P)TN:f:7m=BSm8?=@>VBkqU+F*;hUIY!3.MN3a\
QC&F&'GV;q'GD/U')iLC&H<:?%Kd.L$k<.C!t#AA$MXo0$4.%Hr<i]:$k3[E%KI"?%hS^Pq@`]>rY,GL
()7S`(B,*l(`F;3)]^"A+<i!U,pt)j.kNA-1C=Ks#mgkA"pG27r<2ou!WiH+q?$ZtrrW3$rW<$!rrW3$
rrW3$q#^9mr<*Q5"9eu6#RLeE$OR7L%/p\?%Ls!Z%hB6N%L`jY%Ls!Z%LimW%LilI!9=,.;c$4_91_TA
6U<t$4?GM^2Dm<J1,1L:0.nk..k<(u-n$Gi,paf\,5WN=+s\H\-7:2i.4Qhu/1iJ,0/51:1c.'J3&iu^
5!D8"77KjA9MSD_<)m%)>[CfH@qTQtCMn-6G'SIaJVAo;Nf]EiR%"j,'bhAs',2)n&ek-TrXo/Art#)=
!t>\J%K-Y;$47(H$Mt,3$4.%Hr<i]:$k3[E%K[.P&H3:@&cr^Z')`IL'GD/q'GVB!(&f!J(Ch9#)B0V9
+!2UL,UF`a.1n$[/M8_52%'a!$4."E"pP58qulft!WiH+q?$ZtrrW0#rrW3$rrW3$rrW3$q#^9m!<`N'
":GA;"pbMA$4@1K$Om"D#S%=T%M'*^%M&IK"UtqP%LrsI%fQos!")_):ej_X8Ol3:5or9T4?GM^2E!BK
1,:R;0.nk./1W2!-n$Gj,paf^,5iZR,U=Z^-7:2i.4Qi!/1iJ-0/51:1c.'J3&iu^5!VD$77TpB9hnM`
<E3.*?!^oJ@qTRnDK0cBH$k-nKntVHOHc&uS"BTp$l'Nm'GV;q'+trk&ek6WrXf5E&.]<M%K[(J%K-Y;
$47(G$Mt/0$N1>6%1E^E%f[(>&H3:@&e#Ed&eblk',2/q'c%P](B,*o(`F;3*$$+C+X/0Y,pt,k.kND.
1Gq'!$OR7K#mgh@"pG51"9AT-q#^["!sAH&rrW3$rrW0#r<!!"rrW3$q#UR!!r2p!"9\W+%L*(@"pYG@
$4@1K$k*RSrXKMN%M'*]%Ls!Z%h0!Z%LrpX%fHh:%b1Qi!%CuK;G^+^91_TA6:!k"4?GM]2Dm<I1,1L:
0.nh-.k<(u-n$Gi,paf\rZMRl,UF``-R^Al.Qf43/1iJ,0/#%81GgsI2`Nl]4[).u6UjX=9MS>\<)m"&
>[C`F@qKFjDJsT>H$b!kK85>EO-5fqR[p)M'aPQi'GV;q'G;)T&dApZ&J,Ka&,m%@%1N^Tr<i]7$4.(=
#m1M@$4?_>!t>YJ%K-b>%hB3`&-*==&d/j]&ebrX'`AaJ()7Va(F9n:)&jM8*ZcFJ+seN^-n6`!/hf"9
1cGjO$OR7K#mgkA#6b;8r<2ou!<NB!!ri<$!ri<#!ri<$!ri;s!qufq"9Sf1"U>/7#RLeEr<iT6rXBVQ
%M'$\%hK3]%M''[%M''[%1WgW%1W:HW;u#[@TZ]2;G^+^91_TA6U<t#4?GM^2Dm<J1,1L:0.nk..k<(u
-n$Gi,paf\+X/0X,pjuf-n-Vr.kE8)/h\q61,LgF2E3ZX4?bqp6UO=792&)W;H-Xu=^59@@:NqaCMn-5
&U&GIIY!3.MN3d]QC+,3T;38%'aPQi'GV;q'GD/U')iLC&H<:?%Kd.L$k<.C#RUnF$4.%G$4?_>!t>YJ
%K-b<%hK<O&c34<'*]-c'GVAu(&f!J(D7Q')B0V9+!)OK,UF`a-n6`!/efuq1Gh$O%1N[Q$4@1I#m^_>
"U5//"Si-$!WrQ$!Xo)1!WiB'!W`<'!W`>t!qufo":GA;"pbMA$4@1K$Om"D"qD+R%M'']rXK/D%h0!Z
%LrsI%f[";%KHt9!0R<m>?Fs+;c$4`91_TA6U<t$)*Bu?3&WWN1bpg@0/"q1/1W5#.4?Sl-7'u;,ZuE>
-7:2i.4Qhu/1iJ,0/51:1c.'J3&iu^5!VD$77KjA9hnM`<)m%)>[CfI@qTRmDK0cAH$k-nKntVHOHc&u
S"61IVA9p^'c%Q"()7Ms'GD,m'+tokrY#/A!"f/@rXK#>%1E^E$i^S5$3(A2$NghH%1W7G!Y5hRrXo,B
%hfQg'+trl'GD/q()7T#(&f!J(E"&.)B0V9+!2UL,UOfb.4Qi"0/,1>1cIHYrXB5C$OR7K#mgkA"pG51
"9AT-q#^["!sAB$rrN-$rW3$#rrMospB(F!"9&E3"pG28#RLeE$OR7L%/p\A%Ls!Z%hK9^%fQtD%1WmY
%LimXr=&i=%Liin!58Fp>Zk0/<)QOf9M7lF77'7)4Zkec2`<NM1GU[>0/"q0/1W5#.4?Sl-7'r`,palb
-n$Mo.k</&/hSe13&*0E1c7-L3'02b5!_M&7Rp$D:/4\d<EE=.?!^rLAnc$sDf^)GH[^NuLPgtMP*VH'
SXuRPW#,FK#Se'i'bhAt',:0R"q_CY&.f?_rXK#>%1E^E$NpeD#mq%<$NghH%1W7G"V2+T&J,QN&dK'`
&ebon'GUK\!YuLdrYHIi)AsJ5*$-.D+X/3Y-7C>n/M8_31Gh!M4?WTP%1EUP$4@1I#7(M="pP80"Sr3%
!WiK"!XJf-!WiB(!W`>t!WiH+!r<#t":,/6"U>5;#71b:$NUVDrXB2E%M'$\%hK6^%M/OK!Y5eOrXAo=
%1W7G!=]O7!9sP5?<gW8=&`'o:/";P7R]X05Wq4k3&``Q1c-sB0eY14/M&D&.Ocbo-RSg=3[Q4&-n-Vr
.kE8)/h\k41,LgF2E*TW4?Yko6UO=78PDlU;H-Xt=^59>@:NqaCMn'3G'SF`JVAl:%uu^6QC+,3T;&0\
WtuQf(B,$S()7Mu'GD/n'DW:?&cWFB&,m%@%1N^Tr<rT3r<i]:$k3[E%K[.O&H3:<')WFB'F#9f'bqK!
(B,*g(`F;3)]]t@+<i!U,pt)j.kNA-1G^jH3BTD)57[W$$k!FM$OR1H#R1M;"pOr.q#^X!"8N#u!WE0#
!Vlfk"8r?3"U"u5"pbMA$4@1K$Om"D((Lfb%M'']%M'$[%h9'[%LrpX%1WgVr=/l<%M&45QN._.?<gW8
=&`*p:/";P7R][15X%:lEB#p92)I-F0ek=7/hS\*.k2tr-mp>f-7:2i.4Qhu/1iJ,0/51:1c.'J3&iu^
5!D8"77KjA9MSD_<)m%'>[CfH@qTRmDK0`@H$k'lKntVHOHPosS"61IV5UGs(`*u(()7Q"()7Mu'GD/o
'+tuU')iLC&H<:?%Kd.L$k<.C!"/Z4!t>YJ%K-b<%hK<O&c34>'*o9c'GV;s()@Ya(B,*k(`F;3)]^"A
+<i'W,pt,k.kNA-1Gq!J3]oMh64XS)%1<OO$4@1I#m^_>"U=l-q#^["!sAB$rrE0&!<MutpB19q$O$_=
#RLeE$OR7L%/p\?%Ls!Z%hK<O%L3LT%1WmY%LrCIrXJl;rser;b5fE[5[n/.>[(<3<Du^h9hS&I770@+
5!1nd3&WZO1bpg@0/"q1/1`;$.4?Sl-7:2i.4Qi!/1iJ,0/51:1c.'J3&io[4?c"r6UaL:92//X;cQh"
>?kKB@Uj%dCi467G'SIcJVAo;Nf]KkR%'\>Uo()kXfrWZ(Ddi&(&esW'c%Mu',2)n&eblj'E/XC&HWLS
&,ct>%1E^B$N^bG%K$\;%hK<O&cNCN'+tok&ebom'bhAu!#>AHrYH[o)B'P7*?Q@G+s\K]-RgMq/MAe6
2)[BS4Zkqq71Tn=r=',C$OR7K#mgkA"pG51"9AT-q#^["!sAB$rW2frpB(F!"9&E3"pG28#71\D$OR7M
%/p\;%Ls!Q%M'*]%M&IK#7V.R%LrpX%fHh=%LrpVr=5G"mf706@:3AG=]ea);G^+^91MH?6:!k"4?GM]
2Dm<I1,1L:0.nh-.k<(u-n$Gk-n-Vr.kE8)/h\k41,CaE2E*TW4$>bn6:4468PDlS;H-Xt=^56=@:Nn`
CMn'3G'A:^JV/`8NfT?hQ^XJ;#bn/oWN32-)ArGirtbSK#Sn-h'bqAr&ek'R"q_CY&.f?_rXK#>%1E^D
$NghH%1W7G"V2+T&J,QN&d/j]&ebrX'`AaJ()7Va(EOD3)&jM8*ZcFI+seN^-n6`!/hf"91cIEW4?c&!
7KX,2%M&FH$k!FM$OR1F#R1M;"pOr.q?$d#!X&6"!!2ls!WrN+q?-[!#R(>7#6kG?#n$V=!"Ai9$4[OV
%M0-^%M'$[rXK2E%h9$Y%1WgVr=/i;%fHk1!13a$B4G@X?<gW8=&`'o:/";P7R][15WocC4#f2X2)I-F
0ek=7/hS\*.k3"I-qPj;.k</&/hSe10etRB2)[ER4$5Yi5sn"/8P;`P:f:7m=BSm8?=@>VBkqU+F*;hU
IY!3.MN3d]QC+,3T;8<^X/iD/Zl0i"rYPSMrY5\S'bhAs',2)nq%EZ=rt,2@rXK#>%1E^F$NghH%1W7G
!Y5eQrXnu>r"B8K'bhAu'c$]`rYHgs)B'P6*?Q=F+sJ<Z-R^Gp/M8_51Gh$O4?Pho6q0ZW%M'$Zr='/C
$OR7K#mgkA"pG27r<2ou!WiH+q?$KppB1?s%0Zk<"pP>>#mq%I$O[CB%0d:P%h9*\&H3.E%hB-[%h9'Y
rXSr;rXSr;rso#;!"R-O_uN)=B4G@Y?<g]:=&`*p:/";P7R][15X%:l3&ifR1c-sB0eY14/hAM'.Ocbp
.P!##/M8Y/0ekF?1c70N3'05d5"e1/77KjA9hnM`<)m%)>[CfH@qTRmDK0cAH$k'lKntVHOHc&uS"61I
VPpPtY-PFC)]BV3(`*u(()7Q"()7Mu'GD/o'+trk&ek6WrXo/Art#)=#Rq4O%1<UR%1W7G!Y5hRrXo,B
!YZ1Zr=]GN',2/s'c%Q"rYGJL-5[X>)]Ke>+!;aQ,paof.P!)(0JbRC2`a)a5=.b-7nO='%M''[r=',B
$OR7K#mgkA"pG51"9AT-q#^["!sA2tpB(F!"8r?1"U5/:#mgqH$4@4MrXB&A%M'$[&.njOrXT5C%M'$Z
%1WmH%0I(M%1N4Grseu<ScJ6[.;ip6@q&kQ?!CE4<Du^h9hS&J770@+5!1qe3&WZO1bpg@0/"q1/1`=N
.R5L8/1iJ-0/51:1c.'J3&iu^5!VD$77TpB9hnM`<E3.*?!^oJ@qTRnDK0cBH$k-nKntVHOHc*!S"?7J
VQ$U-Xg#+<[^dCt)B'G0(Ddi&(&esW'c%Mu'bh;p&eblj'E/XC&HWLS&,ct<%K6b9%K-e:&-!4?&cNCO
'+tok&ebom'bhAu(&JdG(FBt;)B0Y:+!2XM,UOfb.4Qi"0/57?2E*Z[5!MA&7Rp'F%M0-\%g!7O%fQnF
$k!CM$4."D"pP58rWE6("Si-$!WrQ!!W`B)q#^X#"9&E5"pG28#71\D$OR7M$k3[F%M93]%hK6]%M'$[
%1WmY%LimXr=&l>%LigUrXK#>%Lrs<!1a*.Des-"@prbO>Zk01<)QOf9M7rH77':*4Zkf43&``Q1c$mA
0eY14/M&D&.P!##/M8Y/0/54<1c70M3'05c5!_M&7S-0F:/Fhf<EE=.?=%&MAnc$uDf^)IH[^NuLPh+Q
P*VK(SY)XQW2lu%ZEpsK],hq2)&a@k(]P9M'aPQi'GV;q'G;)T&dApZ&J,Ka&,m%A%1N^T%K-b?%hB3`
&/"aO";;F]',1?Z"r.mg'c%N"rYHaq)AsJ5*?H7E+sJ<Z-7C>o/M8_51Gh$N4?Pho6q0[<9MYQt":u%R
%M&FH$k!FM$OR1H#R1M;"pOr.q#^X!"8Dot"8Dus":YM;"U>5;#mgqH$4@4MrXBVQ%M'$\%hK3]%M''[
%M''[%1WgW%1W7G!Y#VLrXJf9`;n![.<09BBkLpa@:!2A=BAI":ej\W8Oc-95sRUr4#f2X2)I-F0ek=7
/hS^S.iBli/hSe30etRB2)[ER4$5\j5sn"/8P;`P3)EOQ<ENC/?=72OB5).!EH?;KI"$X#LPh+RP*VK)
SY)^SW2m&'ZF%$L]=f:-*#fe7(`4&*()Hla$5O?j'bh;q',(ulq\&l?rt,2@rXSo:r=/l>&.ngQq\&c>
"r%dd'c%Q"rYGJL!>l_!)B0V9+!)OK,UF`a-n6`!/hf(=1cIHX4?l/#7Rp$D:/MN"%g*:P%hAOI$O[=L
$OR1H#R1J:#5eW"!s/N+"8`/o"8`3/"U5/:#mgqH$4@4MrXB&A%M'$[%hS^M":l"P%M&UN%LrCIrXJl;
rser;rseo:!"G=ro`-F_EGoZ/B4GCZ?<g]:=&`*p:/+AQ7R][15X%:l3&ifR1c-sC0eY140)dCj/M8Y/
0ekF?1c70N3'05d5X@b+7S-6I:/Fkh<ENI1?=75PB5;:#EHHALI"6d%Ll.4SPa7]+StDgUW2m&)ZF%'M
]=f9$+!2OD)]BV3(`*u(()7Q"()7T"'GD/o'+trk&ek6Wr=K)B%hJIG!Y5hRrXo,B$kj6d'+trl'GD/q
()?]^rYI1()B'P6*?Q@G+s\K]-RgMq/MAe62)[BS4Zkqq77Kd>9MSG`%h9*\&.]6]%hAOI$O[=L$OR1H
#R1J:#6"`+!sJE%!WiH+r;u]q!<`N(":PJ<"pP>>#mq%I$OdIC%1!FR%h9*]&.T3L%gNOR%h9'Y%M&FH
!tGeM%/gY9%K-b;%1__)U&Z9YF)Pr4BkCj`?sR#?=B/<u:ej\W7n,p65sRRq4#f0(2Dm<I1,1L:0.nh-
/M8Y/0/54<1c7-L3'02b5!_M&7Rp$D:/4\d<EE=.?!^rLAnc$sDf^)GH[^NuLPgtMP*VH'SY)XQW2Zi#
ZEpsK\\,Yn+<DRE*#fb6)#b?N(((ck()7Mu'b_8o'DW7H&J,Nc&.]9]%fHk@%hB3`&/"aO#87a`',))p
'`AaJ()7Va(GH[E)&jM7*ZcFI+seN^-n6\u/hf"91cIEW4?c&!7Rp$D9i+\e%h9*[%hB3]%h9*K%1N^R
$OR7K#mU_?#6b;8r<2s!!WiE*rW3-'!s8?%!!E0&#R(>7#6kG=#n$V=!"Ai9$4[OV%M0-^%hB-\rXJu?
%hARJ!Y,YKr=/i;%fHk9%Kd.K%1U)Qc2^L_G&qS?Ch[Nl@:3DH=]ea);G^+^91_TA6U<t#4?GM]2Dm<J
1,1L:0.nh//h\k41,LgF2E*TW4?Yko6UO=78PDlU;H-Xu=^58^?=@>VBkqU)F*;hUIY!3.MN3a\QC+,3
T;8<^X/iD/['dEU]Y;8%+s?k+"<8@!)ArGirtbSK#Sn-h'bh;q',10SrXo/Art#&<!Y5eQrXnu>r"K&D
!u2Rd(&f!J(C:os)B0V9*ZcFJ+!N!W-R^Gp/M8_51Gh$O4?Pho6q0[<9MSD]<EThC%f?h>%M'$Zr='/C
$OR7K#mgkA"pG27r<2ou!WiH*pB1?s%0Zk<"pP>>#mq%I$O[CB%2KE`%h9*\&.T3\%hB-[%h9'Y%LimW
%K6k;%K?q;%K-b=$k3XSPQ:O[F*r7VF)c,7CM.-c@:!2A=BAI#:ej\W8Oc-95sRUr4#f2X2)I-F0ek=7
/hSe30etRB2)[ER4$5\j5sn(18P;`P:fC=n=Bf$:?t!PXCMRg-F*;hVIY!3/MN3d]QC+/4T;8?_X0&P1
['mKV]tVA&`uQEL+<DUG*#fe7(`4&*()@W"()@W!'bh;q',(ulq\&l?#S7OX%h9'[&.ngQq\&i@#S[pd
'bhAu()?farYI=,)B'P6*?Q=F+s\H\-RgMq/M8_52)I6Q4Zkqq6q0[=9MSG^<EWQ9%hB-[%hB3^%M&RN
%fHhE$O[:L$4."E"pP58qulft!!;lsqZI91"pP>>#mq%I$O[CB%0d:P%h9*]&H3.E%hB*Z%h9'YrXSo:
!tGeM%/pb:%K-e9%K?k&!2BN:J:)WcFE)5:CM.-d@:!2C=BAL$:ej_X8Ol3:5sRUr3s[f*2E!BK1,:T`
03Bq`1,LgF2E3ZX4?c"r6UaL:92//X;cQh">?tQC@Uj%dCi467G'SIcJVAo;Nf]KkR%'\>Uo(,lXg#+<
[^j#`^r"(2aX/8W+<M[H*?,n8(`4&*()@Ya((:on'bhAs',(ul&eYlW')`CD&.]9Q%hK<O&cNCO'+tok
&ebom'bhAu(&JdG(Fg7?)B0Y:+!2UL,UOfb.4Qi"0/,1>2E*Z[5!MA&7Rp'F:/Oqi=^5>E%K6kD%M'$\
%h9*\%fHhE$k!CM$4."D"pP58rWE6("Si-"!r2p""9Sc<"9\o4"pP;=#mq%I$OdFQ%K6hA%h9*]%h9*K
%gNOR%h9'Y%M&FH":bnN$k<1G$4RIT%1WgW%1EXQ^AuR[9S%Y>GBS%GDes-"@prbN>Zk01<)QOf9M7rH
77':*4Zkec2`<NM1GU[>0/#%81GgsI2`Nl\4[).u6UjX=9MS>\<)m"&>[C`F@qI6*CMn'3G'A:^JV/`8
NfT?hQ^XJ;U8=fhX0/b7[CEi]^;@e-aNGkU+sA*.*X!H%)&a@k(]P9M'aPQi'GV;q'G;)T&df3^&J,Ka
%hK<a&c*+C',(ul'E/^E'`o-c(B,*Z(`F82)]]t@+<_pT,pjT[.P!)'0JP@?2`Wu_5=%\,7nHBL:f14o
>@(_KrXJr>%fHn@&.T3\%fHhF$O[:L$4."E"pY;9"oSSp"8r?."U"u6"pbMA$N1>4%/p\C%Ls!Z&.]<^
%h9-L%L<RU%LimW%LimG%K[(L%fQq9%L*=N%1<ON%$L\g!%EVQIX??`F)c,7BkLpa?s[)@=BAI":ej\W
8Oc-95sRRq4#f2X2)I-Fr\7&$1c.'J3&iu^4[)/!6UjX?9MSD^<)m%'>[CfH@qTLkDK0`@H$b!kKnkPG
OHPosR[p(HV5UGsY-PFB\@]Gg_SsO9bKVC\,pFN=+<DUG*#fe7)#b?O(B,$S()7Mu'GD/o'DW:?&cN@@
&c*.<'*]-c'GVAu(&f!J(GZgG)B0V9+!)OK+seN_-n6`!/hf(;1cIHX4?l/#7Rp$D:/Okg=^,3@AI]4\
%M''[%fHn?%M'$Zr='/C$OR7K#mgkA"pG27r<2`pr<*Q5"9eu6#RLeE$OR7L%/p\?%Ls!Z%hB6N%L3LT
%Ls!Z%LrCIrser;rser;rseo:rXAu=$OR:MjoD=[-&@8+IXHEaFE)58CM.-c@:!2C=BAI#:ej_X8Oc-9
5sRUr4#f3?2Dm<J1,1O@1c70N3'05d5!_P)7S-6I:/Fkg<ENI1?=75PB5;:#EHHALI"$X#Ll.4SPa7]+
SY)^TW2m&)ZF%'M]=l"s`Q-'Cc-[sf,paf\+<M[H*#fe7(`4&*()@W"()@W#'bh;q',(ul&eYlW')iIC
&H3:A&d&a[&eb-V#S[pd'c%N"()?farYI7*)B'P6*?Q@G+s\H\-RgMq/MAe62)I6Q4Zkqq77Kd>9MSG`
<EWR5@:a0`%M'$YrXT8E%hB3^%M''[r=',B$OR7K#mgkA"pG51"9AT-p&b<u"8r?*"U5/:#mL\C$OR7L
%/p\A%Ls!Z%hK9^%fQtD%1WmY%LimXr=&i=%LijF%KHt:%L<LR%1EXP$k!ER!7V!GMMHh7IX?9^F)Pr4
BkCg_?sR#?=B/<u:ej\W7n,p65X7Ip4#f/W2)I*E1GgsH2`Nl\4[)+t6UjR;9MS>\<)m"&>[:ZE@qKFj
Ci=B<GC)&nJ:iW7MN<pdQ^XJ:U8=ffX0/b7[CEc[^;@e-aN;ZPdjcam-7'iZ+<DRE*#fb4)#b?N('kWi
()7Mu'b_;U&d/dX&J,QN&dK'_&ebon'GUK\!YuLdrYH:d)AsJ5*$-.D+X/3Z-7C>n/M8_31Dr#-3BTDf
5t"148PDiT;,p\%?=78TD@I'dr=0/F%M'$[%hK6^%M&II%1EUP$4@1I#7(M="pP80"S`)t":,/6"pY><
#71b9$NLV7%13RT%h9-]&.]9]&,ct=%hARJ!Y,YKr=/i;%fHk:%LWaU$k3XR$OR7L$42^m.KGNeLP(/,
H[0dUDf9H+An,7W?<gW8=&`'o:/";P7R]X05Wq4k3&``Qr\RG/2E*TW4?Yko6:4468PDlU;H-Xt=^59>
@:NqaCMn'3G'SF`JV/`8NfT?hR$sS<U8=fhX0/b8[CEi]^;@k/aNMfRe(-*#-mg5d+sJ-N"s+g*)]9P2
rYPSMrY5\S'bhAs',2&mq%EZ=q@WoE'+trlrY,PO()7Q"'c-cb2]*GO)]Ke=*ZuXN,pald.P!)'0JbLA
2`Wu_5=%\,7nHBL:f14q>@(`JAo;St%1WmZ%Ls![%fHnB&.T3\%LijW%1N[Q$4@1I#m^_?"U5//"Sr6!
":YM;"U>5;#mgqH$4@4MrXBVQ%M'$[%hK3]%M''[%M''[%1WgW%1W7G!Y#VLrXJf9$4I@Q$k!CN$OR1H
i;ft[.[#jMLP:;.I!KmVEGoZ-B4G@Y?<gW8=&`*p:/";P7R][15X%:l3&ifRD)=+.3&iu^5!D8"6UjX?
9MSD_<)m%'>[CfH@qTRmDK0`@H$k'lKnkPGOHPosS"61IV5UGsY-PFC\@]Gg_SsR:bK\A^f%;T,.OZYj
,pXZW*ZlFC)]BV3(`*u(()7Q"()7Mu'GD/o'+tuU&c`O@')`IL',)&p'GVB!(&f!J(HNBO)B0V9+!)OK
,UF`a-n6`!/hf(=1cIHX4?l/#7Rp'E:/Okg=^59AAS,h"FUeii%Ls!Z%1`sZ%fHn?%M''[r=',B$OR7K
#mgkA"pG5/"T/B!":PG<"pbMA$4@1K$OdIM%1NdW%h9*]&H3.E%hB*Z%h9'YrXSo:rso&<rXSr;r=8f9
"UkeH$k!FA$+0cd!*5DKO,AaIJUi,nG'%_BChmZn@UWSJ>?Fs,;c$4`91_TA6U<t$4?GM^2DmBP3'05d
5X@b+7S-6I:/Fkh<ENI1?=75PB5;=$EHHALI"6d%Ll.4SPVnboS"?7JVPpPtYd1XE\\#Pj_SsR;bK\G`
f%A_2/hJP%-RC)b+s7sL*ZQ+;)Aj;-(D[c$rY>nW()7Ms'GD,m'+tokr"9DO&eYij',)&n'GVAuq\K/I
*>f\5)]Tk?+!;aQ-7(#g.P!)(0JbRE2`a)a5=.dW7Rp'F:/Oqi=^5?CASQ+&Fa4E+%1NdW%h9'J%gWXU
%hK6]%hB0K%1<RP$4@1I#m^_>"U=r/!<WK(!s&N,rWEW6"U5/:#mgqH$4@7NrXB,C%M'$[&.]6\rXT5C
%M'$Z%1WmH%0I(M%1N1F$4RIT%1WgW%1EXQ!XoGDrWrQ1N<"EoP`Uo_LP(/,HZsXSDf0B*An,7W?!LN7
=&`'o:/";N7R]X05Wq4k3&``S3'02b5!_M&7Rp$D:/4\d<EE=.?!^rLAnc$uDf^)GH[^NuLPgtMP*VH'
SY)XQW2Zi#ZEpsK]=bkp_oBd@bg4bgf@o"70.e\(-mg5d+s@47*Zc=A)]9P2rYPSMrY5\S'bhAt',2&m
ob%KC'+trl'bhA\'`o-c(B,+0(`F82)]]t@+<_pT,pk#i.P38,0f(XF3BTDf5t"148PDlU;,p\%?=@>U
DJsT?HOUDo%LimY&,m%G%h9*[%hB3]%h9*J%1EUP$4@1I#7(M="U5//"98Q&":,/6"U>5;#71b9$NLV7
%13RT%h9-]&.T3\&,m%?%hB0L%0@"K%K-b;%1`=Gr=08F%1N[Q$4I:L#m^eA#2fKa!%XM)P`Ur`LP:;.
H[0dUDf9H+B4G@X?<gW8=&`'o:/";P7R][15Wq4k3&jks4$5Yi5sn"/8P)TN:f:7m=BSm8?=@>VBkqU+
F*;hUIY!3.MN3a\QC+,3T;8<^X/iD/['dEU]tVA&`lQ?JcdUIsg>(RA0eY+1.OZYj,pFNUrZ21^)]BV3
rYPSMrY5\S'bhAs',2)npCdB;rtGSM'c%N!rYGJL58Y:W)]Ke>*ZuXN,paoe.P!)'0JbLA2`a&`5=%\,
7nHBL;,L=r>@(`LAo;U0GC+fL%1NdV%1WjY%Ls![%f?h>%M'$Zr='/C$OR7K#mgkA"pG27q?.62"9eu6
#RLeE$OR7L%/p_9%Km:P%hB6N%L`jY%Ls!Z%LimW%LimH%f["<%fQq9%fQnF$k!CN$OR1H#R:P>ZiJe[
=.PeHP`h)bLkUD/I!KmVEGoZ/B4G@Y?<g]:=&`*p:/";P7R][15X%:l3'05d5!_P)7S-6H:/Fkg<ENI1
?=72OB5;:#EHHALI"$X#Ll.4SP*VK)SOoHLVPpPtY-PFC\@]Gi_SsR:bK\G`f%A^3hr?OL0eY.2.Oc_k
,pXZW*ZlFC)]BV3(`*u(()7Q"()7Mu'GD/o'+trk&ebljr=]GN',2/q'c%Q"rYGJL+W)+9)]Ke>+!;aQ
,paof.P!)'0JbRC2`a)a5=.b-7nQH':/Oqi=^59AASQ+&Fa&1^KanS%%1WgV%Ls!Z%1`sZ%M'']%h9*\
%fHhE$O[:L$4."E"pP58rWE3'r<*K3"pP>>#mq%I$O[CB%1!FR%h9*]&.T3L%g<CP%h9'YrXSo:!tGeM
%/pb:%K-bC%1WgU$jmCN$4-kB#mUY?"cWKbT:MF;Q@>!XNeiC?J:)WcFE)5:CM.-d@:!5D=BAL$:ej_X
8Ol3:5sRUr4$5\l5sn(28P;cQ:fC@o=Bf';?t*VYCM[m.FE`"XJ:WE1MN3d_QC+/5T;8?`X0&V3['mNW
]thP)a2uNLdFHh#gYC]HjYo"P0eb43.k)hl-6scX*t054*?,n8(`4&*()@Ya('t]k'bhAs',(ulrXoMN
&ebom'bhAu(&JdG(GcmH)B0Y:+!2XM,UOfb.4Qi"0/,1>2E*Z[5!MA&7Rp'F:/Oqk=^5?CASQ.'Fa8=`
Ko#^<!t>\L%K6h=%h9'J%gidW%M0-\%hB-[%1NaU$k!CM$4."D"pP58qudK6"U5/9#mgqH$4@7N%1W:H
&J#?^&.]6\%h9*Z%M'$Z%1WmH%0R.N%1E^F%M]E_%LimW%LW[R$OdCM#RLeC"pbA8gAnP[0VP)-R$X&!
O,A^FJUVriG&qS?Ch[Kk@:3DH=]ea);G^+^91_TA6:!k"4?Yko6:4X?8P)TN:/Y%k='8d7?=@>UBkqU)
F*;hUIY!-,MN3a\QC"&2T;&0\X/iD/ZaI<T]Y;8%`lQ?IcdUIsg>(QCjQAK\2)?s?/M/G#-7'r^+X$b*
"<8?u)ArGirtbSK#Sn-h'bh;q&ek3V";;F]',1?Zr=oAL'c-cb2Ad>M)]Ke=*ZuXN,pald.P!)'0JP@?
2`Wu_5=%\,7nHBL:f14q>@(`JAo;U0GC+ahLPlTOr=&o?%1NdX&,m%>%hAOK":u%R%M&FH((1KW$OR1H
#R1M;"pG,5"9f#7#RLeEr<iT6rXB/D%M'$\%hK3]%L`jY%Ls![%LimW%LimG%K[(L%fQq9%M9*Y%1EUO
$k!CK#m^b?#6kA9Y5mG[>bn'bS!o\.P)kKUKn4]"H$47KDes-#@preP>Zk01<)QOf9M7rH770@+5!D8"
6UjX?9MSD^<)m%'>[CfH@qTLkDK0`@H$k'lKnkPGOHPosR[p(HV5UGsY-Kmk[CEi^^;@k0aNMiSe(31*
gu%&NkNP#e2Dm9F0.nh+-mp;e+sJ-N+!)C@)B'G0(Ddi&rY5_T'bhAs',2)n')N=H'GV;s()7S`(B,+!
(`F;3)]^"A+<i'W,pt)j.kNA-1G^jH3]oMh6:=:58PDlV;,pb(?==mdAo;U2GC+gjLPq3&%1WgW%1NdV
%1WjY%Ls![%M&FJ!tGhP%fHhS$O[:L$4."E"pP58"9\l4"pbMA$4@1K$Om"D"qD+R%M'']rXK/D%h0!Z
%LrsI%f[";%f[";%f[":%fQn@$k*IO$OZk>"U>5;"pP52"H<BfVPKoWSXPn2P)k'LLkUD/I!KmWEGoZ/
B4GCZ?<g]:=&`*p:/+AQ7R][15X@b+7S-6I:/Fkg<ENI1?=75PB5;:#EHHALI"6d%Ll.4SPa7]+SY)^T
W2m&)ZF%'M]=l"s`Q-*Dc-b"kf\>3=j5fCflTI9g2Dd3E0J4q,.46Df,U+?Q+!)RF)]BV3(`*u(()7Q"
()7T"'GD/o'+trl'GD/q()7T#(&f!J(HE<N)B0V9+!2UL,UOfb.4Qi"0/,1>1cIHY4?l/$7Rp'E:/Oqi
=^5?CASQ+&Fa8=`KnkSIP7.m0rXK5D%1WgV%Ls!Z%K6kD%M'']%h9*\%fHhQ$O[:L$4."E"pP58"U5/:
#mgqH$4@4MrXB,C%M'$[&.f<]rXT5C%M'$Z%1WmH%0I(M%1N1F!"Jl:#Rq7Q$k*LP$OZk>#7(M>"U5,5
"P*R_!&^^OU7\$HR$X&!Nf&UEJ:;ihG&qS>Ch[Kk@:3AG=]e[';G^+^91MH?6:!q*7Rp$D:/4\d=B/F*
>[:ZE@qKFjCi=B<GC+diK85>AO-5fqR[p%EV5UAoY-PCA\@K8d_SaC7bKS;]e^rO1hVdJVkj%Ot4?5>Y
2)?s?/Lr;!-71#_+WqgI*?6"9)ArGirY?%['c%Mu'bqAr&eblk',;2qr=oAL'c-cb";i$p)]LUR*ZcFI
+seN^-n6\u/hf"91c@?V4?c&!7Rp$D9i+\e='K!>@qKUsF*DtZJVT&@Od-CcrXSl9":bnN%M/LJ$4dUW
%M'']%M'$ZrXBGJ$O[:L$4-qC"pY;:"pbG?$N1>4%/p\C%Ls!Z&.]<_%h9-L%Kd4P%LiOM%1WgVr=/i;
%fHk9%M9-Y%1N[Q$4I:L#m^eA"pY>:r<0,#j8`VhW265^Ssu18P`Ur`LP(/,H[0dUDf9H+B4G@X?<gW8
=&`'o:/";P7R][37S-0F:/Fhf<EE=.?=%&MB5).!Df^)IH[^O"LPh+QP*VK(SY)XQW2lu%ZF%$L]=bkp
`?iOFbK\A^f%8X2hr*SYkj%R*5<M%g3&WWM0eY+1.OZVi,pFNUrZ21^)]BV3rYPSMrY5VQ'bhAs',:EZ
rY,PO()7Q"'c-cb0c1fI)]Ke=*ZuXN,paoe.P!)'0JbLA2`Wu_5=%\,7nHBL:f14q>@(`LAo;U0GC+fY
JVT/COd2FH%LimW%LimW%1WgV%M''[%M''[r!rl>%h9*J%0m7K$4@1I#mgM7#RC_C$4@1K$Om"D((Lfb
%M'']%M'$[%h9'[%LrpX%1WgVr=/l<%M&IIr=0DJ%1N^R$4I:L#mgkB"pbD;"o\W)"cWKhXfJCsUnOBN
R[97fP)kKUKn4]#H$47KDes3%@preP>Zk01<)ZUg9M7rH77KjA9MSD_<)m%'>[CfH@qTRmDK0`@H$k'l
KntVHOHPosS"61IV5UGsY-PFC\@]Gg_SsR:bK\G`f%A^3hrEe\l0@[+oKkc)4?>G[1c$j>/hJP$-RC&a
+s7pI+!)C@)B'G0(Ddi&'bqK"'bhAs',2)o'bhAu()?farYIR3)B'P6*?Q=F+s\H\-RgMq/M8_52)I6Q
4?Php6q0[=9MSG^<EWR5@:a1kEHQJPIt`Z9O-,]tT`,H#%K6hR%1NdV%1WjY%LipZ%Ls![&.]6]%h9$X
'+GBY$OR7K#mgkA#RLeE$OR7L%/p\?%Ls!Z%hK<O%L3LT%1WmY%LrCIrXJl;rser;rseo:rXB#>$jmCN
$N:>8#6kG;"pOu/!<i\X!4`(fYcXt)VPKoXSXPn2P)kKVKn4c%H$4:LDf0?'@q&kQ>[(<3<Du^h9hS&J
8P;cQ:fC@o=Bf$<?=75PB5;=$EHHALI"6d%Ll.4SPa7]+StDgUW2m&)ZF%'N]=l"s`Q-*Dc-b(mf\>3=
j5oIglg=67p-h;44?Y_b2`*<F0J4q,.46Dg,U+?Q+!)FA)B'G0(Ddi&(&esS'c%Mu'bhAu(&JdG(C1ir
)B0Y:+!2U[+s\K]-RgMq/MAe62)[BS4Zkqq77Kd>9hnPa<EWR7@:a1lEHQPRIt`]:O->j!TVVMr!XoMI
rXK5D%1WgV%Ls!Z%K6kD%M'$\%h9*\%fHhI$k!CM$4."D#mgqH$4@7NrXB,C%M'$[&.]6\rXT;E%M'$Z
%1WjW%0[1M%LrpVr=0SP%LrpX%1WgU$k!IO$4$qE#R1P<"9nc-!X/c4W;u#[J,~>

%%EndBinary
grestore
np
grestore
23.8178 117.311 mo
23.8178 118.011 li
23.5178 118.011 li
22.6978 118.011 22.1578 117.891 21.8878 117.651 cv
21.6078 117.411 21.4778 116.931 21.4778 116.221 cv
21.4778 115.051 li
21.4778 114.561 21.3878 114.221 21.2078 114.031 cv
21.0278 113.851 20.7178 113.751 20.2578 113.751 cv
19.9578 113.751 li
19.9578 113.051 li
20.2578 113.051 li
20.7178 113.051 21.0378 112.961 21.2178 112.771 cv
21.3878 112.591 21.4778 112.251 21.4778 111.761 cv
21.4778 110.591 li
21.4778 109.871 21.6078 109.391 21.8878 109.151 cv
22.1578 108.911 22.6978 108.791 23.5178 108.791 cv
23.8178 108.791 li
23.8178 109.491 li
23.4878 109.491 li
23.0278 109.491 22.7278 109.571 22.5878 109.711 cv
22.4478 109.851 22.3778 110.151 22.3778 110.611 cv
22.3778 111.821 li
22.3778 112.341 22.2978 112.711 22.1578 112.941 cv
22.0078 113.171 21.7578 113.321 21.3978 113.401 cv
21.7578 113.491 22.0078 113.651 22.1578 113.881 cv
22.2978 114.121 22.3778 114.491 22.3778 114.991 cv
22.3778 116.201 li
22.3778 116.651 22.4478 116.951 22.5878 117.091 cv
22.7278 117.231 23.0278 117.311 23.4878 117.311 cv
23.8178 117.311 li
false sop
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
30.4301 111.131 mo
30.2501 112.021 li
30.0301 111.871 29.8001 111.751 29.5601 111.671 cv
29.3201 111.591 29.0701 111.551 28.8101 111.551 cv
28.5201 111.551 28.2501 111.601 27.9901 111.701 cv
27.7301 111.801 27.5101 111.951 27.3401 112.131 cv
27.0601 112.421 26.8401 112.751 26.6901 113.131 cv
26.5301 113.511 26.4601 113.911 26.4601 114.311 cv
26.4601 114.811 26.5801 115.171 26.8301 115.411 cv
27.0701 115.651 27.4501 115.771 27.9501 115.771 cv
28.1901 115.771 28.4601 115.741 28.7401 115.661 cv
29.0201 115.591 29.3101 115.481 29.6101 115.321 cv
29.4401 116.211 li
29.1801 116.321 28.9101 116.391 28.6301 116.441 cv
28.3501 116.491 28.0701 116.521 27.7901 116.521 cv
27.0601 116.521 26.5001 116.341 26.1101 115.981 cv
25.7201 115.621 25.5301 115.111 25.5301 114.431 cv
25.5301 113.871 25.6301 113.351 25.8301 112.871 cv
26.0301 112.391 26.3401 111.961 26.7401 111.581 cv
27.0101 111.321 27.3301 111.131 27.7001 110.991 cv
28.0601 110.861 28.4701 110.791 28.9101 110.791 cv
29.1601 110.791 29.4101 110.821 29.6601 110.881 cv
29.9101 110.941 30.1701 111.021 30.4301 111.131 cv
f
33.5764 111.851 mo
39.8364 111.851 li
39.8364 112.671 li
33.5764 112.671 li
33.5764 111.851 li
33.5764 113.841 mo
39.8364 113.841 li
39.8364 114.671 li
33.5764 114.671 li
33.5764 113.841 li
f
44.0836 115.561 mo
45.6936 115.561 li
45.6936 110.001 li
43.9436 110.351 li
43.9436 109.451 li
45.6836 109.101 li
46.6736 109.101 li
46.6736 115.561 li
48.2836 115.561 li
48.2836 116.391 li
44.0836 116.391 li
44.0836 115.561 li
f
50.3759 115.151 mo
51.4059 115.151 li
51.4059 115.991 li
50.6059 117.541 li
49.9759 117.541 li
50.3759 115.991 li
50.3759 115.151 li
f
63.259 111.851 mo
69.519 111.851 li
69.519 112.671 li
63.259 112.671 li
63.259 111.851 li
63.259 113.841 mo
69.519 113.841 li
69.519 114.671 li
63.259 114.671 li
63.259 113.841 li
f
75.7062 109.751 mo
75.1962 109.751 74.8162 110.001 74.5562 110.501 cv
74.2962 111.001 74.1762 111.751 74.1762 112.751 cv
74.1762 113.751 74.2962 114.501 74.5562 115.001 cv
74.8162 115.501 75.1962 115.751 75.7062 115.751 cv
76.2162 115.751 76.5962 115.501 76.8562 115.001 cv
77.1062 114.501 77.2362 113.751 77.2362 112.751 cv
77.2362 111.751 77.1062 111.001 76.8562 110.501 cv
76.5962 110.001 76.2162 109.751 75.7062 109.751 cv
75.7062 108.971 mo
76.5162 108.971 77.1362 109.301 77.5762 109.941 cv
78.0062 110.591 78.2262 111.531 78.2262 112.751 cv
78.2262 113.981 78.0062 114.921 77.5762 115.561 cv
77.1362 116.201 76.5162 116.521 75.7062 116.521 cv
74.8862 116.521 74.2562 116.201 73.8262 115.561 cv
73.3962 114.921 73.1862 113.981 73.1862 112.751 cv
73.1862 111.531 73.3962 110.591 73.8262 109.941 cv
74.2562 109.301 74.8862 108.971 75.7062 108.971 cv
f
80.0585 115.151 mo
81.0885 115.151 li
81.0885 115.991 li
80.2885 117.541 li
79.6585 117.541 li
80.0585 115.991 li
80.0585 115.151 li
f
93.1418 111.851 mo
99.4018 111.851 li
99.4018 112.671 li
93.1418 112.671 li
93.1418 111.851 li
93.1418 113.841 mo
99.4018 113.841 li
99.4018 114.671 li
93.1418 114.671 li
93.1418 113.841 li
f
106.469 112.461 mo
106.939 112.561 107.309 112.771 107.569 113.091 cv
107.829 113.411 107.969 113.811 107.969 114.271 cv
107.969 114.991 107.719 115.551 107.229 115.941 cv
106.729 116.331 106.029 116.521 105.119 116.521 cv
104.809 116.521 104.489 116.491 104.169 116.431 cv
103.849 116.381 103.509 116.291 103.169 116.171 cv
103.169 115.221 li
103.439 115.381 103.739 115.501 104.069 115.581 cv
104.389 115.661 104.729 115.701 105.089 115.701 cv
105.709 115.701 106.179 115.581 106.499 115.341 cv
106.819 115.101 106.989 114.741 106.989 114.271 cv
106.989 113.851 106.839 113.511 106.539 113.271 cv
106.239 113.031 105.819 112.901 105.279 112.901 cv
104.429 112.901 li
104.429 112.091 li
105.319 112.091 li
105.799 112.091 106.169 112.001 106.429 111.801 cv
106.689 111.611 106.819 111.331 106.819 110.961 cv
106.819 110.591 106.679 110.301 106.419 110.101 cv
106.149 109.901 105.769 109.801 105.279 109.801 cv
105.009 109.801 104.719 109.831 104.409 109.891 cv
104.099 109.951 103.759 110.041 103.389 110.161 cv
103.389 109.281 li
103.759 109.181 104.109 109.101 104.439 109.051 cv
104.759 109.001 105.069 108.971 105.369 108.971 cv
106.109 108.971 106.699 109.141 107.139 109.481 cv
107.579 109.821 107.799 110.281 107.799 110.861 cv
107.799 111.261 107.679 111.601 107.449 111.881 cv
107.219 112.161 106.889 112.361 106.469 112.461 cv
f
110.021 117.311 mo
110.361 117.311 li
110.821 117.311 111.111 117.241 111.251 117.101 cv
111.391 116.961 111.461 116.661 111.461 116.201 cv
111.461 114.991 li
111.461 114.491 111.531 114.121 111.681 113.881 cv
111.821 113.651 112.081 113.491 112.441 113.401 cv
112.081 113.321 111.821 113.171 111.681 112.941 cv
111.531 112.711 111.461 112.341 111.461 111.821 cv
111.461 110.611 li
111.461 110.151 111.391 109.851 111.251 109.711 cv
111.111 109.571 110.821 109.491 110.361 109.491 cv
110.021 109.491 li
110.021 108.791 li
110.331 108.791 li
111.131 108.791 111.671 108.911 111.951 109.151 cv
112.221 109.391 112.361 109.871 112.361 110.591 cv
112.361 111.761 li
112.361 112.251 112.441 112.591 112.621 112.771 cv
112.801 112.961 113.121 113.051 113.581 113.051 cv
113.881 113.051 li
113.881 113.751 li
113.581 113.751 li
113.121 113.751 112.801 113.851 112.621 114.031 cv
112.441 114.221 112.361 114.561 112.361 115.051 cv
112.361 116.221 li
112.361 116.931 112.221 117.411 111.951 117.651 cv
111.671 117.891 111.131 118.011 110.331 118.011 cv
110.021 118.011 li
110.021 117.311 li
f
56.6628 111.781 mo
57.2028 115.161 li
59.7328 110.921 li
60.6828 110.921 li
57.4128 116.391 li
57.0128 118.461 li
56.1128 118.461 li
56.5128 116.391 li
55.8728 112.311 li
55.8128 111.901 55.6228 111.691 55.3128 111.691 cv
55.0728 111.691 li
55.2228 110.921 li
55.5628 110.921 li
56.2028 110.921 56.5628 111.211 56.6628 111.781 cv
f
88.5654 112.921 mo
85.4654 112.921 li
85.3254 113.901 85.3254 114.591 85.4654 115.001 cv
85.6454 115.511 85.9754 115.761 86.4654 115.761 cv
86.9454 115.761 87.3754 115.511 87.7554 115.001 cv
88.0754 114.551 88.3454 113.861 88.5654 112.921 cv
88.7154 112.091 mo
88.7954 111.171 88.7854 110.551 88.6754 110.221 cv
88.4954 109.711 88.1654 109.451 87.6954 109.451 cv
87.1954 109.451 86.7554 109.711 86.3954 110.211 cv
86.1054 110.621 85.8554 111.251 85.6354 112.091 cv
88.7154 112.091 li
87.8354 108.711 mo
88.6154 108.711 89.1554 109.061 89.4754 109.751 cv
89.7854 110.441 89.8254 111.391 89.5854 112.611 cv
89.3454 113.831 88.9454 114.781 88.3654 115.461 cv
87.7854 116.151 87.0954 116.491 86.3154 116.491 cv
85.5354 116.491 84.9854 116.151 84.6754 115.461 cv
84.3654 114.781 84.3254 113.831 84.5654 112.611 cv
84.8054 111.391 85.2054 110.441 85.7854 109.751 cv
86.3654 109.061 87.0454 108.711 87.8354 108.711 cv
f
.8 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
25.6278 104.719 mo
25.6278 21.5594 li
@
108.788 104.719 mo
108.788 21.5594 li
@
25.6278 104.719 mo
108.788 104.719 li
@
25.6278 21.5594 mo
108.788 21.5594 li
@
56.8629 69.9202 mo
55.5229 73.5502 li
58.2029 73.5502 li
56.8629 69.9202 li
56.3029 68.9502 mo
57.4229 68.9502 li
60.2029 76.2402 li
59.1729 76.2402 li
58.5129 74.3702 li
55.2229 74.3702 li
54.5629 76.2402 li
53.5229 76.2402 li
56.3029 68.9502 li
0 1 1 0 cmyk
f
76.0911 52.0742 mo
76.0911 54.7442 li
77.6712 54.7442 li
78.2011 54.7442 78.5911 54.6342 78.8512 54.4142 cv
79.1012 54.1942 79.2311 53.8642 79.2311 53.4042 cv
79.2311 52.9542 79.1012 52.6242 78.8512 52.4042 cv
78.5911 52.1842 78.2011 52.0742 77.6712 52.0742 cv
76.0911 52.0742 li
76.0911 49.0742 mo
76.0911 51.2742 li
77.5511 51.2742 li
78.0312 51.2742 78.3811 51.1842 78.6211 51.0042 cv
78.8611 50.8242 78.9811 50.5542 78.9811 50.1742 cv
78.9811 49.8142 78.8611 49.5342 78.6211 49.3542 cv
78.3811 49.1742 78.0312 49.0742 77.5511 49.0742 cv
76.0911 49.0742 li
75.1012 48.2642 mo
77.6211 48.2642 li
78.3711 48.2642 78.9511 48.4242 79.3611 48.7342 cv
79.7611 49.0542 79.9711 49.4942 79.9711 50.0642 cv
79.9711 50.5142 79.8611 50.8742 79.6511 51.1342 cv
79.4411 51.3942 79.1411 51.5642 78.7411 51.6242 cv
79.2211 51.7342 79.6012 51.9542 79.8711 52.2842 cv
80.1311 52.6142 80.2711 53.0242 80.2711 53.5142 cv
80.2711 54.1742 80.0411 54.6742 79.6012 55.0242 cv
79.1611 55.3842 78.5312 55.5542 77.7211 55.5542 cv
75.1012 55.5542 li
75.1012 48.2642 li
1 /0 /CSD get_res sepcs
0 sep
f
10.61 7.21037 mo
10.126 8.04637 9.774 8.86037 9.543 9.66337 cv
9.301 10.4664 9.191 11.2804 9.191 12.1054 cv
9.191 12.9414 9.301 13.7554 9.543 14.5584 cv
9.774 15.3724 10.126 16.1754 10.61 17.0004 cv
9.752 17.0004 li
9.213 16.1534 8.806 15.3394 8.542 14.5254 cv
8.278 13.7114 8.146 12.9084 8.146 12.1054 cv
8.146 11.3134 8.278 10.5104 8.542 9.69637 cv
8.806 8.88237 9.202 8.05737 9.752 7.21037 cv
10.61 7.21037 li
1 /0 /CSD get_res sepcs
1 sep
f
15.263 12.5344 mo
14.46 12.5344 13.91 12.6334 13.602 12.8094 cv
13.294 12.9964 13.14 13.3044 13.14 13.7444 cv
13.14 14.0964 13.25 14.3824 13.481 14.5804 cv
13.712 14.7894 14.031 14.8884 14.427 14.8884 cv
14.977 14.8884 15.417 14.7014 15.747 14.3054 cv
16.077 13.9204 16.242 13.4034 16.242 12.7544 cv
16.242 12.5344 li
15.263 12.5344 li
17.232 12.1274 mo
17.232 15.5594 li
16.242 15.5594 li
16.242 14.6464 li
16.011 15.0204 15.725 15.2844 15.395 15.4494 cv
15.065 15.6144 14.647 15.7024 14.163 15.7024 cv
13.547 15.7024 13.052 15.5374 12.689 15.1964 cv
12.326 14.8554 12.15 14.3934 12.15 13.8104 cv
12.15 13.1394 12.37 12.6334 12.832 12.2814 cv
13.283 11.9404 13.954 11.7644 14.856 11.7644 cv
16.242 11.7644 li
16.242 11.6654 li
16.242 11.2144 16.088 10.8624 15.791 10.6094 cv
15.494 10.3674 15.076 10.2354 14.537 10.2354 cv
14.185 10.2354 13.855 10.2794 13.525 10.3674 cv
13.195 10.4554 12.887 10.5764 12.59 10.7304 cv
12.59 9.81737 li
12.942 9.68537 13.294 9.57537 13.635 9.50937 cv
13.976 9.44337 14.306 9.39937 14.636 9.39937 cv
15.505 9.39937 16.154 9.63037 16.583 10.0814 cv
17.012 10.5324 17.232 11.2144 17.232 12.1274 cv
f
19.1131 7.21037 mo
19.9711 7.21037 li
20.4991 8.05737 20.9061 8.88237 21.1701 9.69637 cv
21.4341 10.5104 21.5771 11.3134 21.5771 12.1054 cv
21.5771 12.9084 21.4341 13.7114 21.1701 14.5254 cv
20.9061 15.3394 20.4991 16.1534 19.9711 17.0004 cv
19.1131 17.0004 li
19.5861 16.1754 19.9381 15.3724 20.1801 14.5584 cv
20.4111 13.7554 20.5321 12.9414 20.5321 12.1054 cv
20.5321 11.2804 20.4111 10.4664 20.1801 9.66337 cv
19.9381 8.86037 19.5861 8.04637 19.1131 7.21037 cv
f
33.105 8.15637 mo
33.105 9.30037 li
32.731 8.97037 32.346 8.71737 31.928 8.54137 cv
31.51 8.37637 31.081 8.28837 30.619 8.28837 cv
29.695 8.28837 28.991 8.57437 28.507 9.13537 cv
28.023 9.69637 27.781 10.4994 27.781 11.5554 cv
27.781 12.6114 28.023 13.4254 28.507 13.9864 cv
28.991 14.5474 29.695 14.8224 30.619 14.8224 cv
31.081 14.8224 31.51 14.7454 31.928 14.5694 cv
32.346 14.4044 32.731 14.1514 33.105 13.8104 cv
33.105 14.9434 li
32.72 15.2074 32.313 15.3944 31.895 15.5154 cv
31.477 15.6364 31.026 15.7024 30.553 15.7024 cv
29.343 15.7024 28.386 15.3394 27.682 14.6024 cv
26.978 13.8654 26.637 12.8534 26.637 11.5554 cv
26.637 10.2684 26.978 9.25637 27.682 8.50837 cv
28.386 7.77137 29.343 7.39737 30.553 7.39737 cv
31.037 7.39737 31.488 7.46337 31.906 7.58437 cv
32.324 7.71637 32.731 7.90337 33.105 8.15637 cv
f
37.065 10.2354 mo
36.537 10.2354 36.119 10.4444 35.811 10.8624 cv
35.503 11.2804 35.349 11.8414 35.349 12.5564 cv
35.349 13.2824 35.492 13.8434 35.8 14.2614 cv
36.108 14.6794 36.526 14.8774 37.065 14.8774 cv
37.593 14.8774 38.011 14.6794 38.319 14.2614 cv
38.627 13.8434 38.781 13.2824 38.781 12.5564 cv
38.781 11.8524 38.627 11.2804 38.319 10.8624 cv
38.011 10.4444 37.593 10.2354 37.065 10.2354 cv
37.065 9.39937 mo
37.923 9.39937 38.594 9.68537 39.089 10.2354 cv
39.573 10.7964 39.826 11.5664 39.826 12.5564 cv
39.826 13.5464 39.573 14.3164 39.089 14.8664 cv
38.594 15.4274 37.923 15.7024 37.065 15.7024 cv
36.196 15.7024 35.514 15.4274 35.03 14.8664 cv
34.546 14.3164 34.304 13.5464 34.304 12.5564 cv
34.304 11.5664 34.546 10.7964 35.03 10.2354 cv
35.514 9.68537 36.196 9.39937 37.065 9.39937 cv
f
46.47 11.9294 mo
46.47 15.5594 li
45.48 15.5594 li
45.48 11.9624 li
45.48 11.3904 45.359 10.9724 45.139 10.6864 cv
44.919 10.4004 44.589 10.2574 44.149 10.2574 cv
43.61 10.2574 43.192 10.4334 42.884 10.7744 cv
42.576 11.1154 42.422 11.5774 42.422 12.1604 cv
42.422 15.5594 li
41.432 15.5594 li
41.432 9.54237 li
42.422 9.54237 li
42.422 10.4774 li
42.653 10.1254 42.928 9.85037 43.258 9.67437 cv
43.577 9.49837 43.951 9.39937 44.369 9.39937 cv
45.051 9.39937 45.579 9.61937 45.931 10.0484 cv
46.283 10.4774 46.47 11.1044 46.47 11.9294 cv
f
49.418 7.83737 mo
49.418 9.54237 li
51.453 9.54237 li
51.453 10.3124 li
49.418 10.3124 li
49.418 13.5794 li
49.418 14.0744 49.484 14.3934 49.616 14.5254 cv
49.748 14.6684 50.023 14.7344 50.441 14.7344 cv
51.453 14.7344 li
51.453 15.5594 li
50.441 15.5594 li
49.671 15.5594 49.143 15.4164 48.857 15.1304 cv
48.571 14.8444 48.428 14.3274 48.428 13.5794 cv
48.428 10.3124 li
47.702 10.3124 li
47.702 9.54237 li
48.428 9.54237 li
48.428 7.83737 li
49.418 7.83737 li
f
56.238 10.4664 mo
56.128 10.4004 56.007 10.3564 55.875 10.3234 cv
55.743 10.3014 55.6 10.2794 55.446 10.2794 cv
54.885 10.2794 54.456 10.4664 54.159 10.8294 cv
53.851 11.1924 53.708 11.7094 53.708 12.3914 cv
53.708 15.5594 li
52.718 15.5594 li
52.718 9.54237 li
53.708 9.54237 li
53.708 10.4774 li
53.906 10.1144 54.181 9.83937 54.511 9.66337 cv
54.841 9.48737 55.248 9.39937 55.732 9.39937 cv
55.963 9.41037 li
56.04 9.42137 56.128 9.43237 56.238 9.45437 cv
56.238 10.4664 li
f
60.0109 12.5344 mo
59.2079 12.5344 58.6579 12.6334 58.3499 12.8094 cv
58.0419 12.9964 57.8879 13.3044 57.8879 13.7444 cv
57.8879 14.0964 57.9979 14.3824 58.2289 14.5804 cv
58.4599 14.7894 58.7789 14.8884 59.1749 14.8884 cv
59.7249 14.8884 60.1649 14.7014 60.4949 14.3054 cv
60.8249 13.9204 60.9899 13.4034 60.9899 12.7544 cv
60.9899 12.5344 li
60.0109 12.5344 li
61.9799 12.1274 mo
61.9799 15.5594 li
60.9899 15.5594 li
60.9899 14.6464 li
60.7589 15.0204 60.4729 15.2844 60.1429 15.4494 cv
59.8129 15.6144 59.3949 15.7024 58.9109 15.7024 cv
58.2949 15.7024 57.7999 15.5374 57.4369 15.1964 cv
57.0739 14.8554 56.8979 14.3934 56.8979 13.8104 cv
56.8979 13.1394 57.1179 12.6334 57.5799 12.2814 cv
58.0309 11.9404 58.7019 11.7644 59.6039 11.7644 cv
60.9899 11.7644 li
60.9899 11.6654 li
60.9899 11.2144 60.8359 10.8624 60.5389 10.6094 cv
60.2419 10.3674 59.8239 10.2354 59.2849 10.2354 cv
58.9329 10.2354 58.6029 10.2794 58.2729 10.3674 cv
57.9429 10.4554 57.6349 10.5764 57.3379 10.7304 cv
57.3379 9.81737 li
57.6899 9.68537 58.0419 9.57537 58.3829 9.50937 cv
58.7239 9.44337 59.0539 9.39937 59.3839 9.39937 cv
60.2529 9.39937 60.9019 9.63037 61.3309 10.0814 cv
61.7599 10.5324 61.9799 11.2144 61.9799 12.1274 cv
f
67.854 9.71837 mo
67.854 10.6534 li
67.568 10.5214 67.282 10.4114 66.985 10.3344 cv
66.677 10.2684 66.369 10.2244 66.05 10.2244 cv
65.555 10.2244 65.181 10.3014 64.939 10.4554 cv
64.697 10.6094 64.576 10.8294 64.576 11.1264 cv
64.576 11.3574 64.664 11.5334 64.84 11.6654 cv
65.016 11.7974 65.368 11.9294 65.896 12.0394 cv
66.237 12.1164 li
66.941 12.2704 67.436 12.4904 67.733 12.7544 cv
68.019 13.0294 68.173 13.4144 68.173 13.8984 cv
68.173 14.4594 67.953 14.8994 67.513 15.2184 cv
67.073 15.5484 66.457 15.7024 65.687 15.7024 cv
65.357 15.7024 65.027 15.6694 64.675 15.6144 cv
64.323 15.5594 63.96 15.4714 63.575 15.3394 cv
63.575 14.3164 li
63.938 14.5144 64.301 14.6574 64.653 14.7454 cv
65.005 14.8444 65.357 14.8884 65.709 14.8884 cv
66.171 14.8884 66.534 14.8114 66.787 14.6574 cv
67.029 14.5034 67.161 14.2724 67.161 13.9754 cv
67.161 13.7114 67.062 13.5024 66.886 13.3594 cv
66.71 13.2164 66.314 13.0734 65.698 12.9414 cv
65.357 12.8644 li
64.741 12.7324 64.29 12.5344 64.026 12.2704 cv
63.751 12.0064 63.619 11.6434 63.619 11.1704 cv
63.619 10.6094 63.817 10.1694 64.213 9.86137 cv
64.609 9.55337 65.181 9.39937 65.929 9.39937 cv
66.292 9.39937 66.633 9.43237 66.963 9.48737 cv
67.282 9.54237 67.579 9.61937 67.854 9.71837 cv
f
70.7249 7.83737 mo
70.7249 9.54237 li
72.7599 9.54237 li
72.7599 10.3124 li
70.7249 10.3124 li
70.7249 13.5794 li
70.7249 14.0744 70.7909 14.3934 70.9229 14.5254 cv
71.0549 14.6684 71.3299 14.7344 71.7479 14.7344 cv
72.7599 14.7344 li
72.7599 15.5594 li
71.7479 15.5594 li
70.9779 15.5594 70.4499 15.4164 70.1639 15.1304 cv
69.8779 14.8444 69.7349 14.3274 69.7349 13.5794 cv
69.7349 10.3124 li
69.0089 10.3124 li
69.0089 9.54237 li
69.7349 9.54237 li
69.7349 7.83737 li
70.7249 7.83737 li
f
77.5999 7.54037 mo
78.6889 7.54037 li
78.6889 15.5594 li
77.5999 15.5594 li
77.5999 7.54037 li
f
85.8058 11.9294 mo
85.8058 15.5594 li
84.8158 15.5594 li
84.8158 11.9624 li
84.8158 11.3904 84.6948 10.9724 84.4748 10.6864 cv
84.2548 10.4004 83.9248 10.2574 83.4848 10.2574 cv
82.9458 10.2574 82.5278 10.4334 82.2198 10.7744 cv
81.9118 11.1154 81.7578 11.5774 81.7578 12.1604 cv
81.7578 15.5594 li
80.7678 15.5594 li
80.7678 9.54237 li
81.7578 9.54237 li
81.7578 10.4774 li
81.9888 10.1254 82.2638 9.85037 82.5938 9.67437 cv
82.9128 9.49837 83.2868 9.39937 83.7048 9.39937 cv
84.3868 9.39937 84.9148 9.61937 85.2668 10.0484 cv
85.6188 10.4774 85.8058 11.1044 85.8058 11.9294 cv
f
90.8219 7.19937 mo
90.8219 8.02437 li
89.8759 8.02437 li
89.5239 8.02437 89.2709 8.10137 89.1389 8.24437 cv
88.9959 8.38737 88.9299 8.64037 88.9299 9.01437 cv
88.9299 9.54237 li
90.5579 9.54237 li
90.5579 10.3124 li
88.9299 10.3124 li
88.9299 15.5594 li
87.9399 15.5594 li
87.9399 10.3124 li
86.9939 10.3124 li
86.9939 9.54237 li
87.9399 9.54237 li
87.9399 9.12437 li
87.9399 8.46437 88.0939 7.96937 88.4019 7.66137 cv
88.7099 7.35337 89.2049 7.19937 89.8869 7.19937 cv
90.8219 7.19937 li
f
91.6469 7.19937 mo
92.6369 7.19937 li
92.6369 15.5594 li
91.6469 15.5594 li
91.6469 7.19937 li
f
94.6059 13.1834 mo
94.6059 9.54237 li
95.5959 9.54237 li
95.5959 13.1504 li
95.5959 13.7224 95.7059 14.1404 95.9259 14.4264 cv
96.1459 14.7124 96.4759 14.8554 96.9269 14.8554 cv
97.4549 14.8554 97.8839 14.6904 98.1919 14.3494 cv
98.4999 14.0084 98.6539 13.5464 98.6539 12.9524 cv
98.6539 9.54237 li
99.6439 9.54237 li
99.6439 15.5594 li
98.6539 15.5594 li
98.6539 14.6354 li
98.4119 15.0094 98.1259 15.2734 97.8179 15.4494 cv
97.4989 15.6144 97.1359 15.7024 96.7179 15.7024 cv
96.0249 15.7024 95.4969 15.4934 95.1449 15.0644 cv
94.7819 14.6464 94.6059 14.0194 94.6059 13.1834 cv
97.0919 9.39937 mo
97.0919 9.39937 li
f
106.827 12.3034 mo
106.827 12.7874 li
102.284 12.7874 li
102.328 13.4694 102.526 13.9974 102.9 14.3494 cv
103.263 14.7014 103.769 14.8774 104.429 14.8774 cv
104.803 14.8774 105.177 14.8334 105.529 14.7454 cv
105.881 14.6574 106.244 14.5144 106.596 14.3164 cv
106.596 15.2514 li
106.244 15.4054 105.881 15.5264 105.507 15.5924 cv
105.133 15.6584 104.748 15.7024 104.374 15.7024 cv
103.406 15.7024 102.647 15.4274 102.086 14.8774 cv
101.525 14.3274 101.25 13.5684 101.25 12.6114 cv
101.25 11.6324 101.514 10.8514 102.042 10.2684 cv
102.57 9.69637 103.296 9.39937 104.198 9.39937 cv
105.012 9.39937 105.65 9.66337 106.123 10.1804 cv
106.585 10.7084 106.827 11.4124 106.827 12.3034 cv
105.837 12.0174 mo
105.826 11.4784 105.672 11.0494 105.386 10.7194 cv
105.089 10.4004 104.693 10.2354 104.209 10.2354 cv
103.659 10.2354 103.219 10.4004 102.889 10.7084 cv
102.559 11.0164 102.361 11.4564 102.317 12.0174 cv
105.837 12.0174 li
f
113.449 11.9294 mo
113.449 15.5594 li
112.459 15.5594 li
112.459 11.9624 li
112.459 11.3904 112.338 10.9724 112.118 10.6864 cv
111.898 10.4004 111.568 10.2574 111.128 10.2574 cv
110.589 10.2574 110.171 10.4334 109.863 10.7744 cv
109.555 11.1154 109.401 11.5774 109.401 12.1604 cv
109.401 15.5594 li
108.411 15.5594 li
108.411 9.54237 li
109.401 9.54237 li
109.401 10.4774 li
109.632 10.1254 109.907 9.85037 110.237 9.67437 cv
110.556 9.49837 110.93 9.39937 111.348 9.39937 cv
112.03 9.39937 112.558 9.61937 112.91 10.0484 cv
113.262 10.4774 113.449 11.1044 113.449 11.9294 cv
f
119.752 9.77337 mo
119.752 10.6974 li
119.466 10.5434 119.191 10.4334 118.905 10.3564 cv
118.619 10.2794 118.344 10.2354 118.058 10.2354 cv
117.42 10.2354 116.914 10.4444 116.562 10.8514 cv
116.21 11.2584 116.034 11.8304 116.034 12.5564 cv
116.034 13.2934 116.21 13.8654 116.562 14.2724 cv
116.914 14.6794 117.42 14.8774 118.058 14.8774 cv
118.344 14.8774 118.619 14.8444 118.905 14.7674 cv
119.191 14.6904 119.466 14.5694 119.752 14.4154 cv
119.752 15.3284 li
119.466 15.4604 119.18 15.5594 118.894 15.6144 cv
118.597 15.6694 118.278 15.7024 117.948 15.7024 cv
117.046 15.7024 116.32 15.4274 115.792 14.8554 cv
115.253 14.2944 114.989 13.5244 114.989 12.5564 cv
114.989 11.5774 115.253 10.8074 115.792 10.2464 cv
116.331 9.68537 117.068 9.39937 118.014 9.39937 cv
118.322 9.39937 118.619 9.43237 118.905 9.49837 cv
119.191 9.56437 119.477 9.65237 119.752 9.77337 cv
f
126.616 12.3034 mo
126.616 12.7874 li
122.073 12.7874 li
122.117 13.4694 122.315 13.9974 122.689 14.3494 cv
123.052 14.7014 123.558 14.8774 124.218 14.8774 cv
124.592 14.8774 124.966 14.8334 125.318 14.7454 cv
125.67 14.6574 126.033 14.5144 126.385 14.3164 cv
126.385 15.2514 li
126.033 15.4054 125.67 15.5264 125.296 15.5924 cv
124.922 15.6584 124.537 15.7024 124.163 15.7024 cv
123.195 15.7024 122.436 15.4274 121.875 14.8774 cv
121.314 14.3274 121.039 13.5684 121.039 12.6114 cv
121.039 11.6324 121.303 10.8514 121.831 10.2684 cv
122.359 9.69637 123.085 9.39937 123.987 9.39937 cv
124.801 9.39937 125.439 9.66337 125.912 10.1804 cv
126.374 10.7084 126.616 11.4124 126.616 12.3034 cv
125.626 12.0174 mo
125.615 11.4784 125.461 11.0494 125.175 10.7194 cv
124.878 10.4004 124.482 10.2354 123.998 10.2354 cv
123.448 10.2354 123.008 10.4004 122.678 10.7084 cv
122.348 11.0164 122.15 11.4564 122.106 12.0174 cv
125.626 12.0174 li
f
gsave
154.275 104.719 mo
237.435 104.719 li
237.435 21.5594 li
154.275 21.5594 li
cp
clp
154.275 104.719 mo
237.795 104.719 li
237.795 21.1994 li
154.275 21.1994 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 126.919 ]ct
[83.52 0 0 83.52 154.275 22.2 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 116 
/H 116 
/M[116 0 0 -116 0 116 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
![8m8r$D@ir[7Xm!\#QJr@7q#/1piRr\+7*8hr1Y1c.'J2`E]X4$5Yk5XIh,7Rp*E9hnSb<**1+?!^oJ
AnP^b?s[)B=BAI#;GKqZ8Ol6;6U<t&4Zkec3&``R2)I-G1,:R=r\"C,/d_mkr!NE2q[3H7%1N1Eq[WT9
rX]2E&.fEcr=T)Dq@WiC'GLH\#8S$h()7Q"(B,*Q(`=50)#b<Y()@W"()7Q"'bhD]'DrIC'DrII&J5Qd
&J,NQ&-!.=!W3#s!Vc`o!r`<%!ql]t"9\i+":>;:"pY>:#R:YB$N1A3%K6hA%hK6_%h9*J%K-YF$4."D
#R1J:"pP56"9Sc0o`G6s!s@H]XoSJIr$D@ir[7Xm!\#TKr@7q#/M6rSr\+7*#Vn1l1c.'J2`O)_4$5Vg
5X@_(77Kd?9MJ8[<)cq%>?tQD@V0=iBkCg_?<g];=&`*r:/+DR7n,p75s[b!4?PS_2`EWP1c.!D1B'!2
0/"pa$2b/*$N^bG%/gY4%fR"<&-NRV&.oNQ&c`UC&d/j\',2)^'bqDur"TDO()Ic((`E;l&K)E&(Ddi&
'bqK!'c%Jt'b_;\'E&OD'DrIG&J5Qd&cN=E%hB-N!W3#s!V6Bl"9/Gr!s/T."9&E1"U5,8"pP><#mq%<
$iUSC%Ls![&.]<_&.]9]r=/]5%13FK#7(M<"U,)6"9\i+"SMou!X#e0g&M*ur$D@is!Rans!dstr[\""
s"44&r\+7*2)6sD1c.'J2`NcY4?Yhm5sdq-7n63G:/4\d<EE=.?!^rLAnc.#Ch[Kk@:!2C=]\U%;GKpo
9M%`D770C-5Wq7mr\t-A2Dm<J1G^fc0`j!]$2b/+$i^\9%/p_4%fR"<&-NRV&.oNQ&c`UC&d&d[',:E\
!#5AH!YuLdrYHOk)AsJ7*?6"9)Aj8,()@W#()7Q"'GM8q'GD)mrXo5E'DrIG&J5Qc&cN=C%hA^=!rW/j
!r`<%!ql^,"9\f0"9er5"U>59#6tPBr<iT6rXB;H%M'$\%h9'[%hK3]%fHh:%/pVD$47(E#R1J<"U5,6
"9\W+qZH`u!!8,[r$D@is!Rans!dstr[\""s"44&r\"C/0etL?r\Qer2E*TT4$5Yi5X@_*77TpB9MSD^
<)m%'>[C`F@qTLnEH?,9BkLpa?<pc<=B/9t:eaVT8Oc-96:!k#4Zr^'!]N"pr\Od71,:R=0Dl1Q$N^bH
$ig_8%JgS6%g3FT&J5TR&cE=B'E/UR'+trk'GM8r'bhAu'c$]`rYH%])B'P8+!)LD)]BV3(Dlub!YlId
rY,\Q'GD)m&eblj',1<WrXf;F&J5Qc&,ZM-!V-<k!rrDq!u(k@!sA`1"9o#7"pP;=#mq%I$O[CB%0[4O
%h9*\r=8f;!tGhO%fQn=$k!IB$4[@K#R1J<"U5)5"9S`/"SMrP!4)\(-3#=k-iGFp.4QhG.fq7R/cIC%
0E*[;1,C^C1c70M2`Nl]4?Yqp6:+%.7Rp*E9hnSb<**4,?!^oJAnc("F*)J@CM@Bi?s[)B=]\R$;GKqZ
8Ol6=6U<t&4Zkec3&`cS2)I-G1,:R=0Du7Q$N^bG%/gY4%fR"<&-NRV&.oNQ&c`UA&cr^\'E/^L()7Q"
'`o*c(B,*Y(`=84*ZcCE*?,q8)#b<]()@W"()7Q"'bhAr'GD/X&c`UC&dK!\&.oKc&.e^@quQBjrWE0%
p&b@!"9\W+$3^V<#6kA<#71\Dr<rT6rXJr>&H31H%M'$Z&.]<_%M&FHr<j&A#mghB"pP58"pG,4"9&Gt
"0V^^!<+;E-N5Ck-ithI.fCk!/1iIQ0)dO'0g.9J1GgpG2E*TT4$5Yh5X@_(77Tj@9MJ8[<)cq%>[:ZE
@V0=lDf^)GG&qP;BkCg_?<g];=&`*r:/+DR#tIHR6U="'4Zkk+3!hN%2)I-G1GU[>rX/E.!Y#PHr=/W6
rX\u>";)1V&J=sS!#,8C!tu:\'`JgJ'GgT]!#GPM*uGh4)]]t@+<_jK*?6"9(`4&*()@W"()7Q"'GM8q
'`JdE&c`UC&dAp[&.fEb&H2b/!V6Bl"9/Gr!tYS<!sA`1"U5,8"pP;;#mq%<$iUSK%Ls![&.]6]%M'$[
%Ls![&.]9]r=/]5%13FK#7(M<"U,)6"9\i+"Si-""-!<\-3#=l-iGIn.K:ms/,q1#/cIC%0E*[,1,Jnd
6o?k]3&iu^4[)+s6:4138P;`P:/Y%k='8d7?=@>UBl7p3G'eU^G&qY>BkCj`?<pc<=&i0s:/+DR8Oc-9
6:!k"4Zr^'!]N"pr\Oa61,0+Cq$[33rs\l9r=8f:rX\u>!>,nB&cE=B'E/UN'+trk',2/q'bpT]!YuLd
rYHOk)AsJ7+!)OK,U+?P*ul4;)Aj8,()@W#()7Q"rY,JK'GD)mr=],Dr=])A":u.V!Wr<$ncJdmrrW'"
qu[H4"9Sc0"U##5#6kA;#mgt;$NLV7%0[4O%h9-]rXKAJ%LipZ%Ls![&.T3\%fQn;%/pVG$47(G#R1J<
"U5,6"9S`/"Si/N!4W"1,pju<-iGFp.4HbF.fq7Q/cIC%0E*[C1,C^C1c70L2`Nl\4?Yqp6:4127nZKL
:-MKQ<**1+?!^oJAnPpuF*)\TIXH?]F)Gc+An#.S>[(<3<)ZUg9hS&J7RKO/5X%=n4#f2Y2E!EL1c$mB
$MXu1%1NaE%JpY7&,m+C&J,Kc&cE=B'D`=C',2,Z'aGKh()@W"()Hlc!>l[c)B9e>+!MsV,U"6N*?,n7
)#b<Y()@W"()@W#'bhD]'*/^ZrXo2Er"9/F&J,Nd!rN)j!r`<%!qcWr"9\W+%L!%@#6kA<#71\D$OR7L
rXJi:!=ob@%gNRT%h0!X%M&dS%M0-^%h9*J%20*W$4@1I#mU_?"pG26"U"r1"9eN&WW;)[s!I^mr?q^r
.OtBI!\>oTr\"1'r\6hs1G^jE2)[BP3'05b4[;;"6UaI792&&T;H$Or=^,0<@:Eh_Ci=B<H$k-nJ:)Qa
F)Gc-An#1T>[(?4<)Z[i9h\,K7M/'V5sR[u4?PS_2`EWP1c.!Dp^7-4$k3(Dq[WT9rX]2E&.fEcr=T)D
r";"'&ebrm'bqDu'bqK!'c%Q$(Dmu,)]Tn?+<i'X,pjl\+<DOB)]9J0(Ddi&'bqK!'c%Jt'b_8p'DrIE
'+trW&d&^X&/"g@o)emnrrVlr!X&W.rWEQ3"pG59"pbG?$4?_>rXAu?%M'']rXTSN%hB*Z%h9$Y%h9'\
%hK6^%fHk8$OmFM#mU_?"pG28"U"r1rWN*#N;s#,-R\g?!\#TKr[\""s"44&r\+7*:GO^^1c.'J2`NcY
4?Yhm5sdq-7n63G:/4\d<**4-?!^rLAnc.$F*;nXJ;&c4J:)WcF)Gf.An,7U>[(?4<)Z[i9h\,K7R][1
5sRRr4T7;D2`<NM1c+q8!Y#PHrXJ]6!"])?rX]2E&.fEcr=T)Dr"9)F&ebuY'`\sF'`]$K(FL%<)&jS;
*ZuXP-7:2h-6scX*ZZ4>)&a>.(D[c$'c%N!().Gt',:EZr=T)Dr"9&C&J4pBncJdmrrVos&-E%<!sA`1
"U5,8"pP;;#n$S<rXB5F%M'$\%h9*[%h9'H%LNXU%h9'[%hK3]%fHk8$OmFM#mU_?"pG/7"U,#2rWN-$
eH!,[s!Rans!dstr[\""s"44&r\+7*!AZJ11`&#-2`NcY4?Ykn5se"/7nH?I:/Fhf<ED"[>[C`F@qTLn
EH?;MIXm-0NeiC>IX-*XEGT?%@pr\L>?P$-;c6Fd9M%fF770C-5X%=nr\t$>2Dm<Jq[<E5rs\l9q@<K8
rX])B&H3:?&c`UE&eG]h'+tun'bhAs'c%N!()7Va(Bt]p)B0\=*ZZ@I,pjuh.k)hm,pFHQ*ul4<)Aj8,
()@W#()7T#rY,\Q'GD)m&eblj',1<Wrt583ncJdm!!;fq'EeO@"9\l2"pG59"pYG@$4@1K$Om"D"V)"Q
%M'*L%KI%<%KHt9%f[(>%fQt@%M'$ZrXAo;$Ocq@%LEFI"pP;9"p>)4!s8Z/r<'#!jT,<.r?q^r.4Y9H
!\>oTr\"1'r\6u"1G^jE2)[BP3'02a4[;8!6UaI791quS;H$Or=Bf';?t*_^Ci=B:H$k-pLQ7FULOju'
GB@nDCM@Bi?s[)B=BAI#;GKqZ8J"B]6UO.)5Wq4k3&iiU2Dm>g$N^bH%/gY4%fR"<&-NRV&.oNQ&c`UA
&cr^\'E/^O()7Q"'bqK"rYHIi)&jP:*ZlRO-71,k/Lr4q-6s`V*ZZ1=)&W>h$5OBl'c%N!()7Mur=f)A
!#,8C!YGG6o)emnrrVlr!X&W.rWEQ3"pP;:"pbG?#n$V=rXJi:!=ob@%i5]d%h0!Z%LrpX%M'$Y%M'$Z
&.]<_%M&FHr<j&A#mghB"pP58"pG,4"9&H&"8i.^!!"DF-ithI.fCk"/1iG+s"=:(r\7D.1G^jE2)[BQ
3'05b4[;;"6UaL892&&T;H-Us=^,0<@:Eh_DJsT>H$k-rLQ7O^P)b<OJ:)QaF)Gf.An#1T>[(?4<)Z[i
9h\,K7R][15sRRq4T7;A2`<Pk$N^bG%/gY4%fR"<&-<FT&H<@@&c`UC&d&d[',:E\!>H=I'epI>(Ddo*
)&jS;*ZuXP-7:2l/h\h--mp>e+WqgH*#fb4(`*u(()7Q"'bqJu'GV8qrY,5C!#,8C!!2ZmrWE0%p&b@!
"9\W+!!NZ5"U>59#6tPB$N1A3%1<XU%hB3^%M'$[%h8FH!"Ji9$4RIU%Ls![&.]9]r=/]5%13FK#7(M<
"U,)6"9\i+"TJSN!58I4./tar.fLsu/H7=$0)dO'0dJM11GgpG2E*TT4$5Yh5X@_(77TpB9MS>\<)m"&
>[:ZE@qKF1DK0`@H[L?tMN3jdR$WtrLkUA,H$47KCh[Kk@:!2C=]\U%;GKq[8Ol6=6UF((4Ztq,2utrr
rX8`8rs\l9q@<K8rX]2E&.fEcr=T)Dr"95J&ebro'GV>\'`o-c(B,*[(`F82*?Q=F+s\K_.P!+r0f(O:
.k)hm,U+?P*ul4;)Aj8,()@W#()7Q"'GM8q'GD)mr=],DrY"f(rWE0%p&bg."9Sc0"U,)6#6kA;#mgt;
$NLV7%0[4O%h9-]rXK/D%LimX%1WmI%K$\;%1`sS%Ls![&.T3\r=&`8rX0;F$4-qC"pP;9"pG/5!s8Z/
"/Gq^!<+AJ.4HbF.fq7Q/cIC%0E*\'1,C^C1c70L2`Nl\4?Ykn6:4127nZKL:/Fkg='/[4?=75SB5DL-
FEr7_K85JKPaIr-P`Li[JUVujFE;>8B4bU\?!LT9=&`*p:/+AQ7n*kR6U<t$4Zkec3&`bp$N^bH%/gY4
%fR"<&-NRV&.oNQ&c`UD&d8p]&ebrmrY5YR'c%Q"'c%Sa(EaP4)B9e>+!MsV-7CAr0/GIA0.e\&,paf[
+!)FA)AsCk(CCon'bqK"'c%Mu(&\dH&ek6W!YZ1Z!#"o*rWE0%o`G3t"9&E5"U##7"pP><#mgqH$4@7@
%K6h<%hS^N"V)%R%1WpJ%f6\F%Ls!Z%1WmY%M0-^%h9*J%290X$4@1I#mU_?"pG26"U"r1"9\i$!1*Zg
-n$Mo.fCk!/1iIQ0)dO'0k2sp1GgpG2E*QS4$5Vg5X7Y'77Kd?9MJ8[;cHh$>?tQC@V0=jDf^)II"6j)
NfoWoSY)I?P`h&^JUi,lG&qP:BkCg^?<g];=&`*r:/+AQ7n,p75sR[u4?PS_2[^!&$k3(Dq[WT9rX]2E
&.fEcr=T,E')N:N',2)p'bhDu'c%N!()Hlc+rD1:*$-.D+s\K^-n?o'1Gh$I1G:@2-m^2c+WqgH)]KY3
rYH%[()7Q"'bqK!'GV8q',19V!YZ1Zo`G*prrVlr!X&W.rWEK1"pP;:"pbG?rsJ]4rXJi:!=ob@%g<FR
%h0!ZrXSr;rXSr;rXK>I%LimY%Ls$\&.]6\r=/]5%giUL#7(M<"U5/7"9\f0"Npe_!!=Vu.OtBI!\>oT
r\"1'r\5rZ1G^jE2)[BQ3'05c4[;;"6UaL892&)U;H-Us=^56=@:Eh_DJsT>H[L?t2M[<UQ^F><UnO?H
Q]dAaKn+PrG&qP;BkCg_?<g];=&`*r:/+DR7n,p75s[b!4Zk\`$OmLQr=/W6rX\u>";)1V&J=sS!#,8C
!tu:\'`JgI'`/UF(B,*c(`4,0*?H7E+s\K_-n?o)1Gh*Q3&EE40eOt)-RL)_+<DOC)]9J0(Ddi&'bqK!
'c%Jt'b_;\'E&OE',(!?rWE0%p&bg."9Sc0"U,)6#6kA;#71b8$iUSC%Ls![&.]6]%M'$Yr!iuA%1WjW
%1WgVr!ii=%hB-["V2+T%hB0K%K-YE$47(E#R1J:"U5,6"9Se!!:Kmh.4QhH/,q1#/cIC%0E*[,1,Jnd
<&HQm3&iu^4[)+s6:4138P;`P:f:7m='8d7?=@>UBl7p3G'e[gKo1nRQ^aP?VPp>bSXYt/NeiC>IX-*X
EGT?$@pr\L>?P$-;c6@b9M%fF77.AJ5sRUs4?*cY%/p_4%fR"<&-3@SrXo)A!#,>E&/,Zi&ebro'GV;s
()7Q"'c-cb1)LoI)]^"A+<i*Y-RpW!0f:dJ4Zkhd1c7!?.k)hm,pFHQ*ul4;)Aj8,()@W#()7Q"rY,YP
'GD)m&eblj'DDS-!rrDq!u(k@!sA`1"9o#7"pP;=#mq%I$O[CB%0[4O%h9-]rXJo=r=08G%LrpW%LrmW
%1NdV%JpVB%hB-[%hB3]%h9*K%0-h9$OmFM#mgkA"pY;9"9eo1p&LH[!@]Ms.fq7Q/cIC%0E*[.1,C^C
?SjVu2E*TW4$5Yk5XIh,7Rp*E9hnSb<**1+?!^oJAnPpuF*)\TJ:iW;OHc-'T;8HeW2-&VR$<YlLOju'
GB@nDCM.6g?s[)B=BAI#:ej_X8Ol6;6U<t&4Zke8%/gY4%fR"<&-NRV&.oNQ&c`UC&d/g[',2,Z'aGKh
'c%N!()Hlc-l<g?*$-.C+s\K^-n?l&1Gh$O5!M.j2`*<D/Lr4q-6s`V*ZZ1<)&W>h$5OBl'c%Q"()7Mu
r=f)Ap]CEsrrViq!<`N(":PG<"pY>:#R:YB$4@7A$iUV7%KR(OrXT/B%hB*Z&,m%G%1NdW%1NdW%1WmI
%1WjX%h9$Y%h9'\%hK6]%fHhJ$O[:L$4."D#R1J:"pP56"Ng__!!"MI.fq7R/cIC%0E*[[1,C^C1c70M
2`Nl]4?Yqq6:4127nZNM:/Y%j='8a5?=@;TBl%^/G'SIcKnk\OPVSVsU84cjY-"XuTq.R8P)b<OJ:)Qa
F)Gc-An#1T>[(?4<)Z[i9h\,K7R][15sRRq%/gY4%fR"<&-NRV&.oNQ&c`UC&dT-`',2)p'bhG]'cn,+
(Ddo*)&jP:*ZuXP-7:2l/h]";3BB>j6pa!s3$:%60.nb'-RL)^+<DOB)]9J0(Ddi&'bqK!'c%Jt'b_;\
'E/X?!r`<%!ql]t"9\i+":>;:"U>59#R:YC$N1A3%0R.N%hB6N%g*:P%h8FH%LijW%LijW%1WjW%1WgV
r!ic;%M&dS%M0-^%hB0K%K-YB$47(E#R1J:"U5,5ScJ6[r[\""s"44&r\+7*>r"2l1c.'J2`NcY4?Yhm
5sdq-7n63G:/4\d<EE=.?!^rLAnc.$F*;nXJ;&l@P*_Q,U8FolZa@$?W262YR$WtrLkUA,H$47HCh[Kk
@:!2C=]\R$;GKq[8Ol5R770C-5X#)Uq@<K8rX]2E&.fEcr=T)Dr"9)F&ebuY'`\sH'`o-c(B,+:(`F82
*?H7E+s\K_.P!,+1Gh*T5!hb07RB4"3&EEG/h8@u-6scX*ZZ4>)&a>.(D[c$'c%N!().Gt',2)m'+trU
!ri?$"9/Gr!tPM;!sA`1"U5,8"pP;;#n$V=!"Ai9((Lfb%M0-\%h9*[%1WjW%LrpW%LrmVrXK/B%LrpW
%LimF%LNXU%h9'[%hK3]%fHk8$OR4J#mU_?"pY;9"n;S`!<4SL/H7=$0)dL,0ekF=1]B382)[BQ3'06+
4[)+s6:F=58P;`P:f:7m=BSm8?=@>VBl7p3G'e[gKo1tTQ^aP?VQ6i*[^iiPXfJ:lSXYt/O,/L?IX-*X
EGT?%@pr\L>?P$-;c6Fd9M%fF770C-5Re2!%fQtA&.fEc&H3:?&c`UE&d]3a'+tun'bhAs!u2Rd(&f!J
(HNBO)B0\=*ZuXQ-7:8p/ho4?3B]Sn7nQKJ7RB=%3&EKI/hJM"-7'iY*Zl@@)B'G/(D[c$()@W#(B,!O
',2)m',(0DrW<-%o`Gm2"9Sc0"U##5#6kA;#mgqH$4@4MrXAo=%M&UN%hJXL!"]#<#7V.Q%1NdW%/gYD
%1WgW%LijW%1NdVr=8i<rso#=!tGhO%fQn=$k!IB$3pkD#R1J<"U;pGaT)Go.kE8(r\"1'r\6Af1G^jE
2)[BP3'02a4[;8!6UaI791quS;H$Or=^,0<?t*_^Ci=B:H$k-pLQ7O^R%9kFWNED30"JX*['$O0Un=3F
P`h&^JUi,lFE;>8BkCg^?<g]:=&`*r:/+AQ7n,p75sPkgq[WT9rX]2E&.fEcr=T)Dq@WiC'GLH\#8S$h
()7Q"(B,*n(`=84*ZcCI,UOid.kWJ21cIHZ6:FC=:eaGJ69I:f1c#Up/h8=r-6s`V*ZZ1=)&W>h%i,oq
'c%N!()7Mu',2)n')Vh1"9/Gr!s/T."9&E1"U5/9"pP><#mgt;$iUV7%KR(OrXT/B%hB*Z&,m(=%K?q<
%K6hF%1E[U%1WjW%LrpWrXK,C%LimY%LrXR%hK6]%fHk8$O@(G#mU_?"pG4!!;-<o.kE8(r\"1'r\7t>
1G^jE2)[BQ3'05b4[;;"6UaL892&&T;H-Us=^56=@:Eh_DJsT>H$k-rLQ7OaR%9tIWNEM6\\>no\[8ZE
W2-,XR$WtrLP:8+GBS%FCh[Kj@:!2C=]\R$;GKq[8Ol6=6NKI^q[WT9rX]2E&.fEcr=T)Dr"9)F&ebuY
'`f!ar"T2IrYJ!?(`=85*ZcFJ,UOle.kWP41c[T\6:XO?;,gCe7n,g-3]JrP0eOt)-RL)^+<DOC)]9J0
(Ddi&'bqK!'c%Jt'b_8p'E&"3!s/N*"8;m!"9\i+":>;:"U>59#6tPB$N1A3%1<XU%hB3^%M'$[%h8FH
rseu<rser;%1NaT%1NdV%LrpW%LimF%LNXT%h9'[%hK6^%fHk8$O7"G#mU_?"pO>nU&Y6G/M6rSr\+7*
!AZJ11_)B$2`NcY4?Yhm5sdq-7oMuP9MS>\<)m"&>[C`F@qKFmEH?;MI"6p.Nfo`uSYE!\Xg>IH^;It.
^:C\XXf/(iSXYt/NeiC>I!KmVEGT?$@pr\K>?P$-;c6@b9M%fF776q^rX\u>!>,nB&cE=B'DrIJ'+trm
'bhAsr=oDM'c%TP(Ddo,)&jS<*ZuXP-7:8n/ho4?3B]Pm7nQKQ='Ja'9hIlA4?PS[2)-^6.46Gf+s7pK
*#fb6(`*u(()7T#'bqM`'ESp^'E/(4"9/Gr!tPM;!sA`1"U5,8"pP;=#n$V=!"Ai9"V)"Q%M00M%KR(M
$OmRU%1WjW%1WjV%K6k;%K6_B%1NdV%LrpW%LimF%LNXU%h9'[%hK3]%fHh:%/pV=$47(G#R1LK!6tQF
/1piRr\+7*5Vb,O1c.'J2E*TW4$5Yi5XIh,7Rp*E9hnM`<**1+?!^oJAnPpuF*)\TIY3E9OHc-'T;8He
YdCsR_8aR9_7V/+['$I.Un=3FP`Li[JUVujFE;>8B4bU\?!LT9=&`*p:/+AQ7n,lD%fR"<&-NRV&.oNQ
&c`UD&d8p]&ebrmrY5YR'c%Q"'c%Sa(F^1=)B9e>+!MsV-7CAr0/GFD3^,bs7nlfZ>@(N5:eaGJ5<Ltc
1c$d:$nE_P,pXWU*ZZ1<)&W>h%Mffp'c%Q"()7Mu',(EKrWE0%o`G3t"9&E5"U##7"pP><#mgqH$4@7@
%K6h<%hS^N"V)%R%1WpJ%f["<%f[";%M'!W$k!CM$k*RT%1WjW%M&II$4[OV%LimY%Ls$\!tYtQ%fHhC
$O[:L$4."D#R6Lnq>^LIr\"1'r\8+B1G^jE2)[BP3'05b4[;8!6UaI792&&T;H$Or=^,0<@:Eh_Ci=B<
H$k-pLQ7O^R%9tIWNED3\\>o"bK\5M_7mIeY-"XuTq.R8P)b<KJ:)QaF)Gc-An#.S>[(?4<)Z[i9h\,K
7f<hr&,m+C&J,Kc&cE=B'D`>5',2)p'bhDu'c%N!()@]&(`4,0*$-.D+s\K^-n?o'1Gh*Q5!h\.9i4ko
@:`kO<)H@[6pa!s3&EEE/h8=r-6s`W*ZZ1=)&W>h$l0Tn'c%N!().Gt'*A.8rrW*#qZ?m&"9\W+$3^V<
#6kA<#71_Er<rT6":bnP%hS^N"V)%R%1WpJ%f["<%f[";%MK9\$k!IO$k!IQ%1WgW%LijW%1W:H$kEgW
%M'$Z&.]<_%M&FHr<i`8$4-qClN![[r\"1'r\53E1G^jE2)[BQ3'05c4[;;"6UaL892&)Y:/Y%j='8d6
?=@>UBl7j1G'eUeKnk\OQ^F><VQ$]([(3og`llf\dEBPI^:CVVXf/(iSX>b,Ne`==I!KmVDJX$!@UWSJ
>?P$,;c6@b9M%bR%fR"<&-NRV&.oNQ&c`UC&d&d[',:E\!#5;F!#GPM!>l_F)&jS;*ZuXP-7:2l/ho.=
3B]Pm7n69N='K*LDe`]b=&D[^7RB4"3&EEG/h8=t-6scX*ZZ4>)&O2,(D[c$'c%N!().GtrWE0%p&bg.
"9Sc0"U,)6#6kA;#71b8$iUSC%Ls!Z&.]6]%M'$YrXK/C%LijW%L`gG%M]E^$O[@L#RUtJ$OmOT%1WjW
%1WgVr!j&C%hB-[%hB3^%hAOIr<i]7$4-sP!7(ZF0)dO'0`a$cr\Qhs2E*TT4$5Yi5X@_(77TpB9MSD^
<)m"&>[C`F@qTLnEH?;MIXm-0Nfo`uSYE!^Xg>IH^;J%8db!4)dEBTZ_nN[iZE:1(Tq.[>P)b?PJ:;ce
F)c#1An,7U?!CH5<Dudl9h\+g%fR"<&-3@SrXo)A!#,>E&/,Zi&ebro'GV;s()7Q"'c-cb/f5KF)]^"A
+<i*Y-RpW!0f:dJ4[28'8ki/a?=@YkGB7M-?<9uu8k)-34?,/T*\f8t.46Gg+s7pK*#fb6(`*u(()7T#
'c%Q!'E\F=o`Gm2"9Sc0"U##5#6kA;#mgqH$4@4MrXB#@%M'$[&,m%=&,ctC%1WjW%1WjVr=0VQ%1<LO
#m^bA$4I7L%1NdV%LrpW%LimE%f[(>%L*FS&.T3\%fQn=$k!IB$31Br!;c`r0)dO'0l8[%1GgpG2E*QS
4$,Pf5X7Y'77Kd?92//Z;cHh#>?tQC@V0=jDf^#GI"6j)Nf]KmSY)^WXg#1C]YVV2cdge,g==Hk`kf<u
['$O0Un=3FP`Li[JUi,lFE;>8B4bU\?<g]:=&`*r:/+@krXSu?"qV=X&.fEcr=T)Dq@WiC'GLH\#8S$h
()7Q"(B,+6(`=84*ZcCI,UOid.kND11cIHZ6:FC=:fLY-AoDsCGAh&$>?"En7mo[+3]AlO0.e\&,pjl\
+!)FA)AsCk(CLuo'bqK!'c%Md!Wr&trr`<(rWEQ3"pP;:"pbG?#n$V=rXJi:!=ob@%g<FR%h0!ZrXSr;
rso&<rXK_R$k*LP$4$nB#7(\G$OdFQ%LimX%1WmI%1WjX%h9$Y%h9'\%hK6]%fHk8$NUS@joD=[r\+7*
+#5W.1c.'J2`NcY4?Pbl5sdq-7Rp*F9hnSc<**4,>tnX6@V0=lDf^)II"6p+NfoWoSYDpZXg>CF^;7h4
dad+2j5AYAdEBPG^:CVVXf/%hSX>Y)Ne`==I!9aTDJNru@UWSJ>?P$,;c6@brX\u>";)1V&J=sS!#,8C
#SRga'GD2r'GgT]%2K]q(Dmu,)]]t@+<i(!-7:2l/h]";3BB>j7n69N<*NdIDg?qgJTl$I@9Z].9h.Z>
4?>GY1G:@2-mp>e+WqgH)]KY3(`*u(()7Q"'bqJc!ql]t"9\i+":>;:"U>59#R:YC$N1A3%1<XU%hB3^
%M'$[%h8FHrseu<rser;)\!5b$Od=I#R1G:#7(YF$OdIR%LimX%1NdV%K$\C%1WmY%M0-^%hB0K%K-Y7
$G$5e!<4_O0ha>Y1GgpG2E*TT4$5Yh5X@_(77Tj@9MS>\<)m"&>[:ZE@qKFmEH?;MI"6p.Nfo`rSYE!\
Xg>IH^;It6db!74kj%?hg=O`q`l#M8\[JfGW262YR$WtrLkUA,H$47HCh[Kk@:!2C=]\U%;GI`5rX]2E
&.fEcr=T)Dr"9)F&ebuY'`\sH'`o-c(B,+.(`F82*?Q=F+s\K_.P!,+1Gh*T5!hb39i4tr@;L"1JrPnN
JTl0M@9Zf19hIlA4?PS[1GLKu.k)hm,U+?P*?6"9)Aj8,()@W#()7Pcp&bg."9Sc0"U,)6#6kA;#71b9
$NLV7%0[4O%h9-]rXKAJ%LimX%1WjW%1WjV%K6hX%1N[Q$jd1F"p>&4"pYD@$k!FP%1WgW%LijW%1W4F
"q;(R%Ls![!tYqQ%fHh:%/pWp!!WEV0ekF=1]B4M2)[BQ3'05c5!VD#77B^<92&)W;H-Xu=^59>@:Nqa
DK0cAH[^L!MNF!fS"6:NX0&_:]Y;;)bL5#!iTT_"mH<Eaf?qd__nNdlZE:1(Tq.[>P)kEQJ:;ceF)c#1
B4G@V?!CH6<Dud+&.fEc&H37A')iLD'E/UR'+trk'GM8r'bhAu'c$]`rYJ*B)B'P8+!2UL,pjuh/M8b8
1c[]`6:XXE;-.(4Cib#VNL-0#Mh-:tC11FM;,BkS69dRl1c7!?/L`%o,pFHQ*ul4<)Aj8,r"]8Ip&bU(
"9Sc0"U##5#7:Y>#71\D$OR7L%/p\B%Ls!Z%hB-[%hJUK#7V.Q%1NdW%/gYZ$k3RO$jd1E"p>)5"9eu7
#RUtI$OmLS%1WjW%1WgV%Lr@Hrt#,>rXT)@%h9*K%0?qG$fM)f!<+]#1,C^C1c70M2`Nl]4?Yqp6:412
7nZKL:/Y"i='8a5?=75SBl%^/89T9+J:iW;P*D?)T;8HgYdCsT_8a[Ee_B'DlLOW<lJpgVe]l:W_7mIe
Y-"XuT:M@6P)b<KJ:)Q_F)Gc-An#.S>[(?4<)`c-";)1V&J=sS!#,2A!YZ7]rY5YR'bqK!'c%Sa(D%E$
)]Tn?+<i'X-7CAs0/GFB2`a,h77U'L<*NdCDg?qiOe/;;ObJ@1De3?]<)H@[6pa!s2`*<D/h8=r-6s`V
*ZZ1=)&W>h";Vaf'c-NG!X&W.rWEQ3"pP;:"pbG?#n$V=rXJi:!=ob@%g<FR%h0!ZrXSr;rso&<rXK&?
%1EUQ*!urW"pP26#6b56"pYDA$k!IQ%1WgW%LimX%1W:H$kEgW%M'$Z&.]<_%M&FHrsQ47f`5&-0etO@
1c.'J2`NcY4?Yhm5sdq-7n63G9hnSc<**4-?!^rKAnc.$F*;nXJ;&c=P*_Q,U84cjZa@9W_oBmJe_B'H
lLOcJp[RP3i7c`/bJqH6\[3TeXf/%hSX>b,Ne`==I!9aTDJX$!@UWSJ>?P$,&.fEb&.oNQ&c`UC&d&d[
',:E\!>H=I'`]$K(HrZQ)&jS;*ZuXP-7:2l/ho.=3BB>j7n69N='K*LDg?qoOe/PRVjrm-JTl$I@9Zf1
9h.Z>4?>GY1GLL4-kRgR,U"9O*?6"9(`4&*()@W"p]D'1"9Sc0"U,)6#6kA;#71_Er<rT6$P!XW%hK6]
%h9*[%K$_9%K?q<%K6h^%1N[Q$jd1F"p>&4#7(M;"9eu7#RUtJ$OmOT%1WjW%1WgVr!iuA%M'$Z%hB3^
!=o\=%0-cq!!4l11]B3r2)[BQ3'05c5!VD#6UaL:92&)U;H-Xt=^59>@:Nn`DK0`@H[^L!MN3jdS"6:N
WNEM8\\>u&bL5"siTT_#q>UCFp[RY6i7cf1bK.T8\[JfGW262YS!T:uLkUA,H$47KCh[Kk@:!5D=]Z.H
&H3:?&c`UE&d]3a'+trm'bhAsr=oAL'c-cb;&C2h)]^"A+<i*Y-RpW!0f:dJ4[)2&8ki/a?=@YkH%M$B
SuK-.Z_s=YMh-(nC11FM;,'YP69I@i1c7!?.k)hm,U+?P*ul4;)Aj8,()@Y\!t>A9!sA`1"9o#7"pP;=
!=9,3$NLV7%0[4O%h9-]rXJo=r=0)B%LrpW%LrmVrXL4`%1<LO#m^e@"9er6$k*LJ"U"u5#7(YF$4@:P
%LimX%1NdV%K$\D%1`sZ%M'']%M'$ZrXIccXoKt-1G^jE2)[?O3'02a4[;8!6UaI791quS:fC=p=Bf';
?t*_\Ci=B:H$k,\K85JKPaJ#6UoCE![(3ic`ll]YgYV#Vo(Dq[s"=3An`o/kg==Hk`kf<u['$I.Un=3F
P`Li[JUVujFE;>8B4bU\?<g]:&J,Kc&cE=B'D`=C',2,Z'aGKh()@W"()Hlc'Gq]+*$-.C+s\K^-n?l&
1Gh$O5!Ltp7nlfZ>@D,^H$tI1St`F"]t(5=S<8MRGAh&$>?"En7moR(3]AlO0.e\&,paf[+!)FA)AsCk
(]P9H!s&N,rWE]7"pP;:"pbG?#mq%I$OcqCrXJr>&H31D%M''Z%M/OKrseu<rser;#Rq1N$Od@J#R;=R
"9f#:%MK6V#6b56#6tMB$k!IP%1WgW%LimXrXB>I%M'$Y%M'$Z&.]<_%M&II\GuU1r;bOO75H_V1c70M
2`Nl]4?Yqq6:4127nZNM:/Y"i='8a5?=@;TBl%^/G'SIcKnk\OPaJ#9UoCK#[(3oe`llf\gYq5Yo(i4]
rs\f!n`o/mg==To`kfA2\[8NAW2-,XR$<boLOju'GBS%FCM@Bi@:!2C&.fEcr=T)Dr";sB&ebrm'bqDu
'bqK!'c%Q$(Dmu,)]Tn?+<i'X-R^Jt0/GFF3^,l!7nli[>@D>dH%Lg6SuJp)_oKX)XJ_SNKn4GdC11=G
;,'PK69I:g1c$d;&1].T-6s`W*ZZ1=)&O2,(DclM!X&W.rWEQ3"pG59"pbG?$4?_>rXAu?%M'']rXT)@
%hB-I%f["<%f[";%Ohhr$k!IM#RCV="9f#:%N?E+$j[%@"9eu7#RUtJ$k3XU%1WjW%1WgVrXK2E%LimY
%Ls$\"V;1T%LilY!<*&O!!G)71c70T2`NcY4?Yhm5sdq-7n63G:/4\d<**4-?!^rLAnc.$F*;nXJ;&l@
P*_Q,U8FolZa@9W_oBmJfA#9JlLOcGs!d^4lK@*Zf?qd]_nN[gZE:(%Tq.R;P)b<OJ:)WcF)Gf.An,7U
>S%JZr=T)Dr"9&E&eb6ZrY5DIq\9)HrYJNN)AsJ7*ZcFJ,UOlg.kWP41c[]_6:XO?;--t1CialRNKKg3
[CX9!c,mi5Z_s=UMh-(nC11=J;,'PM69I@i1c$j=.jubl,U+?P*?6"9)Aj8,qu[H4"9Sc0"U,)6#6kA;
#71b8$NLVQ%1NdW%h9-]%M'$[%LimX%1WjW%1WjV%K6hf%1N[Q$jd1F"p>&4#7M(]+X\HO$k!7C"9eu7
#RUtJ$OmOT%1WjW%1WgVr!j)D%hB-[%hB3]%h9''!9!n\!X/f4!n[K,1c.'J2`NcY4?Ykn5se"/7nH?I
:/Fhf<EE=.?=%&MB5)7'F*;nZJ;&lBP*_Z/U(O9'Xg>IH^;J%8db!@7kjJ$;pAZN7na5MthUg/uaMYa&
[^*$9V4jHLQ]dAbKn+VtG&qY>BkLpa?4deJ&c`UE&eG]h'+tun'bhAs'c%N!()7Va(EF>2)B0\=*ZuXQ
-7:8p/ho4?3B]Sn7nQKQ='f<O2fjD!NL-69[D0W&daZ[d_S*:RS<]"`I<0.3?<9uu8k)-34?,/T0eOt*
-RL,`+<DUE)]BV3(]=FM"9\f0"9eo4"U>59#71\D$OR7L%/p\>%Ls!Z%hJXL!"]#<#7V.Q%1NdW%/gYI
%1N[P$jd1E"p>)5#7M:c+WN3n0-V8I$O-b;"U52;$4I7L%1NdV%LrpW%LimE%f[(>%fQt?%M'&_!!iT,
"VDI["Te`&!8dcC1c70M2`Nl\4?Yqp6:4127nZKL:/Y"i='/[4?=75SBl%^/FEr7aK85JMPaJ#6UoCK#
[(3ic`ll]YgYq5Yo(DqSrsnr!n`o/mg==Hk`kf<uZkomIW2-&VR$<YlLOju'GB@nDCM@Bi?kN>M!#,2A
!YZ7]rY5YR'bqK!'c%Sa(J,G])]Tn?+!MsW-7CAs0/GFD3^,l!7nlfZ>@D,^H%Lg6St`F"_oL'Qf$qsb
_RZbBS<8MVGAh&$>?"En7mo[+3]AlO0.e\&$RI,F+WhaG)]KY3(]FL<"9\i+":>;:"pY>:#R:YB$N1A3
%K6h<%hS^N"V)%R%1WpJ%f["<%f[";%P8+u$k!IN#RCV="9f#:%N?K>2`W]B*>o7k#6b56"pYDA$k!IP
%1WgW%LimXrXB8G%M'$Y%M'$Z&.]<_!"Q[B#Qb)7(`a=r!Wq'U#rOV"3&iu^4?Yqg5sdq-7n63G9hnSc
<**4,?!^rKAnc.$F*;hVJ;&c=P*_Q,U84cjZa@9W_8a[He_B'HlLOcKo`$36p[RP3i7c`/bJqB4\[8ZE
W2-,XR$<boLP:8+GBS%FCh[Kjr=T)Dr"9)F&ebuY'a#-c'c$]_?ksLo(Dmu,)]]t@+<i'X-R^Jt0f(XH
3^,l#7nli[>@D>dH%M$<SuJp)_op?Ug"P*.c,mi5XJ_SNMh-(jC11=G;,'PM69I:g1c$d;.jubl,U"9O
*?6"9(]sjC"9\W+$3^V;#6kA;#71_Er<rT6"V)"Q%hK6T%M'$[%h8FHrseu<rser;0b"R#$Od=I#R1D7
"U>>D)^-[i5!_=g-R'E:#R1G8"U52;$4I:N%1NdV%LrpW%LimF%L<LR%h9'[%hK9&!9jIj!X/lI.lJgk
#6b1`!&ZYn3&iu^4Zu%r6:4138P;`P:/Y%k='8d6?=@>UBl7p3G'eUeKo1nRQ^aP?VQ$]([^j,i$-(0:
fA#9Jmdg2Cs!%4-mH<E]f?qd]_nN[iZE:(%Tq.R;P)b?PJ:)WcF)c#1B)WDC'DrIJ'+trm'bhAsr=oAL
'c-cb,o@O<)]^"A+<i'X-RpW!0f:dJ4[)2&8ki/a>@D>hH%M$BSuK+$]#2_>e_0rV3nVs0ahkTpVjs$1
JTl0M@9Zf19hIlA4?PS[1GLL4.46Gf+s7pK*#fat"9\f0"9er5"U>59#71\Dr<iT6rXB#@%M'$\&,m%J
%h9$Y%LimX%1NdW$k<1G(_$o^$Od=I#R1D8"U>GG)^-pp5!q_*4Z"'1+rLds"pG,5"pYD@$k!FP%1WgW
%LijW%1W4F#7V1S%Ls![&AJ2R!X0/Q.n!3".2<?s!r2iW!'`A#3'02a4[)+t6UaI791quS:fC=p=Bf';
?t*_\Ci=B:H$k'nLQ7I\R%9kFWN381\\,buaNrDkhW3tmp&+=Z&Gu.jlJpaTe]l1T_7[=cY,`88Un=-D
P`Li[JUVujFE;>8B+bgjr=T8I&eYil'E/^O()7T#'bqK"rYJEK)&aJ9*ZlRO,pk#j/MAn:2`a,e77U'K
<*N[@Dg?bdOe/;N]"c;2e^iI0gY:H5eBQ%I\ZDNqObJ4-De36Z<)?:Z6pEdp2`3BE/Lr4q,mbh?+!)FA
)?U*ErWE]7"9o)8"pbG?#mq%I$OcqCrXJr>&H31D%M''Z%M/OKrseu<rser;1(=X#$OR4H#R:P:"U>>D
'H\e`3C-#!6pWgi-QNj/#R:M9"U>8<$OR7M$k3[U%LrpXr=')D%M'$Y%M'$Z&.cPV%KQY<(a(_9@Ses'
'aFd@h#Id?2`NcY4?Ykn5sdCq77TpB9MSD^<)m"&>[:`HAnPmsEH?>NI"@!/Nfo`uSt`*]Xg>OL^r=@<
db*=5kjS*=nGa^.o'Y`#gXjls`l#O$[^3*8VP9WKQ]dAdKn+PtG&qY@BkI>W!#,>E%MKHg&ebro'GV;s
()7Q"!>QCL(N('-)B0\=*[)^Q,pt/m/ho4A3B]Pm7ncZV=^5HQFa8RuR@^Ie]#2b?e_/^4gY(-*bJUp!
WLfH9JpDER@9Zf19hIoB5!:n_1GLL4.OQPg+s7pK*?,ju"9\f0"9eo4"U>59#71\D$OR7L%/p\@%Ls!\
%hK3\rXK;F%h9$Y%LijW%L`gE%O__o$OI+F"p>&4#n.:_,r%>C6pj=*2_cHp%L`RG"U##8#RLnI$OmRE
%LijU%LrpW%LrpX%LimYrXJr>&CgdH!"8o6&K3;n<(&5R&Hr6k!&c\m2`NcY4?Pem5sdq-7n63G9i+_e
<EE=-?!q,OB5;C'F*DnWJVAo?P*_W/U8=ikZaIE\_@"?-dam13kj.g9rq-49r;#pKki(:Hd`]YH^:CVW
Xf8+jSX>Y)Ne`==I!KmVDf09$@f6o>'E/UJ'+trk',:E\0GG9<'bqK!()@]&(`F;3*?H7F+s\H^.4[#*
1H%6U5!hb2:/b.t@r-.1JrPtcX0FRo_p$KXg"P-0cHF,:YGn+UNIlFoCggOI;,'PN69[Fj1c$d;.jubl
,U+?P*ZZ1;(]sjC"9\T*#6k>:"pP;;$2t85$O[CB%1E^V%h9*]%M'$Z%h0'J%KHt;%f["9%MfK^$OI+F
"p>&4#mq.],qCo=5s@4W+V,M%#mUV:"9o,;#n.1M%1W:Hrseu<rsel9#Rq:T%M'$[&.cJT$3CG>)D=!!
(^U?IpAj:T68UPX2`NcY4$5\l5XIh,7Rp*F9i+_d<EE:,?!q)NB5;=%F*)\TJV/c=P*VQ.T;ANhYdM*V
_T0mHf%]0FlgjcKpAYj)p%%D/iS2o/bJqB2\[8TCWMH/W&X\fENe`7;I!KgTDes-"@UKfH&c`UE&c`UE
&mu@e',;5r()@W#()7T#(Ddo,)B0Y;*ZlRO,pk&k/hf(>2`s8j77g6O<Es$GEI!.lPFeST]#2V9e^i9r
a2>KlU7RL&JpD9H@9Z]-9h.W=4utVZ1G:=1-mg8d+s.j0*ZQ+:(`3/R!X&W.r<*?0"pY>:#R:\8$3CSC
%/p\F%Ls!Z%hK6^%M''Z%hJXL!"Jo;rseo:,n1:l$OR1G"p>&4"pthZ+=fB22_#mg%LE@D"9o&9#RUtJ
$k*UE%f["<%f[";%L!@Q%1`sZrXT&A%hAL;_>jiC":?%i(^U9Gg&MX?2)[BP3&iu^4[)+s6:F<u7nH?I
:/Fhf<EE=.?=75SBkqU+F*Dt]JVAuCP*_Z0U8FunZadW_`Q??Pf\bZOn+->Ks!IR4mc`Wdf@%j`_nN[i
Z`U:*U7Id?P)bERJ:;igF)c)3B4G@V&c<7A'E/UU'+trk'GM8r'bhAu'bqK!(B,+M(`=83*?Q=G+snT`
.P38-2)[HX5se(8:/b;'@r-:;JrQ1iX0o^[bgP%ibJV*&WLfH9Jph]V@:!#49hIoB5<V"`2)-^6.OQPh
+s7pK*?,n8(`3/RrWEi9"9\l2"pG59"pYG@$4@1K$Om"D"V)"Q&.]?N%L`gW%h9$Y%LijW%L`gE%O);h
$OI+F"p>&4#n.Le,r%>5+WD+(#6b86"pYD?$jm@O%K-bA$k<aV%1WjWr=/f<rXK&A%h9*[ciEJ6#QXu3
&Ju)`!Wh!T4#AcO2E!KR3'05c5!VD#6UaL892&)W;H-Xt=^56?@V07gDJsT?H[LBuMN3jdR\$7NWNEM7
]>2D+bQlSKgYqA^o(r.]./EH!ki(:Jd`]YJ^:CVWXf81lSX>b,Ne`==I!^$XDf09$@pr\L&J=pR!#,>E
"VVL^&ebuY'aGEf()7Q"'c-cb-Q!^>)]]t@+X/0X-RpW!0f(^J4[)2&8PW2e>[qSmH%M$>Su]91_^s$W
bJUp!WLf63JpDER@9Zf19h.]?5!:n_1GLL4-mp>e+s7pJ*?,k7(`+"d!u(k@!sA`1"9o#7"pP;;#mq%I
$O[CB%0m@Q%hK6_%M/OK"q;(Q%1WjWrXJr;%K$\Q$k*LM#m^_<"9f)?%N?]D+WCn"#6b55"pYD>#n.1L
%1W:H"UtkM%LimF%LW^U%h9*[%hK3]%M$)N"9Jf7"Tn,ml2X7/1c.'I2E*TT4$5Vh5X@_(77Kd?9MJ>]
;cQn%>?tWG@qTRnDf^,JI"@!-Nfo]sSt`'\Xg#4F^r".9dam13jm2L6rqud9r;#pKjPekDd`]YH^:CVT
Xf8+jSX>Y)Ne`7;Hk(FFF)Pl/An#1T?!@jP&c<7A'E/VV'+trk',2)p'bhE!'c%Q"()@]&(`F;3*$-.E
+s\H^.4[#)1H%6U5!h\0:/b.t@r-.1Jr#V^X0K7Ra2>KlWLf6-JpD9N@9Z].9h.W=4ut\\1G:@2-mg8d
+s7pJ*#fb4(`*tg(Ae18"9\i*":#,7#6kA<#7:A:!XfAErXB8G%M'$[&.]9]%M'!Zr=/f:rXSr;r!jbW
$k!@J#R1D7"UPMG)]p"/#mUV:"pP>=#n.1M%1W:Hrseu<rser;"V2(P%hB0L%g<LT%h9'YpAi,3!WiH*
f)Ph,1]B3A2)[BQ3'02a5!VA"6UaI70hY27:f((j='/[4?t!PXBl%^/FEr7bK8>PLQC=D;V5^N"[Ca,h
a3;l\gY_,Yo(N(^s""$?o'5;mgXXWn`kf<u['6U1Un=3FP`Uo\K782nFE;A:B4bU\?<pc;&J4pRr=T)D
rXo2ErXoAJ'GD2r'`8^K'c%Q$:)=`c)B0Y;*ZlRO,pk&k/MJt=2`s8i77g6O<Es$GEI!%iPFeST]"bh[
U7RL&I<faC@9Z]-9h.W:4utVZ1G:=1-mg5c+s.jI*#]\3rYPSMq?$d%"9\T*#6kA;"pP><$2k23$Om"D
!tGeO%fHn?%M''Zrt#)=!"Jo;rXJi:*=WGd$OR1G#Qt86"pthS%LE@D"9o):#RUtJ$k*UE%f["<%f[";
%L!@Q%1`sZrXT#@&,m(=%Eeb?!!!&N!'i7o1GgpG2E!KR3'05c5!VD#6UaL:92&)W;H-Xt=^59@@V07g
DK0`AH[p[$MN3jdS"?@OWNEM:]>2D-bgP,IgYqAbo(r@c0)>)+ki(:Jd`]_L^:C\YXf81lSXYt/Nf&O@
I!^$XEGfK&@pr\M>Zk,>&J,Ndr"8uCrXobU&eblk'GV;s'GVAu'c%N"rYI"#)&aG7+!)RL-7(#h.kWP6
2E<oa6:X^E;d!L<Cit#TNL?B=[CWcFSg'M\JpDER@:!#49hIoB5!:n_2)-^6.OQPg+s7pK*?,k7)#b<P
()?WI'EeO@"9\l2"pG59"pYG@$4@1K$Om"D"V)"Q&.]?L%LN^V%1WjW%1WjV%K$\S$k!FL#m^_<"9f)?
%L`RG"U##8#RLnH$OmRE%LijU%LrpW%LrpX%LimYrXK)B&.T3\%fQp0!:Ko(0ekF>1c.'I2E*TT4$5Yi
5X@_(77Tj@9MJ>]<)m"&>[:`H@qTRpDf^,LI"@!-Nfo`tSt`'\Xg>FI^r=@<dam13kj.g9r;#pKki(:H
d`]YJ^:CVWXf8+jSX>b,Ne`==I!KmVDf09$@LQ[O?!LN6<"KTQ&.oNP&c`UE&d8p]'+trmrY5YP()@W"
()7Va(J5M_)B0\<*[)^Q,pt,l/ho.?3BTJl7nHHS=^5HQEI!.qPFehYWLf63JpD9N@9Zf19h.]?4ut\\
1GLL4-mp>e+s7pJ*?,k5)#b<Q()7SZ!tGG:!sA`1"9o#7"pP;;$2t85$O[CB%0m@Q%h9*]%M/OK!=]S<
%KHt;%f["9%N#T_$OI+F"p>&4#mgh?"9\o7#RLnI$OmRE%f["<%f["9%LW^V%h9*[%hK6^%M&II!"8K#
QiR+?!AZJ11^u<#2`NcY4?Pem5XIh,>t.=W9MJ>];cQn%>?tWF@qTRnDf^,JI"?p+Nfo]sStDjYXg#4F
^r".9cdpk0jm2L1o'5;pgXXWn`kfC"['6[3Un=3FP`h&^K7J>pFE;A:BkCg^?<pc<=&`,t&-3@SrXo)A
!#,>E!#,>E$kj<g'bqDu()7T#'c'CW(Ddo,)B0Y;*[)^Q,pk&k/hf(>2`s8j77g6Q<Es$GEI!.lPFeM?
Ob\O6De<E^<)H@[77'1!2`*<D/h8=s-6scW*Zc:?)&W>h";Vaf'c-NG!X&W.r<*?0"pY>:#R:\8$3CSC
%/p\B%Ls!Z%hK6^%LrRO%1a!K%KHt;%f["9%MfK^$OR1G"p>&4#6b57"pbJA$k!IQ%K6k;%K?q<%K6h@
%h9$Z%hARL!>#e@%fQq;$d&If!'r7m0etL?1c.'J2`E]U4$5Yi5X@_*77TpB9MSD^<)m%'>[CfIAnc$u
EHHDOJ:WE3OHPs"St`*_Xg>ON^r=F>3RZR;iTTb$mc`Wdf@%j`_nNdlZ`U:*U7Id?P)tQTJ:;igF)c)3
B4G@V?<gW8<E)j,&.fEc&.oNP&c`UE&e,Ke'+tun'bhAs'c%N!rYGJL-Q!^?)]^"B+X/6Z-Rp]#0f:jL
4[DD)9Mn_k?t4"qItEZJSsPFgI3*HG@:!#4:eF5E5<V"`2)-^8.OQPh+s7pK*?,n8)#b?N(B5-D"9&E9
!sA`1"9o#7"pP;=#mq%I$O[CB%1!FR%hK6_%Ls$K%LN^V%1WjW%1WjV%K6hQ%1WdS$OI+F"p>&4"U##7
#RLnH$OmOC%L3CP%LijW%Lr@H!"]&="V2+R%h9*K%0?qG$_@@f!<4_O0k`<u1c.'J2E*TT4$5Yi5X@_(
77Tj@9MSD^<)m"&>[:`HAnPmsEH?>NI"@!/Nfo`tSt`*]Xg>OL^r=@<db*=5kj%BjgXjls`l#O$[^3*8
VP9WKQ]dAdKn+PtG&qS>BkCj`?<pe@=]\U&;GI`5rX]/D&.oNP&c`UE&d8p]'+trmrY5YP'c%N!()7Va
(IT)X)B0\=*[)^Q,pt/m/ho.?3B]Pm7ncZV=^5HQFa8RuOc=s<F)58h=&D[a7m]C&3A`NH/h8D!-6scX
*Zc=@)&a@k(BP?e(B,$K!rW5t!u(k@!sA`1"9o#7"pP;;#mq%I$O[CB%0[4O%hK6_r!io?%h9$Y%LrCI
!=TG8%L*=M$OI+F#6"`2"pbJ@$k!FP%K6hQ%1E^V%1NdW%1WjW%M'$[%M'*\%h9*K%0-h9$h44f!<+YN
0bcB!1c.'I2E*TT4$5Vh5X@_(77KdL92&&V;H-Xt=^,0>@Uj%dDJsT?H$k0sLlRXaR\$7MWNEM7]>2;(
bgP(siT/tPe^DX\_7mIeZ`U4&U7I[9P)b<OJ:)WcF)Pl/An#1T?!CH5<)caj:&Y\&&-ELU&J=pR!#,>E
&eblk&ebrm'bqDu()7Q"'c%Q$7i*!\)B0\<*[)^Q,pt,l/hf(>3BTJl7nHHS<Es$MEI!.kJpD9N@9Z].
9h.]?4ut\\1G:@2-mp>e+s7pJ*#fb4(`*u((AnmK('4R2!s/T."8r?-"pG59"pbG?rX&]7$Om"D$P!XW
%M'*\%h9'[%0-q;%KHt;%f["9%L!:M$OI+FrWWT5#RLnI$k3[F%f["<%f["9%Kd.N%hARL":u(S%M&II
r<iT4`;n![!&"7(r\4F/1]B3l2)[BQ3'02a5!VA"6UaI792&&V;H$Rs=Bf'=@:NqcCi=B:H$k0qLlRR_
R\$.JWNED4]=l)%bg4ilgYU]8cca>E]XbDRXf8+gSX>Y'Ne`7;I!KgTDes&u@UNMJ>?Fs+;c6@b9+Lq3
rX])B&H3:?&c`UE&c`UE&igU>',;5r()@W#()7T#(Ddo,)B0Y;*ZlRO,pk&k/MJt=2`s8j77g6O<Es$G
EHutXDe<E^<)?:Z'h(GQ3]AlO0.e\&-70u^+!)IC)AsCk(CLuo'bqK!'c%Md!Wr&t!X&W.r<*?0"pY>:
#R:\8$3CSC%/p\F%Ls!Z%hK6^%M''Z%hJXL!"Jo;rseo:%h/sV$OR1G#7(SB$k!IP%K6k;%K?q<%K6h@
%h9$Z%hARL!>#e@%fQq9$NUS@R/lm[s"=:(r\8.C1GgpG2E*QS3'05c5!VD#6UaL:92&)W;H-Xt=^59@
@V0=iDK0`AH[p[$MN3jdS"?@OX0&_<]>2D-bgP.uf@%j`_nN[iZ`U:*U7Id?P)bERJ:;igF)c)3An,7U
?<gW7<E)jm:.t^^%M&IKrX]/D&.oNP&c`UE&eG]h'+trm'bhAs'c%N!()7Va(HrZR)]Ke>*[)^S,pt/m
/ho4A3B]Yp7ncZV=^Y`UFa8%E@:!#49hIoB5<V"`2)-^6.OQPh+s7pK*?,k7)#b<Z()7T"'c%Mu'a"O>
q?-ZurWEi9"9\l2"pG59"pYG@$4@1K$Om"D"V)"Q&.]?L%LN^V%1WjW%1WjV%K$\E$k!FL#m^eC$jm@O
%K-bA$k<aV%1WjWr=/f<rXK)B&.T3\%fQnA$k!FM$OR4,!29Jm0)dO'0buN#1c.'J2E*TT4$5Yi5X@_(
77Tj@9N+\_;H-Xt=^56?@V07gDJsT?H[LBuLlRXbR\$7NWNEM7]>2D+bgP%ibJqH6\[8]FWMZD\R$Wtr
LP:8+HZjIKDJ<]l@:!5E=]\R%;GKt\91SskrX\u>!tc(V&c<7A'E/UJ'+trk',:E\#8@mg'bqK!(B,*M
(crTR)]]t@+X/0X-RgPu0f(^J4[)2&8PW2e>[qSgCggOL;,'PN69[Om1c$j=.jubl,U+?P*ZZ1;(`<5g
!#GGH!Yc@arWE0%p&c!3"9Sc0"U##5#6kA;#71_F$4@4MrXB)B%M'*]&.T6M%K[(M%fQq<%K6h<$k<+E
$4I=N#m^hG$O[CQrXK)@$k<aV%K$\D%1WmY%h9*]%hB-[rXJc5!X]5=^];X[!%n1&r\+7*5r(5Q1c7-K
2`NcY4?Pem5XIh,7Rp*F9i+_d<EE=-?!q,OB5;=%F*DnWJV/c=P*VQ.U8=ikYdM*Y_T0mHbJq@G^:CVT
Xf8+jSX>Y)Ne`7;I!KmVDes-"@UNMJ>?P$,;c6@b9M7lFr=8f;rX]/D&.oNP&c`UE&c`UE&j$a@',;5r
()@W#()7T#(Ddo,)B0Y;*[)^Q,pk&k/hf(>3BTJl77g6Q<Es$G@9Z].9h.W=4ut\\1G91i.ju_k,U+?P
*ZQ+:)#b<[()@W"()7Q"'GV>r!r`<%!ql]t"9\i*":#,8#6kA<#7:A:!XfAErXB;H%M'$[&.]9]%M'!Z
&,m%=%K6k;%K$\A%1EUO$k!IQ%K6k;%K?q<%K6hB%h9$Z%h9*\!Y5hQrXSo:r<i`8$4-qCPQ:O[!A#i%
0)dO'0`a$cr\S+B2E*TT4$,Pg5!VG%77Kd?9MJ>[;cQn$>?tWF@qTLlDf^#GI"6j*Nf]QqStDjYX0B"D
]u%h2`kf<u['6U1Un=3FP`Uo\K782nFE;A:B4bU\?<pc;=&`*p:/+AS7n,rF%fR"<&-3@SrXo)A!#,>E
#nmsb&ebrm'bqG\(-E<I()Ic()B'P7*ZcCI,UOie.kNG22E*`^5t+@?;,pk->?"En7n#X+3]AlO0.e\&
-7'o]+!)IC)AsCk(C(]k'bqK"'c-c`!tu@M!r`<%!rW5t!s/T."8i9+"pY>:#R:\7$3:MCrXAr>%M''J
%g<FR%h0!ZrXJo;rXSo:rXK/B%1ERO$k*UE%f["<%f[";%L!@Q%1`sZrXT#@&,m(<%1*CM$4@1I#mU_?
lN![[!\>oTr\"1'r\5*B1GgpG2E!KR3'05c5!VD#6UaL:;G0\Y:f:7m='8d7?t*_\CMn-5GC+^gKo1nR
Q^aS@VQ$](\@]Pq`l#O$[^3*8VP9WNQ]dAdKn+PtG&qY@BkCj`?<pf==&i3t:/4JU8Ol3:q[WT9rX]/D
&.oNP&c`UE&eYij'+trm'bhAs'c%N!()7T$(H3-I)&aG7+!)RL,UFff.kWP62E<oa6:X^E;d!=+;,'YQ
69[Om1c7!?.k2nn,U+?P*uu:<)ArGi!YuLdr=oJM'bhAs'E/(4"9/Gr!u(k@!sA`1"9o#7"pP;=#mq%I
$O[CB%0[4O%hK6_r!i]9$4dUU%LrpW%LrmVr!ii<$O[CQrXKAH$k<aV%1WjW%LrpX&,m%B%hK3]%M&II
!"Af6"UYPB#6kCI!7(WI.kE8(r\"1'r\6Vm1GgpG2)[BQ3'05b5!VD#6UaL892&&V;H-Xt=^56?@Uj%d
DJsT?H$k0sLlRXbR\$7MWNEM7]>27s\[8[jXf8+jSX>b,Ne`==I!KmVDf09$@UWSK>?P$,<)QIc9M7lG
770BNq[WT9rX]/D&.oNP&c`UE&d8p]'+trmrY5YP()@W"()7Va(F^1>)B0\<*[)^Q,pt,l/ho.?3BTJl
7nHHS<)H@[7m]C#3A`NH/h8=t%ONGF+<DRE)]9J0(Ddi&r"T5J'`JgK'GD,X!r`<%!ql]t"9\i*":#,7
#6kA;#7:A:!XfAErXB8G%M'$[&.T3\%M'!Zr=/f:rXSr;r!ic:%1W:Hrseu<rsel9#n7CU%M'$[&.]<O
%fQq9$O7"G#mU\>"p^=lqZ$aL.kE8(r\"1'r\4F/1]B4?2)[BQ3'02a5!VA"6UaI792&&V;H$Rs=^,0>
@:NqcCi=B:H$k0qLlRXaR\$.JWNED4]=b\]YcXn#T:M@6P)b<MJ:)WaF)Pl/An#.S?!CE4<)Z[i9hS,L
7R][25Re2%%fQt;&,m+@&J4pRr=T)DrXo2ErXqL1'GD2r'G_H!()@W#()Ic()B'P7*ZcCI,UFcd.kWM3
2E*`^6:FI@:eaGK69[Fh1c$d;.ju_k,U+<O*ZQ+:)#b<V()@W"()7Q"rY5PL'GD)lquZj"rrW'"qu[!'
"9\T*#6kA;"pP><$2t85$O[CB%1NdW%h9*]%hB-\%h0$[rXJo;rXSr;r=/i:%K6k;%K?q<%K6h@%h9$Z
%hARL!>#e@%fQq9$O@(G#mU_?"pY@p!2ont/,q1#/cIC%0,ZK!1,:XB1c70M2`NcY4?Ykn5se"/7nH?I
:JO_a<)m%'>[CfIAnc$uEH?>NJ:WE3OHPs"St`*_Xg>OJ[^3*:VP9WNQ]dGfKn+W!G&qY@BkLpa?=$l>
=&i3t:ej\W8Ol3<6:!jG%JgS6%gERV&J5Qd&c<7A'E/UR'+trk'GM8r'bhAu'c$]`rYGPO0,Y]J*?Q=G
+snT`.P38-2)[HX5se(89hIoB5<V"`2)-^8.OQPh+s7pK*?,n8)#b<^()7T"'c%Mu'bhAs'G;&lqZ?a!
!!;irrWEi9"9\l2"pG59"pYG@$4@1K$Om"D"V)"Q&.]?L%KR(M#Rq7R%1NdW$k<1G!"Jl:#7M(P%1NdW
%K-b:&,m%B%hB-\%M&II%1EUP$4@1I#mUY=#6b=C!7V#J/,q1#/cIC%0E*[l1,CaD2)[?O3&iu^4[)+s
6:4137nZNN:f:7m='8d6?t*_\CMn'3GC+^gKo1nRQ^XM?VQ$](['Qm6VP9WKQ]`MPMM6S.HZjIKDJ<]m
@:!5E=]\R%;GKt\91MK@6UF((4oPoe%fR"<&-ELU&J=pR!#,>E"VVL^&ebuY'aGEf()7Q"'c-cb'c7f,
)]]t@+X/0X-RpW!0f(^J4[)437hS-P4ZP>T0eOt+-RL)_+<DRE)Zglq)#b<O(AegH'`JgN'GD)m&eb$B
rWE0%p&c!3"9Sc0"U##5#6kA;#71_F$4@4MrXB)B%M'*]&.T6M%L*@Q%LimX%K6h<$k<+E((CZ^%LijW
%LimX%1WmY%h9*]%M'$ZrXJi7$O[=L#mU\>"pY;9"c`Q`!%Rpt!\>oTr\"1'r\7n<1GgpG2)[BQ3'05b
5!VD#6UaI792&&V;H-Xt=^,0>@Uj%dCi=B=H$k0sLlRXaR\$7MWNED,WMH8ZR$<boLP:8+H$47ICh[Kj
@:!5D=]\R$;GKq[91MH?6UF((4Zj/O%K$\9%fR"<&-ELU&J=pR!#,>E;A0ZV&ebrm'bqDu()7Q"'c%Q$
(Dn&/)]Tn?+X/0X-RgPu0JbUI4?c)#69[Fj1c$d;.jubl,U+?P*ZQ+:(`4&*()@W"()7Q"'GV>r'GD)m
rY##.rWE0%q#gTu!X&W.r<*?0"U>59#R:\8$3CSC%/p\E%Ls!Z%hK6^%Ls!Y&,ct<%K6k;%K6k;%K?q<
%K$\<%1`sZrXT,C%hB-[rXJf6$OR4I#7(M<#6b;8"Q9?_!!+Mur@7q#/1piRr\+7*!AZJ11_V`)2`NcY
4$5\l5XIh,7Rp*F9i+G[;cQn$>?tWF@qTLlDf^#GI"?p+Nf]QqStDjYX/VneSX>Y'Ne`7;I!KgTDes&u
@UNMJ>?Fs+;c$4`91qcE770C,5Wq4k%1N1Eq[WT9rX])B&H3:?&c`UE&c`UE&eYil',;5r()@W#()7T#
(Ddo,)C?CC*ZcCI,UFcd.kNG22E*`^5<_+e1c$d:.ju_k,U+<O*ZQ(9)#b<V()@W"()@W#rY5JJ'GL?V
p]CEsrrVlr!X&W.r<*?0"pY>:#R:\8$3CSC%/p\<%Ls!Zr=9,C%hB*[%h9'M%LrCI#Rq4Q%1NdW%1W:H
"V2(P%hB0L%fm4PrXSo:&.8jQ$OR1H#7(M<#6kA9"9c+4f`2(&.OtEJs"+1%r\"1'r\6bq1GgpG2E!KR
3'05c5!VD#6UaL:92&)W;H-Xt=^59@@V07gDK0`AH[p[$MN3jdS"?@OWMZD\S!T:uMM6S0HZjHPEGfK&
@pr\M>Zk-.<)QId9M7rI770C-5X%=n3t2T,rXJ]6rX\u>!tc(V&c<7A'E/UU'+trk',2/q'bhAu'bqK!
(B,*u(`=52*?Q=G+snT`.P!,+2)[HX5!:n_2)-^6.OQPh+s7pK*?,k7)#b<P()6fbr=oVQ'bhAs'+trk
'E/X=!r`9%!qcX0"9\f0"9eo4"U>59#71\D$OR7L%/p\>%Ls!\%hSUJ&e>H]%LrpW%LrmV$k<aV%1WjW
r=/f<rXK)B&.T3\%fQn;%/gP;$4."D"pP8:"U5)5"9a\a""5TJ.fCk!/1iIQ0)dO'0k2sp1c.'I2E*TT
4$5Yi5X@_(77Tj@9MSD^<)m"&>[:`H@qTRpDf^,LI"@!-Nfo`tSt`$TSX>b,Ne`==I!^$XDf09$@UWSK
>Zk--<)QIc9M7lG770C-5Wq7m4#dTW$k3(DrXSo;rX\u>!tc(V&c<7A'E/UJ'+trk',:E\#8@mg'bqK!
(B,*s(`F;3*?H7F+s\H^.4[#*1H%6S3A`NH/h8=t-6scX*Zc=@)&O4i(B>6K'`f'arY5ML'+tuV&c`U=
!r`<%!rE)t!u(k@!sA`1"9o#7"pP;;#mq%I$O[CB%0m@Q%h9*]%M/OK!=]S<%KHt;%Km4N%LimF%LW^U
%h9*[%hK6^%M&IIr<j)B$4-qB"pP;9"pG/5"9[Q^XoJSQ-n-Vqr@7q#/M6rSr\+7*!AZJ11_DT'2`NcY
4?Pem5XIh,7Rp*F9MJ>];cQn%>?tWF@qTRnDf^,JI"?p+Nfo]sStDR@P`h&^K7J>pG&qS<BkCg^?<pc<
=&`*r:/+AS7n,p769me!4?P\b2[^!&$k3(Dq[WT9rX])B&H3:?&c`UE&c`UE&eG]j',;5r()@W#()7T#
(Ddo4)B'P7*ZcIK,UFcd.kWM32E*HK0.nb'-70u^+<DRD)]9Ll(C(]k'bqK!'c-c`!YZ7]q@WfB'(l>*
"9/Gr!s/T."8r?-"pP;:"pbG?rX&]7$Om"D%1WjY%M'*]%h9'[%1a!K%KHt:%f[";%L!@Q%1`sZrXT#@
&,m(<%K-YA$4."D#R1J<"pP81"9AT-ZiJe[s![mrs!n!us"+1%r\"1'6npDO1,CaD2)[BP3&iu^4[)+s
6:F=58PDfQ:f:7m=BSm8?t*_^CMn-6GC+jkKo1tTQ^aP8Q]dGfKn+W!G'%_ABkJT!@:!8F=]e[';G^+^
91_WB77':*5!;"i3&ii)$OmOR%/p_4%fQtC&.fEc&.oNP&c`UE&dB!^'+tun(&emL'c%N!rYGJL+rD1:
)]^"B+X/6Z-Rp]#0f:dF0eP%--RL,`+<M[G)]BV3rYPPL!YlFc$5F6i'GV;r&eblkrXo8G&eag<rW<-%
p&k9s&d&7>"U##5#6kA;#mq"I$4@4MrXB,C%M'*]&.T0\rXK>I%LimX%1NdV%1WjWr=0,E%h9'[%h9*[
%fQnI$k!FM$OR1H#6kA;"U5)5"U"r1"9a\ar[@dqs!n!us"+1%r\"1'r\7Y51GgpG2E!KR3'05c5!VD#
6UaL:92&)W;H-Xt=^56?@V07gDK0`AH[LBuMN3jdR$WtrMM6S.HZjIMDJ<]m@:!5E=]\U&;GKt\91MK@
6UF((4Ztnh3&iiTrX8`8rs\l9q[NT9rX\u>!tc(V&c<7A'E/UU'+trk',2/q'bhAu'bqK!(B,*m(`=52
*?Q=G+s\H^.P!,+1GLL4.OQPg+s7pK*?,k7)#b<Q()7V`'`\sI'a#-`&ek0U!#,>Eo)emnrrVuurW<i;
"9Sc0"U##5#6kA;#mgqH$4@4MrXB#@%M'*]&H!"A%1`pX%M&II#7_4Q%LrpX&,m%B%hK3]%M&II!"Af6
&./^K#6kA;"U5,6"9\f0"9[BYZN0nO!\#TKr@7q#/M6rSr\+7*(c!m(1c7-K2`NcY4?Pem5sdq-7n63G
9i+/S<)m"&>?tWG@qTRpDf^,JI"@!-NfoWiNe`==I!KmVDf09$@UWSK>?P$,<)QIc9M7lF770C-5Wq4l
4#f2Y2DtC?!Y#PHr=/W6rX\u>!tc(V&c<7A'E/UJ'+trk',:E\%29Qn'bqK!()@]&(`F;7)]]t@+X/0X
-RgPu0.nb'-RL)_+<DRE)]9J0(Ddi&r"TJQ'GV>r'GD)mr"8uCr=\Z&rWE0%p&b@!"9\T*#6k>:"pP;;
$2t85$O[CB%1E^V%h9*]%M'$Z%h0'K%KR%Kr!j)D%hB-\%M'*]%h9*K%K-YA$47(E#R1J<"U5/0"9\f0
"9Sb0!8dbV-i>@o.4HbF.fq7R/cIC%0E*[,1,Jnd4uG5W3&iu]4?c"q6:4127nZNM:f:4l='/[4?t!PX
CM[p1FEr7bK8>PLNe`7;I!KgTDes-"@UNMJ>?Fs+(/n++9hS,L7R][25X7Ip4$,D\2`<NMq[3H7%1N1E
q[WT9rX])B&H3:?&c`UE&c`UE&h=V0',;5r()@W#()7T#(Ddo,)B0Y;*ZlRO,pk&k/Lr4r-6scW*Zc:?
)&W>h#8S'i'c%N!(B,$N',2)mq[rlBr=T,C!V-<k"9/Gr!s/T."8r?-"pP;:"pbG?rX&]7$Om"D%1WjY
%M'*]%h9*\%1a!I%L!@Q%1`sZrXT#@&,m(<%K-YA$4."D#R1J<"pP81"9\f0"9S`+"-!<\-iGIn.K:ms
/,q1#/cIC%0E*\/1,CaD2)[BP3&iu^4[)+s6:F=58P;`P:f:7m='8d7?t*_^CMn-5GC+jkKo1nJKn+W!
G&qY@BkLpa?=$l>=&i3t:ej\W8Ol3:6:!k#4Zkec3&``Q1c5(;rseu:rXJ]6!"])?rX]/D&.oNP&c`UE
&eG]h'+tun'bhAs'c%N!()7Va(E+,.)]Ke>*[)^S,pt/m.OQPh+s7pK*?,n8)#b<_()7T"'c%Mu'bhAs
'+trk'E/UE'E&RD&cVn&!r`9%!ql`q";1e>"9eo4"U>59#71\D$OR7L%/p\>%Ls!\%hSUJ":ktO%Lr@H
!"]&="V2+R%h9*K%293Y$OR7K#mgh@"pY;9"9eo2!sAc*"4dI^!!4Jp-i>@o.4QhH/,q1#/cIC%0E*[E
1,CaD2)[?O3&iu^4[)+s6:4137nZNN:f:7U<EE=.?!q,RB5;C'F*DtYJVAl5J:)]eF)Pr1An,7U?!LN6
<)caj:/";N7n#d35sRRr4?GM^2`<NM1c+q8!Y#PHrXJ]6rX\u>!tc(V&c<7A'E/UJ'+trk',:E\#8@mg
'bqK!(B,*Q(`=52*>9J8+X/0X-R^>h,U+?P*ZZ1;)ArGi!#GGH!#5DI!u)C]'DrIC'E&OF&J5TR!V-<k
"9/Gr!u(k@!sA`1"9o#7"pP;;#mq%I$O[CB%0m@Q%hK6_%M/OK!=]S<%KHqF%M'$[%M'*\%h9*K%K$SE
$4-qB"pP;9"pG/5"9Sc0qu`r!j8f3,s!R^m!\#TKr@7q#/M6rSr\+7*75?YU1c7-K2`NcY4?Pem5sdq-
7Rp*F9i+_d<EE=-?!q,OB5;=%F*DnWJV/K#H$47ICh[Kj@:!5D=]\R$;GKq[91MG`770C,5Wq4l4#f/X
2Dm<J1Gee6!Y#PHr=/W6rX\u>!tc(V&c<7A'E/V*'+trk',2)p'bhE!'c%Q"()@]&(`F;3*$-.E+s\H]
-6scX*Zc:?)&O2,(D[c$'c%N!().Ju',2,V&ciXYrY#5Crt,,0ncJdmrrVlr!X&W.r<*?0"U>59#R:\8
$3CSC%/p\K%Ls!Z%hK6^%Ls!Y%hB-Z%hB0L%g3FS%h9*K%K-YA$47(E#R1J<"pP81"9JZ."T&:\!!FSp
-7:2=-ib[s.4Y9H!\>lSr\"1'r\4F/1]B4/2)[BQ3'02a5!VA"6UaI792&&V:fC@q=Bf'=@:NqaCi=B:
H$k'gH$"+GChI?h?s[,C=BAI#:ej_X91MH?6UF%%4Zkef3&``R2)I-G1GT=4$N^bH%/gY5%KI"<&,m+@
&J4pRr=T)DrXo2ErXoAJ'GD2r'`8^`'c%Q$(Dn&/)]Tn?+!MsV,U+<O*ZQ(9)#b<V()@W"()@W#rY5SM
'GD)l'E&OD'E&OI&J5Qc&H_n3ncJdmrrVuurW<3)"9\T*#6kA;"pP><$2k23$Om"D!tGeO%fHnD%M''Z
%LipZ%fQt>&.eaMrXB>F$OR7K#mghB"pP;:"9nc-!<WK#"4[C^!<4AF-N>Il./tar.fLsu/H7=$0)dO'
0c2Z%1c.'J2E*TT4$5Yi5X@_(77TpB9MSDB;H-Xt=^59@@V07gDK0`AH[L0`F)c)3An,7U?<gW7<E)jk
:/";P7n#d35sRRr4?GM^2`<Pm1^#Ti0a\9`$i^\9%/p_4%fR"<&-ELU&J=pR!#,>E&/,Zi&ebro'GV;s
()7Q"'c-cb!Z2dn%iZN2*[)^Q+s7pK*?,k7)#b<Q()7V`'aGEf'GV;q&ek0U!#,;DrXf8E&J,!Fr;lHj
rWE0%p&c!3"9Sc0"U##5#6kA;#mgqH$4@4MrXB#@%M'*]&H!"@%1WmY%L*CR&.T3\%fQn;%/gPE$4."D
"pP;9"pG/5"9Sc0q#dSrjT,9+s!Ianr$VUq.OtBI!\>oTr\"1'r\6bq1GgpG2)[BQ3'05c5!VD#6UaL8
92&&V;H-Xt=^56?@Uj%dDJsT?H$47IDJ<]l@:!5E=]\R%;GKq[91MK@6UF'M5Wq4l4#f2Y2Dm<J1G^d@
1&_OT$N^bG%/gY4%fR"<&-ELU&J=pR!#,>E"VVL^&ebuY'aGEg()7Q"'c-cb&/Z<()]]t@+X/$M*ZZ1;
(`<5g!#GJI!>ZCK'a#-`&ek0U!#,;D!"fAH&.fEb&H2b0!V-<k"9/Gr!tGG:!sA`1"9o#7"pP;;$2t85
$O[CB%299^%h9*]%M'$Z%hB-\%M'*]%h9*K%K-YA$47(E#6kA;"U5/0"9JZ."S`)s!0R?\-3#=l-i>@o
.4QhG.fq7R/cIC%0E*[,1,Jnd9/SUd3&iu^4?c"q6:4127nZNM:f:4l='8a5?t!PXCM[p1FE;A:BkCg^
?<pc<=&`*r:/+AS7n,p769me!4?GVa2`EWP1c.!E1B'$,$MXu1%1E[D%JpV8&-!1>&-3@SrXo)A!#,>E
!#,>E*>9,#'bqDu()7T#'c%Q$(Dn&/)]Tn?+!)IC)]9Ll(C(]k'bqK!'c-c`!YZ7]q@WcAr=T5F&J,Kc
rXf#0r;lHjrWE0%pB(L""9\i*":#,8#6kA<#7:A:!XfAErXB2E%M'$[&.]9]%hARL!>#e@%fQq9$OR4I
#mU_?"pY>:"o\W+!sAc$"4.%^!;n/C-N>Il./tar.fLsu/H7=$0)dLE0ekF=1GgpG2E*QS3'05c5!VD#
77B^<92&)W;H,8K=BSm8?t*_^CMn-5EGfK'@pr\M>Zk0/<)QOf9M7rI77BO/5X%=n4#f2Y2DtIj"Z%nh
0ek?Z$Mb)0%K?k9%JgS6%gERV&J5Qd&c<7A'E/UR'+trk'GM8r'bhAu'c$]`rYG\S)&jM8#9P!/*?,n8
)#b?N((Cun()7Mu'GV;r&eblkrXo2Er=])A"V;7X&.fBM!rW/j!r`9%!ql`q";1e>"9eo4"U>59#71\D
$OR7L%/p\>%Ls!\%hSXK"qM4S%h9'Y((C]]$O[:L$4."D"pP;9"p>)4"9Sc0p&h)jl2Uf0r$D@is!Ran
s!dstr[\""s"44&r\+7*75?YU1c70L2`NcY4?Ykn5sdq-7n63G:/Fhf<EE=.?!q,RB5;C'DJ<]m@:!5E
=]\U&;GKt\91MK@6UF((4Ztnh3&ii$2Dm<J1G^fc0`j!]$2b/+$i^\9%/p_4%fR"<&-ELU&J=pR!#,>E
"VVL^&ebuY'aGEf()7Q"'c-cb$5aX!)]]t?)]9P2rYGVO'c-`_!#5DI!u)C]'DrIC'E&OH&J5Qc&cN=A
%fm1AquZftncJdmrrVlr'EeO@"9\l2"pG59"pYA>$4@1K$Om"D%LrsZ&.]<^%h9*]%M'$ZrXAi9r<j,C
#mU\>"pY;9"U,#3!sAc#!rrDs!1*]c,lAtg-N>Ik-j1tK.P!"P.k</&/cIC%0E*[u1,CaD2)R9N3&iu^
4?c"r6:4127nZNM:f:7m='8a5?t*VYCM[]s@UWSK>?P$,<)QIc9M7lF770C-5Wq4l4#f/X2Dm<J1G^fc
1&`j+$2b/*$N^bG%/gY4%fR"<&-ELU&J=pR!#,>E+;5A$&ebrm'bqDu()7Q"'c%Q$(Dn&/)]Te7(`4&*
()Hf_#Sn*h'b_8p&ek0U!#,;D";)4W&/"mQrX]#0quZftncJdmrrVlr!!E<*"8r?-"pG59"pbG?rX&]7
$Om"D$k<aX%M'*]%hK6^%M&IIr<ir>$4-qC"pP;9"pOu/!WrQ.p&k<rb5fE[![8m8r$D@is!R^m!\#QJ
r@7q#/1piRr\+7*!AZJ11`&#-2`NcY4$5\l5XIh,7Rp*F9i+_d<EC\Q>?tWF@qTFd@UNMJ>?Fs+;c6@b
91qcE770C,5Wq4k4#f/W2Dm<J1G^fc1&`g./d_mkr!N3,!Y#SIr=/W6rX\u>!>,nB&cE=B'E/UE'E/UU
',2)p'bhE!'c%Q"()@]&)#bET)&O.r(Ddi&'bqK!'c-c`!YZ7]q@WcAr=T5F&J,KcrXf&>!"Su/quZft
ncJdmrrVlr!X&W.r<*?0"pY>:#R:\8$3CSC%/p\@%Ls!Z%hB3^rXSo:r<iW5#m^hB#R1J<"pP81"9AT-
o`G6s!X#%pmf3D5,UE75s!Ianr@%[ps!n!us"+1%r\"1'r\6\o1GgpG2E*QS3'05c5!VD#6UaL:92&)W
;H-Xt=^59@@V04^@:!8F=]\U&;G^+^91_WB6UF((5!;"i3&iiT2?#E61GU]b1&`g//hRJ;$2Y)*$i^\9
%/p_4%fR"<&-ELU&J=pR!#,>E&/,Zi&ebro'GV;s()7Q"'c-cb";i!o)ArGi&/Gur'bqK!'GV;s'GD)m
&ek6W!#,;DrXf/B&cN@@&-!.=!W)rs!V-<k!rrDr"9&E9!sA`1"9o#7"pP;=#mq%I$O[CB%1!FR%hK9^
%h9*K%293Y$OR7K#mgh@"pY;9"9eo2!sAc"!s/N+"82_^!<48B,lAtg-N>Ik-ithI.fCk!/1iIQ0)dO'
0gmcQ1c.'J2E*TT4$5Yi5X@_(77Tj@9MSD^<)m"&>[:`H@UWSK>Zk--<)QId9M7lG770C-5Wq7m4#f2Y
2Dm<J1G^fc1&`j*0)l:X$2b/*$N^bG%/gY4%KI%>&,m+B&J,Ndr"8uCrXoAJ&eblk'`JgP'GVAu'c%N"
rYPPNrYGPMq\9)FrY5ML'+tuV&c`UD&d/dY&.fHQ&H34>%f?A*!rW/j!r`<%!qud3!sA`/"9\l2"pG59
"pYA>$4@1K$Om"Drso#=rso#;r!O#B#mU\>"pY;9"U,#3!sAc#"9/H%"3LV^!!4;f,5rkc-3#=l-i>@o
.4QhG.fq7R/cIC%0E*[E1,CaD2)R9N3&iu^4?c"q6:4127nZNM:f:4><EE=-?!q&H?!CH5<)Z[i9h\2M
7R][25X7Ip4?GM]2`<NM1c$pCr\=C*r[n:)#mq%=$2b/*$N^bG%/gY4%fR"<&-ELU&J=pR!#,>E!#,>E
%20Eh'bqDu()7T#'c%S_(]P6Y'bqK!'c%Ju'b_8pq@WcAr=T5F&J,KcrXf&>r=/f/quQ]sr;lHjrWE0%
p&b@!"9\T*#6kA;"pP><$2t85$O[CB%K$_8%K-Y<$47(E#R1D9#6kA9rWE9)"9eE#rrW0%!!8_ln,WJ3
rZ_@fr$D@is!R^m!\#QJr@7q#/1piRr\+7*!AZJ11cmQQ2`NcY4$5\j5XIh,7Rp*F9i+Yb<EE:,?!^f@
=BAI#:ej_X91MH?6UF%%4Zkef3&``R2)I-G1G\qas"=@*r[n:)/-uX^$NCG1$MXu1%1NaE%JpY7&,m+@
&J4pRr=T)DrXoMN'+tok'GD2r'`8^J'c%Sa(C(]k'bqK"'c-c`"VVR`&eYlV&c`UD&d/dY&.fHQ&H34<
%fZV0!WN2u!rW/j!r`<%!ql]t"9\i)"9o&8"pP><$2k23$Om"DrXSo:%LWXO$OR1H#7(M<#6k;7rWE6(
"SDls!r`<%!q?8]!<45A,5rkc-3#=l-iGIn.K:mt.g.@R/1iIQ0)dO'0g7?K1c.'J2E*TT4$5Yi5X@_(
77TpB9MSD^<)m"&>[:T;=&i3t:/4JU8Ol3:6:!k"4Zkec3&``Q1c.!E1B'$-0E*R,/M/L[$2t;2$2b/+
$i^\9%/p_4%fR"<&-ELU&J=pR!#,>E&/,Zi&ebro'GV;s()7Q"'c-cb!YuLdr=oPO'bhAs'+tuV&c`UD
&d/dY&.fHQ&H34;%fZV-!W3#t!V-<k"9/Gr!rrH;"9Sc0"U##5#6kA;#mgqH$4@4MrXAi;rXAi9r<j,C
#mgh@"pY;9"U,#3!sAc#"9/H%"9&A@!6G6?+oW\b,lAtg-N>Ik-ithI.fCk!/1iIQ0)dO'0cVr)1c.'I
2E*TT4$5Vh5X@_(77Tj@9MJ>]<)m!A=^,$1<)caj9h\2M7n#d35sRRq4?GM^2`<NM1c$pCr\=C*r[n:)
/M&FO$2t;2$2b/*$N^bG%/gY4%fR"<&-ELU&J=pR!#,>E"VVL^&ebuY'a>?f()7Q"(&f!H'`o-b'a5<e
'GD)mr"8uCr=T5F&J,KcrXf&>q[NT8rW;rtquZftncJdmrrVlr!X&W.r<*?0"U>59#6tS7$3CSC%/^S5
$OR4J#mU\>"pY;9"o\W+!sAc#"9/H%"8r:h!;-?i+oW\c,lAtg-N>Ik-ithH.fCk!/1iIQ0)dO'0`a$c
r\QJi2E*TT4$,Pg5X7Y'77Kd?9MJ>];cQn$=&`*r:/+AS7n,p769me!4?GVa2`EWP1c.!E1B'$-0E*R+
/M/M(!%[sRrX/Z3r!N3,!Y#SIr=/W6rX\u>!>,nB&cE=B'E/UE'E/UW',2)p'bhE!'c%Q"()7Q"'bqM`
'`o$_'D`=A'E&OH&J5Qc&cN@@&,Qk:%K$;*!W3#t!V-<k"9/Gr!s/T."8r?-"pP;:"pbG?rX&]7$Om"D
r<ir>#mghB"pP;:"pOu/!WrQ.p&k<rrWE'"li<a[r#u%`s!7Ifs!Ianr@%[ps!n!u!%\1&/M6rSr\$/a
0etL?1c.'J2`E]U4$5Yi5X@_*77TpB9MSD^<)m""<)QOf9M7rI77BO/5X%=n4#f2Y2DtIj!AcM11&`j*
0)mO'/H76u$2t;3$2Y)*$i^\9%/p_4%fR"=&-NRW&.oNP&c`UE&fq]!'+tun'bhAs'c%N!()7T"'c%Mu
'bhAs'G;&l'E/UE'E&RC&HNFTrXf&>q@<N7quZcsqZ?]sncJdm!!;irrWE3'-NjPU"9o#7"pP;=#mq%I
$O[@P$k!FM$OR1H#6kA;"U5)5"9\f0"SDis!r`<!!l+f]!;dr=,5rkc-3#=l-i>@o.4QhH/,q1#/cIC%
0E*[D1,CaD2)[?O3&iu^4[)+s6:4137nZNN:f@9l!E)Z/:/";N7n#d35sRRr4?GM^2`<NM1c$pCr\=C*
r\"4&s"+."q[*6/rX&K0p^7-4$k3+Eq@<K8rX]/D&.oNP&c`UE&d8p]'+trmrY5JK'c-W\!#5DI"V_U_
'+trW&c`UD&d/dY&.fHQ&H34:%fQn;!W3#r!W3#t!V-<k"9/Gr!tbY=!sA`1"9o#7"pP;;#mq%Iq?mf@
#mU\>"pY;9"U,#3!sAc)"8`3#!r`;u!gE]]!;Rf<,5rkc-3#=l-i>@o.4QhG.fq7R/cIC%0E*[_1,CaD
2)R9N3&iu^4?c"r6:4127nZNM:f:4i:/+DT7n,p76:!k"4?P\b2`EWP1c.!E1B'$-0E*R*/M/OP.f_'p
$3(A3$2b/*$N^bG%/gY4%fR"<&-ELU&J=pR!#,>E(_[Mq&ebrm'bqDu()7T"'c%Ju'b_8p&ek0U!#,;D
";)4W&/"mQrX\l9r=&f:!<N'!rW3$"quZftncJdmrrVlr!X&W.r<*?0"U>59#R:\8$N1>>$47(E#R1J<
"U5/0"9JZ."SMrt!r`;t!p]i]!;I`:,6&qd-3#=l-i>@q.4H_s.g.@Q/1`CP0)dO'0`a$cr\Q2a2E*TT
4$,Pg5X7Y'77Kd?9MJ>[:/+AS7n,p769me!4?GVa2`<QO1c.!E1B'$-0E*R*/M&IO.fh+Kp^-p,rsAT1
p^7-4%1N1Eq[WT9rX])B&H3:?&c`UE&c`UE&d8p_',;5rrY>ML(B,$M',2,V&c`UD&d/dY&.fHQ&H34;
%fHh;$k<1:qZ?ZrquZftncJdmrrVlr!!E<*"8r?-"pP;:"pbG?r<`o?$4."D#R1J<"pP81"9AT-o`P3q
rWDos^AuR[p`]V\s!7Ifs!Ianr@%[ps!n!us"+1%r\"1'r\50D1GgpG2E!KR3'05c5!VD#6UaL:92,=[
!_c6Y%S&rT6:!k#4Zkec3&``Qr\OX31B'$-0E*U(/cRC$.fq1M.JO5K$NCG0$Mb)0%K?k9%JgS6&,m+B
&J,Ndr"8uCrXoMN&eblk'GV;s'`JgR'GV;s'GD)m&ek6W!#,;DrXf/B&cN@@&,He8%0?qH%K6D*!rN)r
!rW/j!r`9%!qcX+"9\f0"9eo4"U>59#71\DrX05D#mgh@"pY;9"9eo2!sAc%"9/K'!r`;r!g<W]!!"/:
+oW\b,lAtg-N>Ik-ithI.fCk!/1iIQ0)dO'0eP4;1c.'I2E*TT4$5Yi5X@_(77Tj@9MJ2R7n6!86:!k"
4Zkec3&``Q1c.!E1B'$-0E*R*/M/OP.g%7N.4G*#r!E?0rX&K0p^7-4$k3(Dq[WT9rX]/D&.oNP&c`UE
&d8p]'+trmrY5JK()6`_!u)C]'DrIC'E&OH&J5Qc&cN@@&,Qk8%0I"I%1E(7quZ`rquZftncJdmrrVlr
%Kln:"9\l2"pG59"pYA>rX',A#6tG;#6b;8"U"r1"9eE#rrW0%p&a@VVuZi?pEBP\rZqCfs!Ianr$VUq
.OtBI!\>oTr\"1'r\4F/1]B3A2)[BQ3'05b5!VA"6UaI7r_!qq7R][25X7Ip4?GM]2`<NM1c$pCr\=C*
r[n7(/M-iN"=blM-n+`prsJ`3r!N3,!Y#PHr=/W6rX]#?!Y>qTrXo)A!#,>E!#,>E!YZ7]r"T8H'GL<U
!#,;D";)4W&/"mQrX\l9r=&l<$k3RPqZ6QqquQ]sr;lHjrWE0%p&b@!"9\T*"pP8:"pP><rWrf7#R1J<
"pP81"9JZ."SMrt!r`;p!kJB]!<+,9+oW\c,l8nf-N>Il./tar.fLsu/H7=$0)dLI0ekF=1GgpG2E*QS
3'05c5!VD#77B^<91_WB77':*5!9*44#f2Y2DtIj">_eg0erY\r\"4&s"+."s!n$ts![OHrX/Z3q[3-,
rseu:rXJ]6rXT2E&.oKc&J=pR!#,>E&/,Zi&el#p'GV;s'GM/n&ek6W!#,;DrXf,Art58BrX\i8rXJl9
rseu9qZ6QqquQZrr;lHjrW<-%p&k9s$3LD6"U##5#6kA;rWru<"pP;9"p>)4"9Sc0o`G0qrW<-%o`C-R
!<=5@+S[,Z,5rkc-3#=l-iGIn.K:ms/,q1#/cIC%0E*[=1,CaD2)[?O3&iu^4[)+s6:43@7hS6X6:!k"
4Zkec3&``Q1c.!E1B'$-0E*U(/cRC$/,q+!.K1ai$2t81$N:A0$Mb)0%K?k9%JgS6&,m+B&J,Ndr"8uC
rXoAJ&eblk'`JgL'GD)mr"8uCr=T5F&J,KcrXf&>q@<K6rs\o:rX8N&quZ`rrrW0$r;lHjrWE0%p&b[*
"9Sc0"U##5#6kD3#7C_?#6b;8"U"r1"9eE#rrW0%o)dkNXT8ACrZLtZrZ_=er$D@is!R^m!\#TKr@7n"
/H@C%0)dO'0d\Y31c.'I2E*TT4$5Vh5X@_(77K^56:!k"4?P\b3&``Q1c.!E1B'$-0E*R*/M/OP.fq1M
.K(Xp-h@ZD$N:A0$MXu1%1E[D%JpY7&,m+?&HWLU&c<7A'E/UO'+trk',2)o'+tuV&c`UD&d/dY&.fHQ
&H34;%fHh<$k*UC$hsc#!rE#r!rW/j!r`<%!ql^!"9\f0":YJ:"pG59"pbD;#6b;8rWE9)"9eE#rrW0%
o)\mm[/ek[rZD+^pEBM[s!7Lgs!Ianr$VUq.4Y9H!\>oTr\"1'r\4F/1]B3M2)[BQ3'02a5!VA"6Ua@/
5X7Ip4$,D\2`<NM"#Mei1B'$-0E*R*/M&IO.fq1L.K([p-h.NB$NCG1$MXu1%1NaE%JpY7&,m+@&J4pR
r=T)DrXo2ErXo8G'GL<U!#,;D";)4W&/"mQrXSu=r!rZ7!XoMIq[<-!qZ?ZrquZftncJdmrrVlr!X&W.
r<*0+"pb,3!s]#7"o\W+!sAc#"9/H%"8Drq!ri:\!<"#=+S[,Z,6&qc-3#=l-iGIn.K:ms/,q1#/cIC%
0E*[H1,CaD2)[BP3&iu^4[)+s6:4(*5X%=n4#f2Y2DtIj!AcM11&`j*0)mO'/H.1".fUsr./t[g$2b,/
$NCG0$Mb)0%K?k9%JgS6&,m+B&J,Ndr"8uCrXoJM&eblk&eblkrXo2Er=])A!>#kB&H34:%fQq;%0$e6
$hj]!!rN'!!rN,u!V-<k!rrDr"9&E9!sA`1"9o#7"pY;9"9eo2!sAc"!rrE%"7cNn!T3s\!;mr<+S[,Z
,5rkc-3#=l-i>@o.4QhH.f_+%/1iIQ0)dO'0d&5-1c.'J2E*TT4$5Yi5X@_&5Wq7m4#f2Y2Dm<J1G^fc
1&`j*/cmUV/H%(#.OlnF-itbD-L_?@$N:A0$MXu1%1E[E%JgS6&-!1D&.oHc&c<7A'E/UI'+trk'DrIC
'E&OH&J5Qc&cN@@&,Qk8%0?qH%J^D)!W3#r!W3#t!V-<k"9/Gr!s/T.!tPM;"U##5#6b;8"U"r1"9eE#
rrW0%ncJdkZiJe[q]Ge[pEBP\rZqCfs!Ianr$VUq.OtBI!\>oTr\"1'r\4j;1GgpG2)[BQ3'05b55meV
4Zkhg3&`cS2)I-G1G\qar\+7'!\GuTr@7q!.Ok<Er[7^mmKrn#rX&K0p^7-4$k3(Dq[WT9rX]/D&.oNP
&c`UE&c`UA&c`UD&d/dY&.fHQ&H34<%KI";%0?qH%JU>'!W)rr!W3#t!V-<k"9/Gr!s/T."8rB%"oni+
"9JZ."SMrt!r`;o!WW<"!K@*W+9!A^+SR&Y,6&qd-3#=l-i>@o.4HbF.fq7Q/cIC%0E*[,1,Jnd(H"*0
3&iu]4?bql4?GVa2`<QO1c.!E1B'$-0E*R*/M&IO.fq1L.K([o-NYVA-1M<?$2t;3$2b/*$N^bH%/gY4
%fR"<&-3@SrXo)A!#,>ErtG>D!#,;D";)4W&/"mQrX\l9r=&f:%1W(?!"/;uqZ?ZrrrW0$r;lHjrWE0%
p&b@!"9\Q)!!W?)!<WJt"9/H%"7lTl!<<2U!4)Y**VplW+S[,Z,5rkc-3#=l-iGIn.K:ms.fq7Q/H@C%
0)dO'0af`m1c.'J2E*TT4$<L*#!=t,3&``Qr\OX31B'$-0E*U(/cRC$/,q+!.K(Y!-RU5f,p`ib$2t;2
$2b/+$i^\9%/p_4%fR"<&-*:D&.oNP&c`UA&c`UD')iID&/"mQrX\i8rXJl9rsec3rsJ>uqZ?WqquZft
ncJdmrrVlr"9\i0"9e]-"9\i0"9eE#rrW0%ncJajrrTA(hZ3ZsqB,\Zp`]V\rZqCfs!Ianr$VUq.OtBI
!\>oTr\"1'r\4a81GgpG2)[BQ3'7+%$9L4,2`<NM1c$pCr\=C*s"4C+/M/OP.fq1M.K([o-iYOm-3"8=
$2t;2$2b/*$N^bG%/gY4%fR"<&-ELU&J=pR!#,8C!#,;D";)4W&/"mQrX\l9r=&f:$k;t>rX//rquZ`r
quZftncJdmrrVlr!X&W.qud''"9eE#rrW0%o)egjrrN0%N<&quqB,\ZpEBM[s!7Lgs!Ianr$VUq.OtBI
!\>oTr\"1'r\4F/1]B362)[BQ3;tuG3&`cS2)I-G1G\qar\+7'!\GuTr@7q!.4P3Dr[7^mr?_FKmg9"#
rX/Z3r!N3,!Y#PHr=/W6rX\u>!>,nB&cE=B'E/UE'E&OH&J5Qc&cN@@&,Qk8%0?qI%JU>0$Le)n!rN)t
!WW<#!V-<k"9/Gr!s/T."9&E)!sAc#"9/H%"7lTl!W<)N!4W%.*VgfV+S[,Z,6&qc-3#=l-iGIn.K:ms
.g.CS/M/UT0)dL:0ekF=1GgpG2E*QS3'0)Z2`<Pm1^#Ti1,1N_0E*U(/cRC$/,q+!.K([p-iYOk-2n2;
$2t;3$2Y)*$i^\9%/p_4%fQtB&.fEc&.nmSr"9&E&ek3VrXf8E&J5QcrX\i8rXJl9rsec3r!MooqZ?Zr
qZ?]sncJdm!!;irrWE?+"9Sc0o`G0qrWD]mr;lftWW;)[!$(qXqB,\Zp`]V\rZqCfs!Ianr@%[ps!n!u
s"+1%r\"1'r\4X51GgpG2E!Mn3!VB#2)I-G1G\qar\+7's"47%r[S%".Ok9Ds!Rgnr$;@h$2k.t$2t;2
$2b/+$i^\9%/p_4%fR"<&-ELU&J=pR!#,;D";)4W&/"mQrX\i8rXAo;$k<"?!"8]3!"&&oquZ`rquZft
ncJdmrrVlr"9\i0"9eE#rrW0%ncJajquQj!N<&tur>keXru_4_pEBP\rZqCfs!Ianr$VUq.OtBI!\>oT
r\"1'r\4U41GgpG2)bFm"u\=q1c$pCr\=C*r[n7(/M-iN!\,ZKr@%Xms!IXis!7UNr<Vp"r<`K2rX&K0
p^7-4$k3(Dq[WT9rX]/D&.oNM&d/dY&.fHQ&H34;%fHh<$k*U?$iCA3$1.cj!rN*!!r`9"!V-<k"9/Gr
"9&Gs"9/H%"7lTl!W3$!!S%1\!<*u:*VplW+SR&Y,6&qd-3#=l-i>@o.4HbF/,q.#/cIC%0E*[,1,Jnd
!&aa6"Z8+n1G^fc1&`j*/cmUU/H%(#.OchF./kUo-N#.k,U=T5$2k.s$2t;3$2b/*$N^bH%/gY4%fR"<
&-*:B&H3:>&d/dY&.fHQ&H34;%fHh<$k3[@$iC>5#mgt*!W)rr!W3#t!V-<k"9/Gm"8W-"!r`;n!rN)s
!r`5"!9F32~>

%%EndBinary
grestore
np
grestore
152.465 117.311 mo
152.465 118.011 li
152.165 118.011 li
151.345 118.011 150.805 117.891 150.535 117.651 cv
150.255 117.411 150.125 116.931 150.125 116.221 cv
150.125 115.051 li
150.125 114.561 150.035 114.221 149.855 114.031 cv
149.675 113.851 149.365 113.751 148.905 113.751 cv
148.605 113.751 li
148.605 113.051 li
148.905 113.051 li
149.365 113.051 149.685 112.961 149.865 112.771 cv
150.035 112.591 150.125 112.251 150.125 111.761 cv
150.125 110.591 li
150.125 109.871 150.255 109.391 150.535 109.151 cv
150.805 108.911 151.345 108.791 152.165 108.791 cv
152.465 108.791 li
152.465 109.491 li
152.135 109.491 li
151.675 109.491 151.375 109.571 151.235 109.711 cv
151.095 109.851 151.025 110.151 151.025 110.611 cv
151.025 111.821 li
151.025 112.341 150.945 112.711 150.805 112.941 cv
150.655 113.171 150.405 113.321 150.045 113.401 cv
150.405 113.491 150.655 113.651 150.805 113.881 cv
150.945 114.121 151.025 114.491 151.025 114.991 cv
151.025 116.201 li
151.025 116.651 151.095 116.951 151.235 117.091 cv
151.375 117.231 151.675 117.311 152.135 117.311 cv
152.465 117.311 li
f
159.077 111.131 mo
158.897 112.021 li
158.677 111.871 158.447 111.751 158.207 111.671 cv
157.967 111.591 157.717 111.551 157.457 111.551 cv
157.167 111.551 156.897 111.601 156.637 111.701 cv
156.377 111.801 156.157 111.951 155.987 112.131 cv
155.707 112.421 155.487 112.751 155.337 113.131 cv
155.177 113.511 155.107 113.911 155.107 114.311 cv
155.107 114.811 155.227 115.171 155.477 115.411 cv
155.717 115.651 156.097 115.771 156.597 115.771 cv
156.837 115.771 157.107 115.741 157.387 115.661 cv
157.667 115.591 157.957 115.481 158.257 115.321 cv
158.087 116.211 li
157.827 116.321 157.557 116.391 157.277 116.441 cv
156.997 116.491 156.717 116.521 156.437 116.521 cv
155.707 116.521 155.147 116.341 154.757 115.981 cv
154.367 115.621 154.177 115.111 154.177 114.431 cv
154.177 113.871 154.277 113.351 154.477 112.871 cv
154.677 112.391 154.987 111.961 155.387 111.581 cv
155.657 111.321 155.977 111.131 156.347 110.991 cv
156.707 110.861 157.117 110.791 157.557 110.791 cv
157.807 110.791 158.057 110.821 158.307 110.881 cv
158.557 110.941 158.817 111.021 159.077 111.131 cv
f
162.223 111.851 mo
168.483 111.851 li
168.483 112.671 li
162.223 112.671 li
162.223 111.851 li
162.223 113.841 mo
168.483 113.841 li
168.483 114.671 li
162.223 114.671 li
162.223 113.841 li
f
172.731 115.561 mo
174.341 115.561 li
174.341 110.001 li
172.591 110.351 li
172.591 109.451 li
174.331 109.101 li
175.321 109.101 li
175.321 115.561 li
176.931 115.561 li
176.931 116.391 li
172.731 116.391 li
172.731 115.561 li
f
179.023 115.151 mo
180.053 115.151 li
180.053 115.991 li
179.253 117.541 li
178.623 117.541 li
179.023 115.991 li
179.023 115.151 li
f
191.906 111.851 mo
198.166 111.851 li
198.166 112.671 li
191.906 112.671 li
191.906 111.851 li
191.906 113.841 mo
198.166 113.841 li
198.166 114.671 li
191.906 114.671 li
191.906 113.841 li
f
202.413 115.561 mo
204.023 115.561 li
204.023 110.001 li
202.273 110.351 li
202.273 109.451 li
204.013 109.101 li
205.003 109.101 li
205.003 115.561 li
206.613 115.561 li
206.613 116.391 li
202.413 116.391 li
202.413 115.561 li
f
208.706 115.151 mo
209.736 115.151 li
209.736 115.991 li
208.936 117.541 li
208.306 117.541 li
208.706 115.991 li
208.706 115.151 li
f
221.789 111.851 mo
228.049 111.851 li
228.049 112.671 li
221.789 112.671 li
221.789 111.851 li
221.789 113.841 mo
228.049 113.841 li
228.049 114.671 li
221.789 114.671 li
221.789 113.841 li
f
235.116 112.461 mo
235.586 112.561 235.956 112.771 236.216 113.091 cv
236.476 113.411 236.616 113.811 236.616 114.271 cv
236.616 114.991 236.366 115.551 235.876 115.941 cv
235.376 116.331 234.676 116.521 233.766 116.521 cv
233.456 116.521 233.136 116.491 232.816 116.431 cv
232.496 116.381 232.156 116.291 231.816 116.171 cv
231.816 115.221 li
232.086 115.381 232.386 115.501 232.716 115.581 cv
233.036 115.661 233.376 115.701 233.736 115.701 cv
234.356 115.701 234.826 115.581 235.146 115.341 cv
235.466 115.101 235.636 114.741 235.636 114.271 cv
235.636 113.851 235.486 113.511 235.186 113.271 cv
234.886 113.031 234.466 112.901 233.926 112.901 cv
233.076 112.901 li
233.076 112.091 li
233.966 112.091 li
234.446 112.091 234.816 112.001 235.076 111.801 cv
235.336 111.611 235.466 111.331 235.466 110.961 cv
235.466 110.591 235.326 110.301 235.066 110.101 cv
234.796 109.901 234.416 109.801 233.926 109.801 cv
233.656 109.801 233.366 109.831 233.056 109.891 cv
232.746 109.951 232.406 110.041 232.036 110.161 cv
232.036 109.281 li
232.406 109.181 232.756 109.101 233.086 109.051 cv
233.406 109.001 233.716 108.971 234.016 108.971 cv
234.756 108.971 235.346 109.141 235.786 109.481 cv
236.226 109.821 236.446 110.281 236.446 110.861 cv
236.446 111.261 236.326 111.601 236.096 111.881 cv
235.866 112.161 235.536 112.361 235.116 112.461 cv
f
238.668 117.311 mo
239.008 117.311 li
239.468 117.311 239.758 117.241 239.898 117.101 cv
240.038 116.961 240.108 116.661 240.108 116.201 cv
240.108 114.991 li
240.108 114.491 240.178 114.121 240.328 113.881 cv
240.468 113.651 240.728 113.491 241.088 113.401 cv
240.728 113.321 240.468 113.171 240.328 112.941 cv
240.178 112.711 240.108 112.341 240.108 111.821 cv
240.108 110.611 li
240.108 110.151 240.038 109.851 239.898 109.711 cv
239.758 109.571 239.468 109.491 239.008 109.491 cv
238.668 109.491 li
238.668 108.791 li
238.978 108.791 li
239.778 108.791 240.318 108.911 240.598 109.151 cv
240.868 109.391 241.008 109.871 241.008 110.591 cv
241.008 111.761 li
241.008 112.251 241.088 112.591 241.268 112.771 cv
241.448 112.961 241.768 113.051 242.228 113.051 cv
242.528 113.051 li
242.528 113.751 li
242.228 113.751 li
241.768 113.751 241.448 113.851 241.268 114.031 cv
241.088 114.221 241.008 114.561 241.008 115.051 cv
241.008 116.221 li
241.008 116.931 240.868 117.411 240.598 117.651 cv
240.318 117.891 239.778 118.011 238.978 118.011 cv
238.668 118.011 li
238.668 117.311 li
f
185.31 111.781 mo
185.85 115.161 li
188.38 110.921 li
189.33 110.921 li
186.06 116.391 li
185.66 118.461 li
184.76 118.461 li
185.16 116.391 li
184.52 112.311 li
184.46 111.901 184.27 111.691 183.96 111.691 cv
183.72 111.691 li
183.87 110.921 li
184.21 110.921 li
184.85 110.921 185.21 111.211 185.31 111.781 cv
f
217.212 112.921 mo
214.112 112.921 li
213.972 113.901 213.972 114.591 214.112 115.001 cv
214.292 115.511 214.622 115.761 215.112 115.761 cv
215.592 115.761 216.022 115.511 216.402 115.001 cv
216.722 114.551 216.992 113.861 217.212 112.921 cv
217.362 112.091 mo
217.442 111.171 217.432 110.551 217.322 110.221 cv
217.142 109.711 216.812 109.451 216.342 109.451 cv
215.842 109.451 215.402 109.711 215.042 110.211 cv
214.752 110.621 214.502 111.251 214.282 112.091 cv
217.362 112.091 li
216.482 108.711 mo
217.262 108.711 217.802 109.061 218.122 109.751 cv
218.432 110.441 218.472 111.391 218.232 112.611 cv
217.992 113.831 217.592 114.781 217.012 115.461 cv
216.432 116.151 215.742 116.491 214.962 116.491 cv
214.182 116.491 213.632 116.151 213.322 115.461 cv
213.012 114.781 212.972 113.831 213.212 112.611 cv
213.452 111.391 213.852 110.441 214.432 109.751 cv
215.012 109.061 215.692 108.711 216.482 108.711 cv
f
154.275 104.719 mo
154.275 21.5594 li
@
237.435 104.719 mo
237.435 21.5594 li
@
154.275 104.719 mo
237.435 104.719 li
@
154.275 21.5594 mo
237.435 21.5594 li
@
185.51 69.9202 mo
184.17 73.5502 li
186.85 73.5502 li
185.51 69.9202 li
184.95 68.9502 mo
186.07 68.9502 li
188.85 76.2402 li
187.82 76.2402 li
187.16 74.3702 li
183.87 74.3702 li
183.21 76.2402 li
182.17 76.2402 li
184.95 68.9502 li
0 1 1 0 cmyk
f
204.738 52.0742 mo
204.738 54.7442 li
206.318 54.7442 li
206.848 54.7442 207.238 54.6342 207.498 54.4142 cv
207.748 54.1942 207.878 53.8642 207.878 53.4042 cv
207.878 52.9542 207.748 52.6242 207.498 52.4042 cv
207.238 52.1842 206.848 52.0742 206.318 52.0742 cv
204.738 52.0742 li
204.738 49.0742 mo
204.738 51.2742 li
206.198 51.2742 li
206.678 51.2742 207.028 51.1842 207.268 51.0042 cv
207.508 50.8242 207.628 50.5542 207.628 50.1742 cv
207.628 49.8142 207.508 49.5342 207.268 49.3542 cv
207.028 49.1742 206.678 49.0742 206.198 49.0742 cv
204.738 49.0742 li
203.748 48.2642 mo
206.268 48.2642 li
207.018 48.2642 207.598 48.4242 208.008 48.7342 cv
208.408 49.0542 208.618 49.4942 208.618 50.0642 cv
208.618 50.5142 208.508 50.8742 208.298 51.1342 cv
208.088 51.3942 207.788 51.5642 207.388 51.6242 cv
207.868 51.7342 208.248 51.9542 208.518 52.2842 cv
208.778 52.6142 208.918 53.0242 208.918 53.5142 cv
208.918 54.1742 208.688 54.6742 208.248 55.0242 cv
207.808 55.3842 207.178 55.5542 206.368 55.5542 cv
203.748 55.5542 li
203.748 48.2642 li
1 /0 /CSD get_res sepcs
0 sep
f
144.624 7.21037 mo
144.14 8.04637 143.788 8.86037 143.557 9.66337 cv
143.315 10.4664 143.205 11.2804 143.205 12.1054 cv
143.205 12.9414 143.315 13.7554 143.557 14.5584 cv
143.788 15.3724 144.14 16.1754 144.624 17.0004 cv
143.766 17.0004 li
143.227 16.1534 142.82 15.3394 142.556 14.5254 cv
142.292 13.7114 142.16 12.9084 142.16 12.1054 cv
142.16 11.3134 142.292 10.5104 142.556 9.69637 cv
142.82 8.88237 143.216 8.05737 143.766 7.21037 cv
144.624 7.21037 li
1 /0 /CSD get_res sepcs
1 sep
f
150.861 12.5564 mo
150.861 11.8304 150.707 11.2694 150.41 10.8514 cv
150.102 10.4334 149.695 10.2244 149.178 10.2244 cv
148.65 10.2244 148.243 10.4334 147.946 10.8514 cv
147.638 11.2694 147.495 11.8304 147.495 12.5564 cv
147.495 13.2824 147.638 13.8544 147.946 14.2724 cv
148.243 14.6904 148.65 14.8884 149.178 14.8884 cv
149.695 14.8884 150.102 14.6904 150.41 14.2724 cv
150.707 13.8544 150.861 13.2824 150.861 12.5564 cv
147.495 10.4554 mo
147.693 10.1034 147.957 9.83937 148.276 9.66337 cv
148.595 9.48737 148.98 9.39937 149.42 9.39937 cv
150.146 9.39937 150.74 9.69637 151.202 10.2684 cv
151.653 10.8514 151.884 11.6104 151.884 12.5564 cv
151.884 13.5024 151.653 14.2724 151.202 14.8444 cv
150.74 15.4164 150.146 15.7024 149.42 15.7024 cv
148.98 15.7024 148.595 15.6144 148.276 15.4494 cv
147.957 15.2844 147.693 15.0204 147.495 14.6574 cv
147.495 15.5594 li
146.505 15.5594 li
146.505 7.19937 li
147.495 7.19937 li
147.495 10.4554 li
f
153.369 7.21037 mo
154.227 7.21037 li
154.755 8.05737 155.162 8.88237 155.426 9.69637 cv
155.69 10.5104 155.833 11.3134 155.833 12.1054 cv
155.833 12.9084 155.69 13.7114 155.426 14.5254 cv
155.162 15.3394 154.755 16.1534 154.227 17.0004 cv
153.369 17.0004 li
153.842 16.1754 154.194 15.3724 154.436 14.5584 cv
154.667 13.7554 154.788 12.9414 154.788 12.1054 cv
154.788 11.2804 154.667 10.4664 154.436 9.66337 cv
154.194 8.86037 153.842 8.04637 153.369 7.21037 cv
f
160.255 7.54037 mo
167.031 7.54037 li
167.031 8.45337 li
164.182 8.45337 li
164.182 15.5594 li
163.093 15.5594 li
163.093 8.45337 li
160.255 8.45337 li
160.255 7.54037 li
f
170.771 12.5344 mo
169.968 12.5344 169.418 12.6334 169.11 12.8094 cv
168.802 12.9964 168.648 13.3044 168.648 13.7444 cv
168.648 14.0964 168.758 14.3824 168.989 14.5804 cv
169.22 14.7894 169.539 14.8884 169.935 14.8884 cv
170.485 14.8884 170.925 14.7014 171.255 14.3054 cv
171.585 13.9204 171.75 13.4034 171.75 12.7544 cv
171.75 12.5344 li
170.771 12.5344 li
172.74 12.1274 mo
172.74 15.5594 li
171.75 15.5594 li
171.75 14.6464 li
171.519 15.0204 171.233 15.2844 170.903 15.4494 cv
170.573 15.6144 170.155 15.7024 169.671 15.7024 cv
169.055 15.7024 168.56 15.5374 168.197 15.1964 cv
167.834 14.8554 167.658 14.3934 167.658 13.8104 cv
167.658 13.1394 167.878 12.6334 168.34 12.2814 cv
168.791 11.9404 169.462 11.7644 170.364 11.7644 cv
171.75 11.7644 li
171.75 11.6654 li
171.75 11.2144 171.596 10.8624 171.299 10.6094 cv
171.002 10.3674 170.584 10.2354 170.045 10.2354 cv
169.693 10.2354 169.363 10.2794 169.033 10.3674 cv
168.703 10.4554 168.395 10.5764 168.098 10.7304 cv
168.098 9.81737 li
168.45 9.68537 168.802 9.57537 169.143 9.50937 cv
169.484 9.44337 169.814 9.39937 170.144 9.39937 cv
171.013 9.39937 171.662 9.63037 172.091 10.0814 cv
172.52 10.5324 172.74 11.2144 172.74 12.1274 cv
f
178.262 10.4664 mo
178.152 10.4004 178.031 10.3564 177.899 10.3234 cv
177.767 10.3014 177.624 10.2794 177.47 10.2794 cv
176.909 10.2794 176.48 10.4664 176.183 10.8294 cv
175.875 11.1924 175.732 11.7094 175.732 12.3914 cv
175.732 15.5594 li
174.742 15.5594 li
174.742 9.54237 li
175.732 9.54237 li
175.732 10.4774 li
175.93 10.1144 176.205 9.83937 176.535 9.66337 cv
176.865 9.48737 177.272 9.39937 177.756 9.39937 cv
177.987 9.41037 li
178.064 9.42137 178.152 9.43237 178.262 9.45437 cv
178.262 10.4664 li
f
183.256 12.4794 mo
183.256 11.7754 183.102 11.2144 182.816 10.8184 cv
182.519 10.4224 182.101 10.2244 181.573 10.2244 cv
181.045 10.2244 180.627 10.4224 180.33 10.8184 cv
180.033 11.2144 179.89 11.7754 179.89 12.4794 cv
179.89 13.1944 180.033 13.7444 180.33 14.1404 cv
180.627 14.5364 181.045 14.7344 181.573 14.7344 cv
182.101 14.7344 182.519 14.5364 182.816 14.1404 cv
183.102 13.7444 183.256 13.1944 183.256 12.4794 cv
184.246 14.8114 mo
184.246 15.8234 184.015 16.5824 183.564 17.0884 cv
183.102 17.5834 182.409 17.8364 181.474 17.8364 cv
181.122 17.8364 180.803 17.8034 180.495 17.7594 cv
180.187 17.7044 179.879 17.6274 179.593 17.5174 cv
179.593 16.5604 li
179.879 16.7144 180.165 16.8244 180.451 16.9014 cv
180.737 16.9784 181.023 17.0224 181.32 17.0224 cv
181.958 17.0224 182.442 16.8464 182.772 16.5164 cv
183.091 16.1754 183.256 15.6694 183.256 14.9874 cv
183.256 14.5034 li
183.047 14.8554 182.783 15.1194 182.464 15.2954 cv
182.145 15.4714 181.771 15.5594 181.331 15.5594 cv
180.583 15.5594 179.989 15.2844 179.538 14.7234 cv
179.087 14.1624 178.867 13.4144 178.867 12.4794 cv
178.867 11.5554 179.087 10.8074 179.538 10.2464 cv
179.989 9.68537 180.583 9.39937 181.331 9.39937 cv
181.771 9.39937 182.145 9.48737 182.464 9.66337 cv
182.783 9.83937 183.047 10.1034 183.256 10.4554 cv
183.256 9.54237 li
184.246 9.54237 li
184.246 14.8114 li
f
191.429 12.3034 mo
191.429 12.7874 li
186.886 12.7874 li
186.93 13.4694 187.128 13.9974 187.502 14.3494 cv
187.865 14.7014 188.371 14.8774 189.031 14.8774 cv
189.405 14.8774 189.779 14.8334 190.131 14.7454 cv
190.483 14.6574 190.846 14.5144 191.198 14.3164 cv
191.198 15.2514 li
190.846 15.4054 190.483 15.5264 190.109 15.5924 cv
189.735 15.6584 189.35 15.7024 188.976 15.7024 cv
188.008 15.7024 187.249 15.4274 186.688 14.8774 cv
186.127 14.3274 185.852 13.5684 185.852 12.6114 cv
185.852 11.6324 186.116 10.8514 186.644 10.2684 cv
187.172 9.69637 187.898 9.39937 188.8 9.39937 cv
189.614 9.39937 190.252 9.66337 190.725 10.1804 cv
191.187 10.7084 191.429 11.4124 191.429 12.3034 cv
190.439 12.0174 mo
190.428 11.4784 190.274 11.0494 189.988 10.7194 cv
189.691 10.4004 189.295 10.2354 188.811 10.2354 cv
188.261 10.2354 187.821 10.4004 187.491 10.7084 cv
187.161 11.0164 186.963 11.4564 186.919 12.0174 cv
190.439 12.0174 li
f
194.025 7.83737 mo
194.025 9.54237 li
196.06 9.54237 li
196.06 10.3124 li
194.025 10.3124 li
194.025 13.5794 li
194.025 14.0744 194.091 14.3934 194.223 14.5254 cv
194.355 14.6684 194.63 14.7344 195.048 14.7344 cv
196.06 14.7344 li
196.06 15.5594 li
195.048 15.5594 li
194.278 15.5594 193.75 15.4164 193.464 15.1304 cv
193.178 14.8444 193.035 14.3274 193.035 13.5794 cv
193.035 10.3124 li
192.309 10.3124 li
192.309 9.54237 li
193.035 9.54237 li
193.035 7.83737 li
194.025 7.83737 li
f
200.9 7.54037 mo
201.989 7.54037 li
201.989 15.5594 li
200.9 15.5594 li
200.9 7.54037 li
f
209.106 11.9294 mo
209.106 15.5594 li
208.116 15.5594 li
208.116 11.9624 li
208.116 11.3904 207.995 10.9724 207.775 10.6864 cv
207.555 10.4004 207.225 10.2574 206.785 10.2574 cv
206.246 10.2574 205.828 10.4334 205.52 10.7744 cv
205.212 11.1154 205.058 11.5774 205.058 12.1604 cv
205.058 15.5594 li
204.068 15.5594 li
204.068 9.54237 li
205.058 9.54237 li
205.058 10.4774 li
205.289 10.1254 205.564 9.85037 205.894 9.67437 cv
206.213 9.49837 206.587 9.39937 207.005 9.39937 cv
207.687 9.39937 208.215 9.61937 208.567 10.0484 cv
208.919 10.4774 209.106 11.1044 209.106 11.9294 cv
f
214.122 7.19937 mo
214.122 8.02437 li
213.176 8.02437 li
212.824 8.02437 212.571 8.10137 212.439 8.24437 cv
212.296 8.38737 212.23 8.64037 212.23 9.01437 cv
212.23 9.54237 li
213.858 9.54237 li
213.858 10.3124 li
212.23 10.3124 li
212.23 15.5594 li
211.24 15.5594 li
211.24 10.3124 li
210.294 10.3124 li
210.294 9.54237 li
211.24 9.54237 li
211.24 9.12437 li
211.24 8.46437 211.394 7.96937 211.702 7.66137 cv
212.01 7.35337 212.505 7.19937 213.187 7.19937 cv
214.122 7.19937 li
f
214.947 7.19937 mo
215.937 7.19937 li
215.937 15.5594 li
214.947 15.5594 li
214.947 7.19937 li
f
217.906 13.1834 mo
217.906 9.54237 li
218.896 9.54237 li
218.896 13.1504 li
218.896 13.7224 219.006 14.1404 219.226 14.4264 cv
219.446 14.7124 219.776 14.8554 220.227 14.8554 cv
220.755 14.8554 221.184 14.6904 221.492 14.3494 cv
221.8 14.0084 221.954 13.5464 221.954 12.9524 cv
221.954 9.54237 li
222.944 9.54237 li
222.944 15.5594 li
221.954 15.5594 li
221.954 14.6354 li
221.712 15.0094 221.426 15.2734 221.118 15.4494 cv
220.799 15.6144 220.436 15.7024 220.018 15.7024 cv
219.325 15.7024 218.797 15.4934 218.445 15.0644 cv
218.082 14.6464 217.906 14.0194 217.906 13.1834 cv
220.392 9.39937 mo
220.392 9.39937 li
f
230.127 12.3034 mo
230.127 12.7874 li
225.584 12.7874 li
225.628 13.4694 225.826 13.9974 226.2 14.3494 cv
226.563 14.7014 227.069 14.8774 227.729 14.8774 cv
228.103 14.8774 228.477 14.8334 228.829 14.7454 cv
229.181 14.6574 229.544 14.5144 229.896 14.3164 cv
229.896 15.2514 li
229.544 15.4054 229.181 15.5264 228.807 15.5924 cv
228.433 15.6584 228.048 15.7024 227.674 15.7024 cv
226.706 15.7024 225.947 15.4274 225.386 14.8774 cv
224.825 14.3274 224.55 13.5684 224.55 12.6114 cv
224.55 11.6324 224.814 10.8514 225.342 10.2684 cv
225.87 9.69637 226.596 9.39937 227.498 9.39937 cv
228.312 9.39937 228.95 9.66337 229.423 10.1804 cv
229.885 10.7084 230.127 11.4124 230.127 12.3034 cv
229.137 12.0174 mo
229.126 11.4784 228.972 11.0494 228.686 10.7194 cv
228.389 10.4004 227.993 10.2354 227.509 10.2354 cv
226.959 10.2354 226.519 10.4004 226.189 10.7084 cv
225.859 11.0164 225.661 11.4564 225.617 12.0174 cv
229.137 12.0174 li
f
236.749 11.9294 mo
236.749 15.5594 li
235.759 15.5594 li
235.759 11.9624 li
235.759 11.3904 235.638 10.9724 235.418 10.6864 cv
235.198 10.4004 234.868 10.2574 234.428 10.2574 cv
233.889 10.2574 233.471 10.4334 233.163 10.7744 cv
232.855 11.1154 232.701 11.5774 232.701 12.1604 cv
232.701 15.5594 li
231.711 15.5594 li
231.711 9.54237 li
232.701 9.54237 li
232.701 10.4774 li
232.932 10.1254 233.207 9.85037 233.537 9.67437 cv
233.856 9.49837 234.23 9.39937 234.648 9.39937 cv
235.33 9.39937 235.858 9.61937 236.21 10.0484 cv
236.562 10.4774 236.749 11.1044 236.749 11.9294 cv
f
243.052 9.77337 mo
243.052 10.6974 li
242.766 10.5434 242.491 10.4334 242.205 10.3564 cv
241.919 10.2794 241.644 10.2354 241.358 10.2354 cv
240.72 10.2354 240.214 10.4444 239.862 10.8514 cv
239.51 11.2584 239.334 11.8304 239.334 12.5564 cv
239.334 13.2934 239.51 13.8654 239.862 14.2724 cv
240.214 14.6794 240.72 14.8774 241.358 14.8774 cv
241.644 14.8774 241.919 14.8444 242.205 14.7674 cv
242.491 14.6904 242.766 14.5694 243.052 14.4154 cv
243.052 15.3284 li
242.766 15.4604 242.48 15.5594 242.194 15.6144 cv
241.897 15.6694 241.578 15.7024 241.248 15.7024 cv
240.346 15.7024 239.62 15.4274 239.092 14.8554 cv
238.553 14.2944 238.289 13.5244 238.289 12.5564 cv
238.289 11.5774 238.553 10.8074 239.092 10.2464 cv
239.631 9.68537 240.368 9.39937 241.314 9.39937 cv
241.622 9.39937 241.919 9.43237 242.205 9.49837 cv
242.491 9.56437 242.777 9.65237 243.052 9.77337 cv
f
249.916 12.3034 mo
249.916 12.7874 li
245.373 12.7874 li
245.417 13.4694 245.615 13.9974 245.989 14.3494 cv
246.352 14.7014 246.858 14.8774 247.518 14.8774 cv
247.892 14.8774 248.266 14.8334 248.618 14.7454 cv
248.97 14.6574 249.333 14.5144 249.685 14.3164 cv
249.685 15.2514 li
249.333 15.4054 248.97 15.5264 248.596 15.5924 cv
248.222 15.6584 247.837 15.7024 247.463 15.7024 cv
246.495 15.7024 245.736 15.4274 245.175 14.8774 cv
244.614 14.3274 244.339 13.5684 244.339 12.6114 cv
244.339 11.6324 244.603 10.8514 245.131 10.2684 cv
245.659 9.69637 246.385 9.39937 247.287 9.39937 cv
248.101 9.39937 248.739 9.66337 249.212 10.1804 cv
249.674 10.7084 249.916 11.4124 249.916 12.3034 cv
248.926 12.0174 mo
248.915 11.4784 248.761 11.0494 248.475 10.7194 cv
248.178 10.4004 247.782 10.2354 247.298 10.2354 cv
246.748 10.2354 246.308 10.4004 245.978 10.7084 cv
245.648 11.0164 245.45 11.4564 245.406 12.0174 cv
248.926 12.0174 li
f
gsave
282.922 104.719 mo
366.082 104.719 li
366.082 21.5594 li
282.922 21.5594 li
cp
clp
282.922 104.719 mo
366.442 104.719 li
366.442 21.1994 li
282.922 21.1994 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 126.919 ]ct
[83.52 0 0 83.52 282.922 22.2 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 116 
/H 116 
/M[116 0 0 -116 0 116 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
e>jFjZa@6S^;.Y+aNMoYe_&[8j6,^nnb)_Tp&?37rquZiqYBm[p@e1Po^_SCnaGr7md9E-lg!d"l0.?o
kOq-u5=\".7n66J;,^P#?=@G`DfpDXKo;(WS>*!aZb!i_]XkY_\$`QKZ*CL6X/i4tVkg,_U7e*LS=H"8
Q^<u&PEV,kO,o9[Mi6m2lOEn(r!k%_%LWXO$jm:H#mLS;"U"r3#6tMB%MKEd%L`^Q$k!FM$4-tE#m^D5
!XAr7r<<3(rrr-"rrq<\g&V*QfDsI&)6L-L[CEi_^r+46bg4bhg>:fKkN_I)pA4^Zruh=?r;6Bfq=jXW
p@\+No()>@n*f]4mHs6*lK[Wukih3[570_G7nHBL;,^P$?9D_0DK0lKJq],FQ(4YNYI2$X]tD"h\[T&U
Za6pAYH4h+WMcYiUnXTVSt;IBR@0D.Q'IPsOcb]cNK&kB%M'!Y$Od@M$4."D#6k>8"9]ME"pkSE&JPlj
&Io3W$OdCN$47(F#RLb7"p,#7#5n`*"TJZ""98V:!;lit!87G'Wu8%DZaI<U^;.Y,aNW&^f%T!>jQPpt
o(MtYoD\plrquX4qtg-ap\+=Rp%7nInaZ):mdBK0lg*j$l07EqeNYrY77TpC:f1.m>[CoTDfKuLJqo>L
Q_("SYID0[^V.:m]",;Z[Bm3EZ*171X/W(rUnj`ZTV)jfS=H"8Q^<u&PEV,kO,o9[cjhN6%1WaS$4@1H
#mU\>"p>&4"U55=$P=-g'+kfd$k!FO$O[:K#m^eC#7(54rs/Q.rWW<)rrr?(qZOJ1!<E9#!SRPOX4jTl
Xg#.>\@fPl_oKjBdFHh%hW*\\mI'Q>qu60d&cVe-qtp6dq=jXWp%@tLo'u8Lmg8FLmHa*'lKRQsnNZ,"
3^Q8*8PDrX<**=2@qoq%GC>1#NKoj%Vl[/6]u%S"]tM(i\[f2W[Bm-CYH4h+X/W"pUnXTVTUq[Drg=(Z
Q'IPsOcb]cNTL`:%P%qs$k!IN$OR.G#6tD:"9\l3"pbPE',_Q"',(rf$k*LP$k!CL#m^eC#m^G6rs/Q.
rWW9(!!W-#gAp.3!W`?(r;kXQeZ/hTYd:aI'YM/r_oKmCdFHk'hrEe^mI'W@r;Q6d*WH'9qtg0bp\4CT
p%@tJo'u8=n*]W2mHa*'lKRQ`57^(L7nHBN;,gV%?t3qiF*T]oKnk_SQ_:7[Z+7Wd_SEq"]Y(hd\$rcO
Za$d=XK/D$Vl->dU8"<PSt)==R?s8*Q'7DoOcPRM%L3CO$k!IO$OZh<#mCM9"9eu6#mq(U'H%c('GD&j
%L`^Q$k!FM$4-tE#m^D5!XAr7r<<3(rrr3$\c;^2rW<$!rW(gUeZ0OhYdCgJ]YMA&a2uTSf%8[6j5oOm
n+?GRn,ERjrquZjqA/o&p\+=Rp%7hGnaZ):mdBK0lg*j$l.&![6:FC99MeYe=^5?GCiONAIt`]>Q'n;E
YHtgU_ns:+^V.:m]",;Z[Bm3EZ*171X/W(rUnj`ZTUqaF$_3WQQ^<u&PEV,kO3e@;$kE7FrsSi5rWiK-
r<+)E#71bJ()n,/().Do&Io3W$OdCN$47(F#RL_@rWWE/#6t,1rri?*qZHm%\cDX0r;k^SpT*2P(p1$L
[CElb_8XL;c-k1pgYh/SlL+38qYop_)ufj7qtp6dq=jUVp%@tLo'u8=n*]W2mHa*'lKgb#5=\%/7nHBN
;cHn+?tF.oF*W=lLln$oU8tQ,]Y_Y*_SX+']tD"h\[f2WZa6pAYH4h+X/W"mUnXTVTUq[DR@0D.Q'IPs
OceT4n.%&Z%L`aQ$O[7I#RCV="9\l3#71_G&K)N,)&X2('+kfd$k*LP$O[:K#m^eC#m^G6rs/Q.rWW<)
rrr9&ec=h4!!2rur;kaTeZ0"YYdCgK]YMA&a:689dam(+i8j(dmd^#Im/J"'r;?HgqYBm[p@e1Oo^_SC
naGr7md9E-lg!"b'LG5Y8PN#[<*<O8ASc@/H\$s1Od@hnUoUi0]Y_Y,_ns:+^V.:m]",;Z[Bm3EYHP%.
X/W"pUnj`XTUqaFS=,e3Q^*i"PEF6&#7V(O$k*IN$iUJ3"pkG9"U,):$OdUbrYkhT',_Q"'+kfd$k!FO
$O[:J#m^hD#Q4i.#6kD2"oe`*"oJM8!!!&r!rW/t!9=.1Wu%nB['dHW^qn"2aj&8bf\GEHkNhU-pA=1U
#QF`#qtp6cpC[/np@\+No()>@n*f]4mHs6*eNZ;c77TpD:fC=r?=7>\EHQVZLl7IbStrHo\%T]"a2Ps5
_SEq"]Y(hd\$rcOZa$d=XK8J%Vl->dU8"<PSt)==#+:gEQ'IPsd1-Bj$k<[S$4@7@#pfc["9eo2"U55?
$POI"*?,q8)&<o"&J5K]$O[@N$OR4I#RC_Ar<<<.#6t,1rri?*r<0_4!!2lsr;kgVp8d,P(TjpK[CNrc
_SsU>cdULuhVmS[lgaQ?r9F;!rr2imqtg-ap\+=Rp%7nInaZ):mdBK0lg$e$58upX7nHEO;cQt,@:jCu
Fa\jtNK]m(Vm!M=^W$2m.)j*@_SEq"]Y(hd\$rcOZa$d=XK8J%WMcPfU8"<RSt)==R?s8*Q':,9ndZ';
$k<^T$4I7J#RL_?rWFDK"U58A$ksX&*uu:>)&X2('+kfd$k!FO$O[:K#m^eC#7(54rs/Q.rWW<)rrrB)
eH"b4!s&H*"8`/u!T=%/WsYu5['dHX^r"+5b7)_Gf@o*?kNM='o_JFLrt580r;6BfqYBmZp@\+No^_PB
rpKpVmHrFg'gb>Z8PN&\<Eij>Ao;[6I=dB:Q(4KtWNWeB^rOO;a2c0:_SX+']tM(i\[f2WZa6pAYH4h+
X/W"mUnXTVTUq[Drg<hSQ'K`,*"<>e%1<OP$4-tC#6k>7"9eu7#n%4Y*?ZIH*?,b5)&X2(',(rf$k*LP
$O[:K#m^eC#m^G6rs/Q.rWW9(!X/]0])Vs8!X&W.qZ?]srW)$[eZ0LgYdCgK]thM)aii#Zf@o*AkNVC)
o_JLMrrrE$r;6?e&Gc(pp@e1Po^_SCnaGr7md8Oh*C<1b8PN&\<Eij>Ao;[6I>*T?Q(FYJZ+%<[a2uF%
`ur@=_SX+']tD"h\[T&UZa6pAYH4e*WMcYiUnXTVSt;GUS=,e3Q^,r.1CXd'%1<OP$4-tC#6b86"9eu7
$4@=Z*?lUJ*??(<)&X2('+kfd$k!FO$O[:K#m^hD#Q4i.#6tJ3"U"r2"U,&,!5JR;!WiN."8W)t!TO1M
X6$AuXg#1?\\5hr`lZEOe_&U5j6,[po(DkYkPl:rrquZjqYBm[p@e1Po^_SCnaGr7mcHb'59<-[7nHEP
<)m.1@;9_'GCP=)O-cH4X0K4J_T0jAaSs4+`P]R0^q[Rq]XkY_\$`QKZ*CL6XK/=uVkg,_U7e*LS=H"8
Q^?G:pC9"h%1E[R$Od@J#mU_>"U"u4#71_G&K)Z6+s7sL*?,q8)&<o"&J5K]$O[@N$OR4I#RC_Ar<<<.
#6t,1rri?*ciEG5#6=l."U,#2"8`/u!TX72Wt2>:['dHX_8=46bgFtngYW4qkj%U.pA3nN'`S+0qtp6c
q=jUVp%@tLo'u8=n*\^j)F?k_8PN&]<Eij@C2\6?It`lEQ_:.TZb!if/BH&YaiMQDa2Ps5_SEq"]Y(hd
\$rcOZa$d=XK8J%WMcPfU8"<RSt)==R?u;2!t>\J%K6_R$4$qD#R(>6"U5/;$P!gh+=/0T+<VaH)]KY/
)&<o"&J5K]$O[@N$OR4I#RC_A#Q=r-#QG#-"Tef0"hXg@!<NB/"U,#3"8`/u!W2r_!7e+cXg#1?\\5hr
`lZHPe_&X6jQPmto_/1Crs/Q$r;6?eq=b9kp@e1Oo^_SCnaGqs5=Rt.7nHEP<)m.1@qoq)H%1U/OdVl<
XL5^U`Q??JbK7iGa2Q$8_SX+']tD"h\[T&UZa6p?YH4e*WMcYiUnXNTSt;IBR/iZ&%Kd.L$k<1D"UYMA
#RCY6":bV?#Rh:Z)^6RS+X/$N*W?ul)&X2('+kfd$k!FO$O[:J#m^hD#Q4i.#6kD2"oe`"!65'G!<E6*
#6tD9"9\K%r;l$\m&TEP(9OgJ[^j)f_oKsEdFR%+i8j.gn+HGQj8TbkrquZiqYBm[p@e1Po^_SCnaGF$
ofjTd77TsE;,gV%@:O%lGBnapO-?!+Vm!M@^W"C@c-4AQaSs4(`P]R0^q[Rq]XkY_\$`QKZ*CL6X/i4t
Vkg,_U7e*LS=H"u%f?eF%1N^R$k*LN#mU_?#6"`Q#6kJC&JQ0--RU2`+s7sJ*?,q8)&<o"&J5K]$O[@N
$OR4I#RLeBr<<<.#6t,1!!LIFo)Jjn!<NH(#6P,5"9\K%r;l']eZ0CdYdCjL]tqV,bKSDcg>(WJl0Im5
!VcNOrt580r;6Bfq>'dYp@\+No^_PBeNY-B77TsE;,gV%@:O+nGC+msO-?*0Vm!SC^rO[EcHXQ7bK7j)
a!&F>_SX+']tD"h\[T&UZa6pAYH4h+WMuekUnXTVTUq[Dd1-Nn%1EUQ$k!@J#6kD3";_4G"pkYN(*+\N
.OQMc+s7sL*?,q8)&<i!'+kfd$k!FO$O[:K#m^eC#7(54rs/Q.rWTt8$ipD2#71\A#6b86!sAE%r;l`p
mf:n=(9OgJ[_'5h_oKsFdam1.iT9@lnb2eXiVs5`rquZjqYL$^p'16`p%7nIn^Tio6:FC::/Otl>[_2[
EHun_LlmsmUoCW0^V\%9d*U(_bfe,LaN)??_ns:+^V.:m]",A\[Bm3EZ*171X/i4tUnj`ZTV.mHcjgBl
$k!IP$OI+F"pY&0.g6+^$4IUd+"&Qh.OQMc+s8!M*?,q8)&<o"&J5K]$k!IO$OR4I#RC_C#Q=r-#QG#.
"nhr;!"Ar1!s]/?#mU\="U"r1qZ?]sklC%Ml`1f'ZF%'P^;@e.bK\JdgYUoPlL"0:q>T=P&,uM)qtg0b
p\4CTp%@tJo&)b+59rQb7nQNR<EEF6ASc@3I=dB>Q(FnQZ+7ZfaN`)YcHXVXbK7j)`ui:<_SX+']tD"h
\[T&UZa6p?YH4e*WMcYiUnXTVSt=IB!=fS<%QOt-$OdFO#mgkB"pG,4"U52=$l0d)-S?o!-RU2`+s7sJ
*?,q8)&<o"&J5K]$O[@N$OR1H#RLeBr<<B0#6k>8aoM&6"p+i/#7V"HrW`N/"U"r(!rW/b!7e+bXg5=B
]=u/"a3;fVfA#0@kNhR,p\NbH%fZJ*qtp6cp\4CTp%@tJeNY0C7Rp'G;,p\&@qBItH$t:&PF%l=X0]CQ
`Q?EQd*U(`"O506aiOJ%*lZ%6_SEq"]Y(hd\$rcOZa$d=XK8J%Vl->dU8"<Pe.)HfrXL7a%1<RP$OI(E
#6k>7"U,):$P!pk+t>5u.k3"r,p=HT+!2LB)]9;,().Do&Io3W$OdCN$47(F#RLb7"p5)8"pM[?%fue9
#nIIP#mghA"U,#2"8`/u!W2re!7e+bXg5=B]=u/"aNVoXfA,6Ckj.[/q>9"J#QF`#qtp6cq$$Ndp@\+N
eNY'@7Rp'G;,p\(@qBP!H[UU-PF%rAXL5^Xa32iXdf.T?cHXSVaiMQDa2Ps5_SEq"]Y(hd\$rcOZa$d=
XK8J%WMcPfU8"=Y%bV<l%K6i"%1N[P$O[7H"pY;7"9eu7#Rh:_*?cpf0eOt,.OQMc+s8!M*?,q8)&<o"
&J5K]$O[@N$OR4I#RC_A#Q=o/#6tJ'!6tQV!<N<+$5!jZ$47(E#6b86"9\N&r;l6bk,\!P's4dL[_'8j
`Q69Le(EI5j65n!p%nUArs\o+r;6BfqYBm[p@\+55PmYd6:OO=:/P"o?=RSbFaJUlNKop+X09"G_oL!J
e'lbEcm?u^bfe,MaN)??_ns:+^V.=n]",A\[Bm3EZ*171X/i4tVkg&]e.)HfrXK8E%1ERO$4."C#R121
0*_di$POI",q^u00eP(/.OQMc+sJ-O*?,q8)&<o"'+k]_$k!IO$OR4I#RC_C#Q=r-#K6]>!"Ar1!XB/K
'G1c`$4-qBrWN<*"8`/u!UTm;WthbB[C3]]_SsU?cdUP%hrO"gn+HPTr;Y^T$i^/'qtg0bp\4CTp!l8Q
6:OO=:/P"o?=RSbFaJUnNKop+X09"G`Q-3MeC2jnd*U(_c--74aiOJ%)o]_3_SEq"]Y(hd\$rcOZa$d=
XK/D$Vl->dU=9YQ%K6hE%1N^Q$OR1H"pbG4"<@^R#n%Cc+!iQs1GLO8.k2no,p=HT*uu@@)]9M/&JPlj
&Io3W$OdCN$47(F#mgk8"onnB!"/f/!s]>O'G1ib$46\:!sJi2"8W)t!Vufh!7e+bXg5@C]=u/$aN`&]
f\YQIl0e*8qu5=L$3'r%qtp6cq=jR_p=2AV6:OO=:/P"o?=d_eFa\grO-cB4XKf=Na2lNRe^W'rda6@d
cHXSVaiOJ%)TBV2_SEq"]Y(hd\$rcOZa$d=XK8J%WMcPfpC?$i!"Jo;57J&1$4@1H#mUY="9er5#RUtS
*?Z^a2`*<F0eOt+.OQMc+s7sL*?,q8)&<o"&J5K]$O[@N$OR4I#RC_A#Q=qo!7Lo^!<NB/&Ju5s&J5HZ
#mghA"U,#2"8`/u!Ug$IX7`M-Xg5@C]=u2%aj&5`g>:cLlL+39r7M#Urr2imqtg0bp\*0&,!SC`8P2`T
='8pBC2\<EJV]GTS><?p]"lA.d*pOqeC2mprm2k7c-4AQaN2EB`P]R0^q[Rq]XkY_\$`QKZ*CL6XK/D$
VkhfP!"Jo;":Y_I$O]*)#R:S="9\l3"pkYI(*=_N1H.6L1G^a<.k<(s,p=HT+<MUC)]9M/'GD&j%L`^Q
$k!FM$4-tD#mgh@#/C3T!!!'&"UYq^)ANr#&If'S#mU\="U"r1qZ?]sn,V">'Wn[K[_'>m`Q?BPe_8m<
jm)=*p\aabir9;`r;?HgqYBm[eNYNM7S-3I;cd+0ASQ.-I=[3:R@^=[Zb"#oajAPge^`0uda?FgcHXVX
bK1aFa2c0<_ns:+^V.:m]",;Z[Bm3EYHP%.X/W"pe.)Hfr=0)@$k!FM#R:S=rWF/D"pkYI)':%Q1c[KR
1c$j>/h8D!-RBo[+<MX')[%#r().Do&J5K]$O[@N$OR1H#RLeB"pVdA%KZ_9$5FR"(_m_s%h/jPrW`N/
"U"r(!rW/p!;Z]GWt_\A[C3]__oBgCdFR%/iTKLpo(W.7rs/Q&r;6Bfq=iE(/4)ft8kr;d>@;#WEHcna
MijF!Vm3YB_oU$Je^i=%e^W'rdEp7ccHXSVaiOJ%(WF;/_SEq"]Y(hd\$rcOZa$d=XK8J%VtLVX%KHt:
%fHbu$4-qC"pG,4"U5;B&K;i9/iPdN2`EQL0eY.0.Olel+X/$N*??(<)&X2('+kfd$k!FO$O[:K#m^eC
#6sJoeGpBd!X&Z9(a'h;(_m_s%h/jP#mU\="U"r(!rW/j!8spOWt_\A[C3``_oBgEdFR(0iTKOso_JL:
rs&K%r;6Bfq:.\K6:OO=:fCG"?tO.nH%1F(PFS;FZ+%Ecair/_rmh8'e^W'rdf.SscHXSVaiOJ%(<+2.
_SEq"]Y(hd\$rcOZa$d=XK8J%e.)Tj%LrmWrX8`54:)9!"pG,5"pYJC',r,A0/ksS3B&lR1GLU:.k<(s
,p=HT+!2LB)]9M/'GD&j%L`^Q$k!FM$4-tD#m\3F)$'dB#7h^t,97[@'bh5l%13FK#6tD9"9Sc'!rW/k
!7e+`Xg5@E]YMG)aj8DdgYh,UmIKrHo`*kL"oeN!qtp6?593'[8PDrZ='K'ECiO`OKoM@hU8tW0^W"C@
dam%%rmh5&eC2mprm1_lc-.-MaiMQDa2Ps5_SEq"]Y(hd\[SuQZa$d=XK8JP%Km4N%L`jH$S;\l#m^_=
"9\l5#n%+T)^-R`3BTDc3B9#T1G^a</h8D!,p=HT+<MUC)]9M/&/5ci&Io3X$OdCN$47(F#RS6G)?BmC
#8%t&,pOEN)ANr#&If0V#mU\="U"r1qZ?]sq>gBmeZ0@cZF.3T^r+18cdLD!i8a%go(Dk-rri?#r;6?g
5MA=B6:OO?:fCG"@:j=qH%C[/Q(F_N[CO&mbg+\gf[p,R%b9+Ze'cXjd*Bn\bfe,Lrl5_l_ns:+^V.:m
]",;Z[Bm3EZ*170nIFUi7L]h;$k<XQ$jm:I#R1G8"9f#:$k*gj,q:]24Zked3B&lR1GLO8.k2no,p=HT
*uu@@)]9M/'GD&j%L`^Q$k!FM$4-tEjoF*8'*/.>#o"L2,pONQ)Aj2'&J#<X$2t/3"U,#2q?$Tro`3aI
ql:C4ZF.3T^r==:cdLG#i8a%go_/10rr`9"r;5#/"@>RL9McU*=^,<HCiarSKoM@jUo^u8^rO^HeCN=+
fDa>2e^`0udaHLhcHa\YbK7j)`tQG0_SX+']tD"h\[T&UZa6pAYH64`%LimX$k<[R$jm:H"pP562Zs<h
#Rh1Y+"&Qq4$Ghj4$,G]2`*<F0eOt+.OQMc+s7sL*?,q8)&<o"&J5K]$O[@N$OR4I#ep?B!WrZ7'c/)F
.jZDb*?#b0'G1od$4."D#6b86!sAE%r;lTleZ0@cZF.3T^r=@;dF6_&iT07ko_/4Os5O%[rr2iG58upY
8PDrZ=^5BMDKC/VLQ@dpUp%8?_T:$Le^sfR$.me[f%&=#e'lbEcihY=bfe*DaN2EB`P]R0^q[Rq]XkY_
\$`QKZ*CL^%Km4N%L`jH$j$bB#lY#Z"9eu6#n%=_+=]!&4@)1q4?P\c2`EQL1GLL4.k2nm+X/$O*uu:>
)&X2('+5Ba%L`^Q$k!FM$44KJ*WZ<F#n7^t1G:7),pOEK)ANr#&If'S#mU\="U"r1qZ?]sp](9oeZ0@c
ZF.3T_8XI<dF6b'iT0:mp%SI3s8W)m5Mn[F6:OO?:fLS&@;9\&H\.$8RA-Ua\\,i%d*^CsgA]b+f[p,R
"P)#Oe'e6B)U?UObK7lIa2c0:_SX+']tM(i\[f2W[Bm-Clji7i!Y#VLr!WW6#mpS83!9?h"ptbN)^6dc
2a0Mn5<_4m4#o;[1c.!C/hSY(-RBo[+s7sJ)]KY4().Dq&Io3X$OdFO$4>_lhuFYr!X/oA)Cm^%0.SIt
,97dC'bqDp%1NXN#7(53!<`N%!rW/p!7n1bX0&\8\@fYsa3;r[f\YZMlL4E?rm(NDrma4>6:OO?:fLS&
@qlZpFa\t"OdVrAZ+7QeajAJeg"P0Zf`9Y'edg6\eC2jnd*U(_c-4AQaSs3k`P]R0^q[Rq]XkY_\$`QK
Z.'6b%1WmH$j@"G#mgh?rWE<."ptbC',r,G0f_Gs5q"o\4?GP`2`EQL0eY.0.OQSi+X/$N*??(<)&X2(
'+kfd$k!FO$O[<W!"&`."UYh^.lK:A.h+!T,9S!F(_m_s%h/jPrW`N/"U"r(!rW/q!7e+_Xg5@E]YVS-
bgOtmhW*__nb2eCs5a4158upY8PDr[=^5HQDKUA]Lln4'WO'1N`QQWWf%L&Vrn.;'rmhV1e^W'rda6@d
cHXSVaiML7a2c0:_SX+']tD"h\[T&UZa8-k!Y#VLr<rZ6rWs,@"U"r3"pYMG'H82J1H@Zdr]qYk5!1ng
3B&lR1GLU:.k3"r,p=HT+!2LB)]9M/'GD&j"qD%L$OdCN^]5MY!X0#I+>5l=2D[!:,pOWT)B'>)&J5HZ
#mghA"U,#2"8`/u!VufHWtMP?[^a#e`lH<Oe_8pAkNh[4qTT!55N"aJ6:OR@;,gb)@r-(-ItrrGS>WEo
]YMS3dF?b$gY:H9rn7>'rmh5&eC2mprm2J,c-4AQaN2EB`P]R0^q[Rq]XkYa\$`R.%dFND%1WjW$k!IO
#m^bA"pG,5"pkYL(*+\S1cmuj6iK@u5<_1l4#o;[1c$pB/h8G%-RBo[+<VaH)]KY4().Do&Io3X$OdF$
!9*u'!<N<-%i$<I5s[Oi1G:7),pOEN)ANr#&If'S#mU\="U"r1qZ?]sqZ,0I'!8IJ\@o_uaNW)_g>CuS
lgjfHbl?3X$:73S9Mnbn?=Rei&pJh\Mj'a1X0oXVa3E&_f@o!6rn7J-g"=pUefWGmeC2jnd*U(_c-4AQ
aN)??`P]R0^q[Rq]XkY_\$a]q'FbN^%1EUO$OI(D#R1G8"U58A',Ciq-S[PB5sn"+r]q;`4Zked3B&lR
1GLO8.k2no,p=HT+!(>"$Q0ft'GD&j%L`^Q%)DoP!<N?.&JufP6pWso2@hSo.4$2]*?#b0'G1ib$46\:
!sJi2"8W)t!W2rJWtMP?[^a#e`lQEQe_8pAkj@s:qrn(As4'=Q6:OR@;,gb+ASc:/Its#KSuJg#]u%k9
e(*+)rnIG+rn.;'rmhP/e^W'rdEp7ccHXSVaT0E]`sfr)_SX+']tD"h\[T&t%NZ&h%LigS$4@.G#7(M:
"9f#9$POC#.Pj"H6:=4/6N07l5!D(j4#o5Y1c$j>/h8D$-RBo[+<MUE)]KY4().Dc&J5K]$OacN,QRrL
#o":,4\/+04ZYJW.k;nj,97[>'bh5j%13CJ#6tD9"9\K%r;lisr2\PP'!8IJ\@oc!aN`2bgYh2WmI^5P
bl@2tk!'nQ6:OR@;,ph,ASuL5JV];NTW,-(^Ve1?eCN=-gYDe_s4[J*$.me[f%&=#e'c\Dciq_>bfe,L
rl5Dc_ns:+^V.:m]",<4%e1#<%1WgW%LijT$4@.H#R:82&-`@G$PXO(.l97M6UX:06UUi=,<n@S4?GP^
2`*<F0eOt,.OQMc+s7sL*?,q8)&<o"&J5K]$ek[E!%%^J"UYtb.m[!)83oO&2D[!:,pacV)B'>)&J5HZ
$4-qB"U,#2"8`/u!WE)LWs#Q1[^j'\_T'[Ae(3:3jlu4+qYn_=eis^36:ORA;,ph,ASuL5JV]AR%\g#/
\\Q2-d+-_#gYCQ=rnIJ,rn.>)fDa>(e^W'sdf.T,cHXSVaiMQDa2Ps5_SEq"]tCqeed_ck%LipI%290W
$OI+F"p>&4#71_G()nDL2`X/.6pj@06pj?@5pANW4Zked3B&cN1GLL7.k2nm+X/$O*uu:>)&X2(',(rf
%)DoU!WiN7(a(V*<)?4Y6pWjl1G9In.4$2Z*?#Y,'G1c`$4-qB"U,#3"8`/u!WN/MWtMP?[^j)ga2lNS
f%]-Gl0e6Aro=%Ds40CU5se%59i4nq?=e"oH%Cm7Q_LRd]#)G0dFHh$gY:N^g]#q+f`9Y'edp<]eC2jn
d*U(_c-4AQaN"\/a2Ps5_SEq"]Y(i,%Kd.M%1`@H(CUWY#mgkA"U"u6#RV%Z)^-jn4$c8%6iKIS6ULc<
+?htO4#o;[2`*<F0.nb)-RU2`+s7sJ*?,q8)&<o"&J5!Q_#PSZ!X0)Q,;Vkn<)?+V5s7+a1Fjt%,9S!F
(_m_s%h/jPrW`N/"U"r(!rW-"!;EPOWtDJ?[^j)ga2uZXfA,?Jl0n?CbQ$onlTZ@T6:XXB;,pk/AoDa;
Jr>\XUo^o8_oL!Lf%8X1rnIV1gtUT_gA]b*fDa>2e^`0udaHLhcHa\YbK7j)`sBZ%_SX+']tD#:%e^A4
%K6k:%35ib$4$nA"pG,4"pbSK)]^4Z3BTSq6:+%-6UX:.r]qYk5!1ng3B&lR1GLU:.k3"r,p=HT+!2LB
)]9M/'GD&jec>(;.KKSP#8%t&3`''d<)?4Y5s77e1G:7),9n3I(_m_s&If'R#mU\="U"o0qZ?]seZ0"Y
ZaREX_T0dEeHa^]iTTRspAE,6eism86:XXB;,pk/AoDa;JrPn_Up%,;`=0f3e(31*gt^Z>gtUW`g]-",
fa69^f%/C%eC2mprm25%c-4AQaN2EB`P]R0^q[Rqed_ZhrXSo:'atHW#RCV="9\l4#n%=a+"&j)4[MO8
63'@U6pj@06iK@n5<_1l4#o5Y1c$pB/h8G%-RBo[+<VaH)]KY4().Do_>kAQ!WrZA+=THQA7AeC:eO>F
5rpn[0.S=^,pOEK)ANr#&If'S#mU\="U"r1qZ?`teZ0:aZaREY_T0dEe^rU:kj%^4r8%DAs40CS5se(6
9i4nq?tO=uH\IHAS>WQu]uA(<e(34,g]#t/gYDb^rn7J-g"=pUee-H_eC2jnd*U(_bfn8PaN)??#0"Ks
_SEq"ed_ZhrXSo:'atHW#RCV<"9\l4#n.Id+=]0/5!q^:63]eE6psC06N07d5!;"i3B9#W1c$j>/h8D!
,pa]Y+<MX')[%#r().G!!$hRH":5be.m[<KA6`8::e3u?4Z52S.k)bh+<;@;'bh5j%13F@#6P,5"9\K%
rrMhli2@9hY-bXL^r==:dF6h,jQGq&q>AJ:lTFJq*Buq^8kr;f>@D8aGCPC+Q(Y+[\\Q,+d+-_#gY:N^
g]#q+f`9Y'edg6\eC2jnd*U(_c-4AQaSs3d`P]R0^q[Rq]Xm#2oaUs2r=0VP$Od@K#7(M;"9o);$l0d*
/iPdV6pj?@6mb8f5s[_!5!1ne3B&lR1GLO8.k2no,p=HT*uu@@)]9M/'GD&j%b1RH!$D=E"Uu@m1ItYJ
:e4,C4Z52O.k;nj+<;@;'bh5j%13F@#6P,5"9\K%r;clun>5BF%AKSmVQ6l*[_'>l`llU4e(W^<kO%p8
r6>924R"mD3B9,`5=@t5:/b.s@:a>#ItETDTVSd%]ElEud*pS!gY1B\f`BaWrmh8'e^W'rdJhK/c-4DT
aiMNC`Poa3^qd^u]Y(hd\[SuQfF8#p%LigV%1W:H((CW[$OI%D"pG,6"pk\M)^-gi3C-#!r]q;`4Zked
3B&lR1GLO8.k;tn,p=HT+!(>"$lKfr'GD&j%L`aR$k'iN('+I?%29p@5s77b1Fjn#,9S!F(_m_s!tPhJ
$N:84"U,#2q?$TrqZ-Jen=fEFrLOarTr+lmZF7BY_T'[Ae(WU9kO%a3r87PIrri?#r;?Hg3Uf$!2uPWV
2`Nrb6:ORB;,ph,ASu^=Jr>n^Up%,;_op<Rf%J^-rmhS0e^W'rdEp7cc-4AQaiOJ%%E66%^q[Xt]Xk\b
\$`UIZa$d=YH7R1n."ap7h#k:%LimX%1N[P$OI%B"pG,4"pkYL)^-Rb3BfSg4#o;[2`*<F0.nb)-RBo[
+s7sJ*?,q8().Gr&Io9Z$OdFO$47(G#lF\@!#>S:"U>_a.k)bh+<;@;'bh5j%13CH#Q=l-"9\N&r;lQk
r1WhVrL`_Rp72qjUo:>s[(*```Q$*Kf%T$BlL"6>r7:lPrqu]kqtg-d3:]$)2Z#E+1`JA74?l5(9MSMh
>@D8dGCPC1Q(Y+[\\Q8/d+/-H"kD/Qe'cYCciq_>bfe,Lrl5en_ns4)^V.:m]",;Z[Bm3EYHP%/X/Z"+
i"#Sn!t>_M%K-c#$k!IN#mU_?"9\o6#n.Rk+YG]83B9#W1c$j>/h8G%-RBo[+<M[G)]KY1().Do&Io3W
$OdCN$4."E#RLa_!:Kn)!WrT8)C$@F)Aj2'&J#<X$4-qB"U,#2"8`/u!V6<kT(\`KS+`<GQk,[YUo(2q
['mT^_T'dHe(P#`jQGq&pAEbH%fZJ*r;6?eq=jXWp@U=%p,)J#m5#Y<2`a)d6q9jE;cR%1C2S6FLPqFj
Up%>E_ojUXe'lamd*U(_bfe,MaN)??`P]R.^V.=n]",A\[C*?GZ*1@4X/i4tVkg,_oFCR(p($g+":bkL
%Lr@H)\!/`$4-qC"pG,6"pk\R)^-gi1GLO8.k2nm+Tru5+<MX')\a/*'GD,l%L`aR$k*LN$4."E#mgk8
"onnA!"8o1"Uu.[&J#<X#mU_7"T\`.qZ6`urW2BdpR:lEpm:cAqNMe_S"HCOX0/b:]=l)$bK\Mihr3bc
n+Q\?rs&K%r;?Hgq@!,pp\+=Ro^q_FnaZ$'pbDOtqCb;m2)dKX5=@t5:/P"q@:a>#ItETDRA@$s]Yhq<
c-4ASaiMNC`Poa3^q[Xt]Xk\b\$rcOZ*CL9XK/D$WMcPfU7e0NSt#eNpC?!g+q>%j%LijW%LijT$k!@H
#R1G8"9o/@&K;lC-RBoZ+s7sJrYlRi().Gr&Io9Z$O[@N$47(G#RLeB#Q=o/#6kD2"nr#:!!NB)"UPD=
rWN<*"8`/u!TsIYQhcsFPl?pDP5::;Nu4%HS"67MX0&\9\@oc!aN`2fgu7G]n+Q\Ert>>/r;6?dq=jXW
p@\(Mo()>@n,D_UmHaR&q(VUtqCVb"odrK_0f:dI4[28&8k`)^>@(lYGC+q"OdW#KZb42sa2c0<_ns4)
^V.:m]",;Z[Bm3EYHP%.WMuenUnj`XTUqaFS=0AC!L8l5%J()-%3H#h%1NdV$k<aV%LrpW$OR7J#6kA9
"9\o8$P==#+!(>"'H%Z%'GD&j%L`^Q$k!FM#mgkD#7(23!XAo6r<30(rWW<)b5h&4!s&H+"8W)t!TF+U
QMQjAP5::;O8=kPMN3a^R%'_DW2m).[_'>o`llc\g>CrokO%p;r9sY#rr2inqtg0bp\4CTp%7nIo'u8=
mdC)A!pf.:qCqb!q(D:kqC<^=.kND12)dQY5=A"6:/b;"@;9e+ItrrITW,-*^r=:1_BH_0]tM(i\[f2W
[Bm-CYHP%.X/W"pUnj`XTUqaFS=,_1rfmPKOcf5EndbO+q@3N8%fHh>%LimX%K-bH$k!IN#mU_?"U##7
#n.UK)[dN!'GD,l%L`aR$k*CL$47(G#RLeBr<<<."pY#0!X&Z1qZOJ1qZ?]sn,VnWqi^f;qiCT6r/1B-
qM,uFO-H!#T;8?bY-PLJ^r"+7dF6h,iTKV#pAFXa)ZKa6qtg0bp\4CTp%@tJo'u8=n*]W2mHa*'#3tI;
kih3mq_%LmqCDInq^M@i7k$#C0f:mN4[2>(8kr;b>@D8aGCP4&Q(XqV\\5Yg]",;Z[Bm3EZ*170X/W"p
Unj`ZTUqaFS=,e3Q^*i"PECugO,]-WMt@MV%JgS4%J().%0[4N$k<^UrXKtY$Od@K#7(M;"9o&:$kj3b
%L`^Q$k!FM$4-tE#m^D5!XAr7r<<3(rrr-"rrr)r_uTc;fDti1qMtK2r.k?/r.k0'r.Fou)hWs-P*_Z1
Tr+lmZF7BY_T'dDe(WU9kO%a3r;Q^@rr2imqYL$^p\+=Rp%7hGnaZ):mdBK0lg*j$l07EqkNCsgroF+>
r%7aqr$qRmr$_Ij!%7[kr$=ZV.4m/,2)dKX5=.h3:/P"q@:a>#H\.0@RA@$oZa6pAYH4e*WMcYiUnXTV
St;IBR@0D.Q'IPsOcb]cNK&jSLku%cs+U@[q@<E4n.,1',nCIp%LijW%1E^V%1WjW%1<RP#mUY="U"r4
#n.1L$47(F#mgk8"p,#7#5n`*"TJZ""TJZ*"TAW*"j-h`!;qlSMYi5-L\ul(KDU5uJ/<ZbJVT8HPaJ#6
Uo:>s[(*```Q66Mf%MD,jQc.)q>C0fqtg-ap\4CSp%7nIo'u2;mdBK0lg*j$l07Eqroa=Cs5a1>!o`+r
r%%Xoq^MFkr$VChq^)1f+seQ^-n?l&1Gh$O4?l5(9MSMh?=@SgGCPC1Q(Y+[YH4h+)6'U5Vkg&]TV.mJ
S=,e3Q^*i"PECugO,].uMuSV5L]2u/JqARO%f6_*%e^G1%K[.N%fQn@%LrpX%Lr@H&e#*U$4-qC"p>&5
#71\B#RL_@rW`B-rs&K,"9eo2"U4W'rWW<)rs&H+rW\qon,WBBr.k0'r.FourIFfprI"Ni."$T$Ll[df
S"HLRX0/h<]>2D*bL+emhrNtfo_8(Qp%@tJo'u8=n*^2B!:0XL!9sLHs6'FDs5a1>s5Et8s53h4!8RK$
r$_Fir$M=fr?hFgr?V:b-mU)e.4m2/2)dQZ5=A"6:/b;"@;9\(ItrrITVnT]U8"<PSt)==R@!o<!0dDE
!0@,=s,6o5s+gT-s+:6$s*t#r!.4VRp($g-p^[63r!if<%h9*J%0R.M$k<aF%LEOO$jm:G#R1G8r<<<.
#6t,1!X&W0p&tC!rri?+rWW3(rs8T/!!_rnSH/SAr.Fs!qgeWord4]nr-SBfrHJ6a,^FcgK8>SQQ^aV@
VQ6l*[_'>l`llWUg>ClPmIB`8mdBK0lg+Q8!9sLHs6'FDs5a4?ro*n8rnm_3s4mV.rn7A)r$VChr?_=f
r?_Cfp`]\]rZV7`,U+K[-7LN"0f:mL4[2>(8kr;b>@D)\GCP4&Q(4A4Q^<u&PEZ!.!0@,=s,6o5s+gW.
rdt0$rdXoqs*O`jrc\?br!rK4pC@-2r!rZ9r=8c:!t>bO%fHh?%LigV%1W:H%LidS$OI%D"pG,5"U"u4
p&tC!rri?+rrr<)rWrK.rs&H.rW`E0`;n![r.4crrI4ZlrHnKgrHJ3`rH.sY)K^7PJ:iZ=P*_Z/Tr+lm
ZF7BY_T'[Ae(WU9!pAk6rosIHs6'FDs5a1>s5Et8s53h4s4mV.rn@A(rn%/#!7gunr$M@gr$;(^r?;+^
r?(qY*?QIN-71/n/ho4?3'BJm7S6EQ<Eid@DKgGZMij/$Ns(H%Mi3AmLkgcbL&Zc(JcC6!IK+ZnH2`$e
FoHI]E<'qT&,6Y4%K-e8&,d"6&,ZnV%hB*Z%h9$Y%1NdV$k<aV%LrpW$OR7J#6kA9q?6g%rri?+rWW3(
rs8T/rs&H.rWiE/rWrK0!!ntmo`4o?rI4Zlr-SBfrHJ3`rH/$[rGa'#EH?;MI"@'5O-H$$T;8EdY-b^N
^r==:dFR%/jQPgjkN1h)jT"9?iVqd8hu;L3h#?(.gA]b(fDX;"eH"%ue,1Qk-2]%`,5i\`+T3D]*rR0*
*ZlFG+s\H_.kND12)dQY5=A"8:/b;"@;9e+Its#CMi3CIreLN-s+:6$s*t#rrd4Wis*+HbrcA$XrbqgS
p^R95r=/Z7r=Ai:q%*<3#S.CT%h9$Z%M&FH":bkN%Lr@H%1EUQ$4-qC"p>&4"U"u-#6+l)#6+u.#Q=r,
#lb//$2t5/$2t51$1%Yd!!%KHI/J?iH2VscG5ZO]F8p7[EW0nTDZ4GnDKBuHI"@'/O-H!#T;8?bY-bXL
^r"+7dF6h,j5Jtri;VX6hYu=0g]#q+f`0S%f)F5!e,@_od/qY?-2f+a,5i\`+T3D\*rR2[*rR,Z*$6.@
*ZuXP,q(2o0/5=C3^#\q7nQNT<EimHDKgSaJqEuQrdXrrrd4Wirce?as)\-YrbqdRrG;IJ!bQ$Sr=/Z7
r=Ai:q%*92rX\r;rXT;F%M''Z%h9'Y%0d7N%LigV%K-bA%1<RO#mU_>r!*-+rs/N-rWrK.rX&T1r<`H/
q?d',^];X[!.4WhrHJ3`rcJ*[rGhdSrbh[NrbMFG)f'>4FEr7bK8>SOQ^aV@VQ6l*[_'5i`llWUgA]k-
g]-%-gA]b)fDX;"ec+%rdf%Smci),ebQ,i`,5i\`+T<J]*rR2Z*r[2Y*;CHk*?H:H,UFcd/M8b82`Nrb
6q0dD;,ph/ASu_kHiA<iGQ)^dF)u@#EW0nUDZ+DMCAqiDAc6*>@1N2Gr=8Z7q%!?6rXSl;rXeu<)\<Jh
%hB*[%h9$Y%1NdV$k<^U%LrpW$OdCL#Q=r,#lY).$3(;0$2t5.$3(>.$Mb&0%$Ubg!<79AG5ZO]F8g1X
DuFSQD#J/KC&VcDAfYAkAnu:(FEr7aK8>PNQ^aP>VQ6i)[^a#f`lQERrn%/#rmgtrrmLbmrm1PfrQP5`
r5noYruq=`r?(tZrZD([r>kkWqA]DPr>?Uo)AsJ7+!2[P-71/l/ho4?3'BJm7S6?O<Eid@DZ4_VEW0nT
DZ4JNCAqiDAc6-;@JjO3?N1N2%fd+:%fHq:%fR";&Gm":&./mW&.f<]%hB*Z&,m%L%1NdV$k<aV%LrpW
$OR7JrWrK0rWr?,q?m$+r=&T3r<hijUB(=;rH/!ZrGhgTrGMUNrG2CHs(D@Erau.>raHgVBl%[.G'eUf
LPV"UR%'_DW2m).[_'>o`lld/ec+%rdf.Ymci),ebl,`_ao0<Y`ra7'+T3D\*rR2[*rR,Y*;UWQ)ZCWR
)ZCQm)B0Y:*ZuXP,q(2o0/GIE3]oVp7nQNT=^,<LrbqdRrG;IJrFZ">rF>e7r*]J0r*05+q[`K4rX\r;
rX\r=q@EQ:rXSo<$4[RW%Ls!Z%1`pYr=&l>%1WjWr=/o<$OdCA#l4l($Mb).%/^M3$N(;4$bl\f!<.'<
EW0nTDZ4JNC]8&HBDuNBA,]s9@K'XR@:O"eDKBuHI"?p+O-H!#T;8?bY-PLJ^r"+7rm1Vhs3:MdrQG,\
rQ+oWr5SZRr58LTr?)"[r>kkWqA]AOrYb\RqAB2J)]0J4)]]tB+s\H].4m2-2)dQZ5=@t5:/b.s@K'm;
Ac6-;@/s^6@/XF0>l7h(=o;@t%fR";%fR";&Gcq:&H319&,m%H%h9*]%Ls![%1`sZr=&o?%1E^U%K6h=
%1<UD$Mb).%/^M3$N:J6%/^M2%/^Ks!;c`rEW0nTDZ4JOC].uHBDuNBA,Tm9@K'[7?Mn(J?=@>UCMn38
H$k-pLl[^cS"HCOX0&\9]=l)$rlP)Zr5\`Tr5JQNqni6HrkJLUrZ2%[rZ1tXqA]DPrYb\RqAAoB)AjA1
)]]tA+s\K^.4m/,2)dKX5=.h3:/P"qra>Y1r*9/(r)rnuqc3Mmr_ie,rX\r;rX\u>rt##<rXf&=q@E90
)%R2g&.T0\%h0!Z%LimW%1WgU%LrpX%LimG$iCA0%/^M2%/UG0%JpS5%d!bi!!$s9DZ4JOC]8&HBDuNB
A,]s9@K'[6?3"72?2e(L>?bB@@Uj+gEH?;MI"@'5O-H$&T;8EdY-b^N^r?8mr5SZRqnr<Jqn`-Er4W.P
r>kkWq]#JPrYb\RqAAoB"r7sj(Dn&0(*"D;+<i'W-n?l&1Gh$O4?l5(9MSMhrET8)r)rnuqc3MmqG[;h
!"]#<rX\u>q@EQ:rXSc8q%!<3%h9'[%M''[%M'$Y%h9'Y%0d7O%LimX%K-e7%/^M2%/UG0%JpS1%f?dI
!7V#KD#S5KC&VcEB)Z<>@fBg8@/XF2?2e+/>Q.bG=BJ^3?t!PZCi4<;H$k0uLl[dfS"HLRX0/h<]>4<\
rPANMqS;sAq7ZU:s1A:NqA]DPrYb\Rq\\rAq%akb(Dn&0*$$(C+s\H_.4m2/2)dQZ5=A"6:/h$iqc*Dj
s&&Dcq,%)drt#)?q@EQ:rXSf9pC?m+%1WjY%M''[%M''Z%h9*J%0R.M$k<aF%f6_4%/LJ+%K?n5%0$ft
!!!#uC&VcEB)Z<=@fBg9@/XF2?2e+.>Q7k*=T2AC<E3+'?!^rLBkqU-FEr7bK8>SQQ^aV@VQ6l*[_'9L
^%o>8]D&l4\GdHH)ZCTS)ZL`P)"e^@(B,$h()@W#(Ddo,)]Ke=+!MsV-7LN"0f:mL4[2>(8l#.Yq,$f\
pJ(KXq[`Z;rXSc8rsnl8o*l9?$k3XU%M'$[&.T0\%h0$[%fHhA%LigV%1NdWp^R$-pC?p,q@;HaXT/E8
AnM!OraPk8ra>_3ra#M.r`fA)r`K2%r`/qs!)jk9<**4,?=@>UCMn-6H$k-pLl[^cS"67MX0&\9r42O2
oX=A!"1/sa)>tKN)"e^?(B5-K(B,$V()@W"()@]')AsJ7&K`)=,UOie/M8b81cRW_6:OTF:%h9Q9(PUV
7h6.Br=8]8p^Zm)rXAZ3rXBDK%h9-^%Ls![%1WmY%1WgV"qD(N%LrpXr!h?i[/ek[!+u4?rF5e8ra>_3
ra#M.r`fA)r`K/$s&K%tr_jh8;H$Rt=^>EE@qfasF*;nXJVT8HPaIr4Uo:>s[.q*,[J@6#[/@61)?(QO
)"e^?(B,'K(B,'J(B5-J()Ic'(`F>5*?H=I,UFih/MAn;2`a&c6q@#Eo1ApOmmd?hrXSf9p^Zj(rs\Z1
&.B!W%Ls!Z%hB-[%h9$Z%M&FH":bkN%Lq/&q@8Jbs'kt9ra>_3ra#M.r`fA)r`K2%r`/qsr_rhpr_OV1
:/Fkh='8g:@:O"eDKBuHI"@'/O-H!#T;8?bY5YcmZL>$q)#G-H(\edG(&f!J(&f!K(&f!K(&esc'c%T%
(`F>4*?H=I,UFif/MAh92`a)d7/f^A7dieD&,6Y1%JpV6%/C;1$5<jU$4@7O%1WjY%M'*\%M''Z%h9*J
%0R.M$k<aG%dFMl%c@>i!!6S:@/aL3?2e+.>Q.e)=T;J%<W5tt;uT\o;#a;i:&dm+9i+bf='8g8@:Nnb
DKBoFI"?p+O-5j!T:r-_eu\tR)"nd@(B5-K(B,'K(B,'J(B5-K(B5*J('bQh()Ic()As)**?H:H,UFcd
/M8b82`Nrbej9C'&,?_,%K6e3$iUM5$i12D$O[CQ%Ls!Z&.f<]%hB*[%h9$Y":YeM%1Lbs!"H:8g&M+\
ra,S0r`oG,r`T8'r`B)!s&Atrs&/hmr_EJfr_+>*92&)Y;cQq(?!q,OBl%d1G'eajLQ7F[R%9kFW:?qM
X7mG+(B,'J(B5-K(B5-K(B,'K(B,!N'bqDt(&\m^(Ddo,)]Tq@+<i-Y-n?l&1Gh$O4SqG25O^o6%eC//
%/LA2$N:G2$3CM?$N:DE$k3XU%M'$[%h9'[%Ls!Z%fQn>%LrpXq[MKoq[SSc!+>e4!+#V1r`oG,r`T8'
r`B)!s&Atrr_ibmr_EJfr_+>*92&)Y;cQq(?!q,OBl%^/G'e[hLPh.WR%9hCW7@sC(],!J(B,'J(B5-K
(B,'K(B,'K(B,!N'bqDt(&\m^(Ddo,)]Tn?+<i*X-n6f%1Gh!M4Ol[m%eC//%/pY4$i^S5$iC>5#mgt<
$O."K%1WjY%fQtB%M'$Z%hAOId14n2ZN1#5ra,S0r`oG,r`T8'r`B)!s&Atrr_ibmr_EGer_*Gh:fC=p
(0OmJ?t*_^CiON>H[p[&NfTElSXuRSeZ8B[q%irErYGMKrYGJJrtbSKrYGJIrY>PM'c-cb"rJ3s*$64E
$R-oD-n?l&1Gh!M4Ol[l%eC//%/C;2$N:G/$NCM5%1NdW%hK6^%Ls!Z%M'$ZrXJi:e./Y^hZ3X`ra,S0
r`oG,r`T8'r`B)!s&Atrr_i_ls%`Pf*DB.$:fC=p=^56@@qKFmEH?>NJ:WK9O-H$&Str=OX6QbY(\njG
(&f!K(&f!J(&f!K(&f!K'`Jjb'bqK#(Dn&.)]^"A+X/6Z-n?l&1Gh!N4Q/Nt5PP`[%K6e3$iUM5$i151
$iUS<%M'$\&,Qh<%h9*K%0@"L%Fkpg%ZLGg@K'[6?N+70>lIt,=oVV'=8l5"<;ohq;ZBSn:B!s.9MA/W
;cHh$>[:cJAnc.&F*Dt]JVT8HPaJ#5Uo;hE!#YAFq%irErYGMKrYGJJrtbVLrYGMJrY?=c'c%T%(`F82
*?Q=G+snTa.kND11c@BWeNX$Ep^Zm)rXA]4rX8`5rsSZ1rsSf8":bqP&.eXJ!Y5bNrXAo=%Lpntec<2[
s'bn7ra,S0r`oG,r`T8'r`B)!s&Atrr_ibmr_EGe#u4At<ENI2?=@=UAnu:(FE`+_K85JJPaJ#6Uo;hE
rttDFq%irErYGMKrYGJJrtbSKrYGJJrY>t[(Dn&.)]^"B+XAB]-n>KR0/GFD3]tqWrt"l7o*t[-q$[30
rX8]4rX0;H%1NdW%h9-^%Ls!Z%1WmY%fQn=%LrsG%bV>l!9=.Z@K'[6?N+70>lIt,=oVV'=8l5"<;ohq
;ZBSm:*!&':/Y%k=Bf';@:j.fDKBoDI"?p*Nf]KmSY)^VkH"'PrYY;Eq%irErYGMKrYGJJrtbSKrtbSK
rY?4b(Dn#.)]]tA+XA?\-n?l&1Gh$O4PW0t5Q22g%eC//%/C;2$N:G5$N:DD$k3XU%M'*]&.T0\%LipZ
rXK&?%1WjWe..H<!+Pq9rEo\5?=!S:r`oG,r`T8'r`B)!s&Atrr_i_lr_=D/;cHb!>[CfIAnPmtF*)\T
JV/c=OHu9)T;8F9X8Nn.(],!J(B,'J(B5-K(B,'J(B,$O()@W#(B,*`(`=52*ZcCI,UFcd.kNG21cIHX
eNa!Cp^Zm)rXAc6r!WK2rX0>G$O[@P%1WjY&.]<_%M''Z%hJXL":YeM%LpnteH!,[s'kt9ra>_3ra#M.
r`fA)s&f8%r`/ttr_reos%r\i$;aZ$='8d7?t*_\&8Z9+FEr7bK8>PLQC+58Uo;hEr##)Cq%irErYGMK
rYGJJrtbSKrY>ML(B,*Z(`=53*ZcCI,UFcd.kLoY1Gh$O4Ol[o&,6Y+%K6e3$i^S5$N^YC%/p\<%Ls!\
rXT/B%hB*[&,m%A%1NdW%JpXh%]KHi!<-I,@K'[6?N+70>lIt,=oVV'=8l5"<;ohq;BJ_3:/4Va<EE=.
?=75TBl%^0G'SOfK8>SMQC=A:Uo<FVn>lF'ob[E>rY>DJrtYMKrY>GKrtYMK!>QCL(D@W()]Tn@+<i*X
-7LMu0JbOE3]u.]q`jrgp^Zm)rXAT1"pt\F$OR7MrXJl;q%!Z>%hB-Z%LrCI!"IEfquDl[!+Z";raGe6
ra,S0r`oG,r`T8'r`B)!s&Atrr_i_l)cBX:=Bf'=@:NqaCiOQ?H%(<uLl[X`R[p(HW7@pK)Z(BE(\njG
(&f!K(&f!J(&f!J'c7]%(Ddo,)B0Y<+!;aR,pt,n/MJt;2`a(O56)2j&,6Y+%K6e6$iUP5$NCM5%0I(M
%hARL!"Su="qD.R%LimWrXJo;e.0h*^&\1CraPk8ra>_3ra#M.r`fA)s&f8%r`/ttr_reo&Pu;%<**1+
?!q)NB5)1%FEW!=IY!3/O-#ZrStDgWeZ8]gq\\uBq%irErYGMKrYGJJrtbSK(D[c&(Dn&/)]TqA+<i*X
-RgW!0JbUG3WM:m5Q;5j&,6Y+%K6e3$i^S6$iUS;%Ls!ZrXT>G%hB-[%h9'Y%LrCI!"JW3h[ZF^l2^fn
raPk8ra>_3ra#M.r`fA)s&f8%r`/ttr_reo*)KO4='/[4?t!PXCMn-6G'e[jKnteOQC=D;Uo<7QorJ'1
q\\uBq%irErYGMKrYGJJ!#GPK(`!l'(Dn&/)]^"B+<i*Y-RgW!0JbUG3]ttX!'gGmq[`H3o*t[-q$R62
$OcqC&Io9]%M'*\%M''[%M'$Z%1WjH%KHsf%efsi!!$X1A,]s:@K'[6?N+71>QA%.>Q.e*=T2D$<W?%t
;uTZ6;cQq&>[CiJAnc$uEHZPQIY3?3O-5ftStDgWeZ/ZfrYkYNob[E>rtPMKrYGMKrYGJJr>$1c(Dmu,
)]Ke>+<_pT-7:8p/hf(>2`a(O56)8o%f6e3%eC//%/L>5$O[CB%1!FS%hK6_%Ls$K%L!@Q%1NdVrXJo;
e.0Y%_Z9^KraYq:raGe6ra,S0r`oG,r`T8'r`B)!s&Atr(/e%/<ENC/?=@;TBkqU-G'A:`K8#2D#*P:@
StDgWeZ8]frYkYNob[E>rY>DJrtYMKrtYJJ(Ddl)(`=83*?H=H+snWa.P38,1H%0Q4T.Lt5Q;;o%f6e3
%eC//%/C82%/p\A%M'']%hK3\&,m%B%h9$X%LrCI!"JH.j:7d^mf<B"rF>h9raGe6ra,S0r`oG,r`T8'
r`B)!s&Aqq)cTg>=^59A@V0=iDf^)GH[pa&MNF!eR\$.IW8+HMX8a(9)Z(BE(\njG(&f!K(&\mJ(&esb
(Ddo*)&jM9*ZuUM-71)i/M8_52E*ZZeNa'Fr=8]8p^Zm)rXAW2!"Ai9#S%@U&.]<_%M/OK"V2(P%LrsI
%KHsf%e]mi!!6eFB)Q6=@fBg8@/aL3?2e+.>Q.e*=T2D$<W?%t;]A\;=^,0<@:EkbCi=B<GC4pnLPh1V
Q^XM<Uo;hE!ZDpor>PPMob[E>rY>DJrtYMK)\j)'()Ic((`F>5*ZcFI,UOid.P38-1H%0Q4OlXt%hK<N
%f6e3%eC//%/^J5$iUV8%fQtJ&.]9]%h9$Y%h9$Y%LrCI!"IEfaoK?[s(D=CraYq:raGe6ra,S0r`oG,
r`T8'r`B)!),sR6;cHh$>?tWG@qTRnDf^,JI"6p+MNEu)Q^XM<Uo;hEru1kSrYkYNob[E>rY>DJ*u,M+
()7Q"()Ic()B'P7*ZcIK,UOle.P38-1H%0Q4T%Ft5Q;8n&H31:&,6Y+%K6e6$iUSC%Ls!Z%hK6^%Ls!Y
rXK#>%LrsI%KHt-%cn1l!:U!fBDuNBA,]s:@JsU6?N+70>lIt,=oVV'=8l5!<#\h>=^,0>@Uj%dCi=E>
H$k0sLQ7IZQ^XM<Uo<%KqlB]7rYb\Rq\\uBq%irErYGJJr>$1c(Dn&/)]Tn@+X/0X-R^Js/ho.?2`a(O
5Q22n&-*:@%f6e3%eC//%/pV7%/p\>%Ls!Z%hS^N!tGhN&,Zn;%K6h;%FbmX!1a,hBDuNAA,]s:@K'[6
?N+71>QA%.>Q.e*=T2D$<?5%<<ENI1?=75PB5;C)FE`"XJVAl>OHPs!StDgWeZ8ZfrYbYQq\\uBq%iuF
!#>JKrtYMKrYH:d)B'P8+!2XM,UFfd.kNA.1H%0Q4Ol[q&,m.=%f6e3%eC//$j$eE%/p\9%LWaW%M'*\
%M'$[%1i@H!"Jo;!"IEf`;n![!,;CErau.>raPk8ra>_3ra#M.r`fA)s&f8%r)FV:>?kKC@qKFkDK0cB
H%(<uLQ7I\Q^aS?U]@@DWrO+;)ZCWR)Z(BE(\njG(&A[_(Ddo,)&jP9+!2XM,paoe.kND/2)[ET4SM(t
5Pu&k&H31:&,6Y+%K$Y6%1E^W%M0-]%Ls!Z%h9-K%fQn=%Lim5%dFOl!;-?lC&M]DB)Z<>@fBg8@/aL3
?2e+.>Q.e*=T2D$<?#"B>?kKC@qKFkDK0cDH[^O"LlRR]Q^aS?Uo;kF!im7Zr>PYQrYkYNob[E>rY>DJ
)\j,((Ddo,)&jP9+!2[N,paof.kND/2)[ET4Ol[n&,m+?%f[%9&,6Y+%K6e7%1E^W%M0-]%Ls![%Ls$J
%fQn=%Lils%dX1i!<-^3BDuNAA,]s:@K'[6?N+70>QA".>Q.e*=T2AB<E3+'>[:ZE@qKFkDK0iFH[^O$
LlRX_Q^aS?Uo;hErYthTrYbYQq\\uBq%irE!#>VO'c-cb()Rr-)]Tk?+<i!U,q(2m/h\q:2E3`[eN`pA
rXf#<q[`H3o*t^.rXB&A%M'$\%hAjS%M''[%M/LJrXAo=%1Ues^];X[!,MRJrFc.BrF>h9raGe6ra,S0
r`oG,r`T8'rDsq?=^56?@V07gDJsT>H$b!mLPUtRPa@l2TqnXcX4aQP)uU]T)>tKN)"e^@(B#!J(B,*c
(`=52*?H7E+sJ<[-n-Z!0/5=B3''1m5NG$/&Gcq;&H*+9&,6Y'%1NdW%hK6_%M'$[%h9'[r=8f9!Y,YK
jpphiPQ:O[s(hUJrFc+AraYq:raGe6ra,S0r`oG,r`T8'r`:%@>?kHA@V07gDJsT>H$b'oLPUtRPa@l3
TqnX;X8Eq8)ZCWR)Z(BE(\njG(&o'K(D[i*)B0\<*ZuXN-71,i.kWJ02)dKU4Ol[r&Gcq;&-*:@%f6e3
%e'o:%Ls!\%hK3]%M''[%M/LJrXAo=%1UeslN![[rbMLIrFc+AraYq:raGb5s'G\1s',P/r`fA)+';WH
='/[4?=@;TB5;C'F*;nXJ:iW5O-5`pS"HCMW7@sG)uU]S)?(QO)"e^@(B5*g()@]&(`4,/)]]t@+<i'X
-7C;p/h]"<2`Ni\eNa$Eq@EQ:rXSf9p^Zj(#S%=T%hK6_%M&jU%h9$Y%h9'Y%fQn=%Lils%_i"i!<-d4
C&VcEB)Q6=@fBg8@/aL3?2e+.>Q.e)=;tCI?!^rLB5).!Df^,LI"6j)Ll[^`R%'_AUo=3lg8k&hrYkbR
r>PPMob[<;)&F)+)B'P6*?H7F+s\K^-n-`#0/GIE3''1l5NP-/&Gcq:&H*+9&,6Y+%1!FR%h9*\&.T6M
%L*@P%h9'Y%fQn=%Lim/%e'sl!;c`rD#J/KC&M]EB)Q6=@fBg8@/aL3?2e+.>Q.bG=BJ^2?!^rLB5)1#
EHHDOI"6j*MN<pbR%'_AV5VqF!$(qVrYteSru(bRq\\uBp_NiF(Dn&/)]Tn@+!DgR-71/k/M8\42)dKW
4OlXr&,d(9&-!4@%f[%9&,6Y,%0I(M%hAOK$4[RV%LimY%LijWrXAo=%1UesjoD=[s(qXLrb;=Drau.>
raPk8ra>_3ra#M.!*fJ-r)jqC?=75PB5)1#EHHDOI"6p,MN<pdR%'_AV5VqFruCkSr>PYQrYkYNob[E>
rYGPO()e)1*$-1D+X/0Y-RgMs/hf(=2`No^eNa'Er=Jf9rXf&=q[`H3oaM!5%M''J%g<FR%LrpX":bnN
%1`@H!Y,YKe.0%ie,]JarbMIHrb)4BrF>h9raGe6ra,S0r`oG,r`L1E>[CfIAnPgoDfKlCH[L?tLl.7V
QC+/6Tr"^^X5BuW*;UWR)ZCWQ)Z(BE(]"pH(Ddo+)B0Y;+!2XM,UOlf.P38,1Gq*N4?Vspl9G7YrXeo:
rXf#<q[`H3p'h*6%M'-L%g3@Q%LrsI%K[(K%fQn=%Lim*%eU<l!!*(;rbVOKrb;@Erau+=raPk8ra>_3
ra#M.r`^CG=^,0<?t*_^CMn-5G'SIaJVAo;O-GrtS"HCNW7@pK*W@&U)ZUiV)ZCWQ)Z(BE(],!I(Ddo+
)]Ke>*ZuXP,paof.P3;-1Gq*N4?V.Y!"Su=r=Ji:rXf#<q[`H3p^R34!tPqR&H3.D%hB*Z%h9*H%0@"K
%FbmH!3H8$DZ4JNC]8&HBDuNBA,]s:@K'[6?N+70>lIqI>?bB@@:Eh_CMn-5G'SIaJVAo;OHc&uSY)UP
W7@sK*W@&T)uU]S)?(QO)"e^C('k]m(`4,0)]^"4*ZuXP,paof.P3;-1Gh$M4?V.Yrso#=r=Jf9rXf&=
q[`H3q$dN<%M'']%hS^M#nIOU%M'$Z%1WjI%K?q<%Fblq!8.AODZ4JNC]8&HBDuNBA,]s:@K'[6?N+70
>lIqH>[:`G@qTLkDK0`@H$k'lKntbNPa7]-T:r*[nuLiPrZ1tXqA]AOrYb\Rq\\uBrYGJL(`4/0)]Ke>
*ZuXP,paof.kND.1Gh$M4?Vdkmm$d]rX\r=q@EQ:rXSf9p^[-0"qD+R%M'']rXK&A%h0!Zr=8f9rso&<
gCF&iN<&rqrG;IKrFu7Drau+=raPk8ra>_3ra#M.*Eu`Q?=72OB5;=$EH?;KI"$X#MN3d_QC+58Tr"^<
X8X.<*;piU)u^cT)>tKN)"e^F(B,*e(`F;3*$$+B+<i'W,pt/m/MAe61cIBV4Ol[q%fHq;&Gcq:&H<7?
%f6e3%f6\>%Ls!Z%hK9N%L<RU%1WmY%1WmI%K?q<%FbmG!3Q;%DuFSQD#J/KC&M]EB)Q6=@fBg8@/aL3
?2\"I>[CiJ@qTRnDf^#EH[L?rLPh+RPa7c/T:r*[eZ/Zkr>kkWqA]AOru(bRq\\l?#T+Bs)B0Y;*Zkq:
+s\K^-n6`!0/,1=2`No^eNX$Er=8f;r=Jf9rt,,=q[`H3r!a>M%hB-\&.]9]%h9'Y%M'$Y%LrpWrXSr;
e./hcg&V.krGMUNrG2CHrFc+AraYq:raGe6ra,S0r`gCJ?=@;TBkqO'F*)VQIXm'+MN3d_QC=A:Tr"^X
X6$D^*rR,Y*;UWQ)ZCWR)Z(BC(E"&,)&jM7*ZcCH+seQ_-n6`!0/,1=2`No^k!/?"rt#&<rX\r=q@EQ:
rXSf9p^[94$4[OV%hK6_%hB-\r=0#B%LimX%1W:HrsdZlq[SScrbqgSs).gPrG2CHrFc+AraYq:raGb5
s'G\1*F)iT?t*SWBl%[*F*)VQIXm'+MN3d_Q^XJ;Tr"^<X8X1=*W@&U)ZUiU)ZCWR)Z(BD(E"&,)&jP9
*ZcCH+seQ_-n6`!0/57>2`No^eNa$Dr=8f;r=Jf9rXf&=q[`H3$k3XU%M'']%hB-\%M/LJ"qM1Q%LrpW
rXSr;e.145ZN'uFrbqaQrbVRLrFu7Drau+=raPk8ra>_3r*9D4@Uj!cBl%[,F*)VQIXm'+MN3daQ^XJ;
U8=g=WrO7@*rR,Y*;UWR)ZCWQ)Z(BE(C_3")&jP9+!)LI+seQ_$RdJT/MJn81cIEW4OlXr%fR";%fR"<
&Gcq:&H*+9&+pD8%h9-]&,m%=&,ctB%h9$Y%LimG%KHsf%^,li!<7'<DuFSQD#J/KC&M]DB)Z<>@fBg8
@/aL3>oR*X@Uj%bCi467G'SF`J:iW7Nfo]pR[p(FV5Wa]lDsq,rZ;"YrZ(bRr>PYQrYkYNp(nS`)B'P7
*?Q@G+sJ<[-7C>o/hf"91cIEW4Q/Nt5Q;5m&,d";&,d(9&,m.>%f6e1%KR(MrX]#=rX\u<"qM1Q%LrpW
r=/f:eIDQhN<&rtrbqaQrbVOKrb;=Drau.>raPk8ra>_3*F2rW@:E_ZCMn$0FEVqWJ:WE1NfT?hQ^XJ=
U8=g=X8X4?*rR,Y*;UTS)ZCZS)?(QO)#+mc(`4/0)]]q@+!;aQ-7(#g.kNA-0f(XG3BTFS5Q2/l&,d";
&,d(9&,m.>%f[(<&,6V;%hB-\&H31=%g!1M&,m%E%1WgV%LrpX%Fbm=!4W%.EW'hTDZ+DNC].uHBDuNA
A,]s:@K'[4?3jtL@qTRpDfKk2G'SIcJVAo?O-5fqR[p.HV5VqFrZD([rZ1qWqA]DPrYbYQq\],F!#Y\R
%iZN1+!2UL,UOfb.4Zu&0Es6f1cRKX4Ol[q%fHq;%fHq;&Gcq:&H*+9&,?\?%h9'[&.T3\rXT&>%M/OK
#Rq7Q%1WjW%Lr=Gfab"^j8]1$rGhgTrGMUNrG2CHrFc.BrF>h9raGe6ra$OO@:Nn`CMn'3FEVqWJ:WE1
NfT?hQ^XJ=U8=gOX7*(h*rR2[*rR,Y*;UWQ)ZL]R)Z(BJ(E+,/)&jM8*ZcCG+s\K]-RgPt/hf"91cRKX
4PW0t5Pu#j&,d";&,d(9&-!4>%f6e5%L3LS&.]<^%hARL!Y#VMrXK2C%LijW%LimWe..H<s)\-YrbqgS
s).gPrG2CHrFc+AraYq:raGe6*F<&[@Uj"aCi404G'A4ZJ:WE1NfT?hQ^XM>U8=g=X8a7>+9!>[*W@&U
)ZUiU)ZCWR)Z(BK(E+,/)&jP9*ZcFI+s\K]-RgPt/hf"92E3]Z4Ol[n%fR";%fR";&Gcq:&H31:&,QhG
%h9-]%h9*[%h9*Z%M/OK#Rq7Q%1WjW%LpnteH!,[rcA$XrbqaQrbVOKrb;=Drau.>raPk8rEot@@V07e
Ci=<7G'=LEIXm!'LlROZQC"&3Tq\B^eZ8Zjr?)"[r>kkWqA]AOrYb\Rq\]8J'c7c*)B0Y;+!)OJ+seQ^
-RgPt/hf!`1H%3Q4?V.Yq@<K8r=8f;r=Jf9rXf&=q[`W8!Y5eQr=8r>%M/LJ!"]&=#Rq7Q%1WjW%Lr:F
g(((^jT'f~>

%%EndBinary
grestore
np
grestore
276.612 117.311 mo
276.612 118.011 li
276.312 118.011 li
275.492 118.011 274.952 117.891 274.682 117.651 cv
274.402 117.411 274.272 116.931 274.272 116.221 cv
274.272 115.051 li
274.272 114.561 274.182 114.221 274.002 114.031 cv
273.822 113.851 273.512 113.751 273.052 113.751 cv
272.752 113.751 li
272.752 113.051 li
273.052 113.051 li
273.512 113.051 273.832 112.961 274.012 112.771 cv
274.182 112.591 274.272 112.251 274.272 111.761 cv
274.272 110.591 li
274.272 109.871 274.402 109.391 274.682 109.151 cv
274.952 108.911 275.492 108.791 276.312 108.791 cv
276.612 108.791 li
276.612 109.491 li
276.282 109.491 li
275.822 109.491 275.522 109.571 275.382 109.711 cv
275.242 109.851 275.172 110.151 275.172 110.611 cv
275.172 111.821 li
275.172 112.341 275.092 112.711 274.952 112.941 cv
274.802 113.171 274.552 113.321 274.192 113.401 cv
274.552 113.491 274.802 113.651 274.952 113.881 cv
275.092 114.121 275.172 114.491 275.172 114.991 cv
275.172 116.201 li
275.172 116.651 275.242 116.951 275.382 117.091 cv
275.522 117.231 275.822 117.311 276.282 117.311 cv
276.612 117.311 li
f
283.224 111.131 mo
283.044 112.021 li
282.824 111.871 282.594 111.751 282.354 111.671 cv
282.114 111.591 281.864 111.551 281.604 111.551 cv
281.314 111.551 281.044 111.601 280.784 111.701 cv
280.524 111.801 280.304 111.951 280.134 112.131 cv
279.854 112.421 279.634 112.751 279.484 113.131 cv
279.324 113.511 279.254 113.911 279.254 114.311 cv
279.254 114.811 279.374 115.171 279.624 115.411 cv
279.864 115.651 280.244 115.771 280.744 115.771 cv
280.984 115.771 281.254 115.741 281.534 115.661 cv
281.814 115.591 282.104 115.481 282.404 115.321 cv
282.234 116.211 li
281.974 116.321 281.704 116.391 281.424 116.441 cv
281.144 116.491 280.864 116.521 280.584 116.521 cv
279.854 116.521 279.294 116.341 278.904 115.981 cv
278.514 115.621 278.324 115.111 278.324 114.431 cv
278.324 113.871 278.424 113.351 278.624 112.871 cv
278.824 112.391 279.134 111.961 279.534 111.581 cv
279.804 111.321 280.124 111.131 280.494 110.991 cv
280.854 110.861 281.264 110.791 281.704 110.791 cv
281.954 110.791 282.204 110.821 282.454 110.881 cv
282.704 110.941 282.964 111.021 283.224 111.131 cv
f
286.371 111.851 mo
292.631 111.851 li
292.631 112.671 li
286.371 112.671 li
286.371 111.851 li
286.371 113.841 mo
292.631 113.841 li
292.631 114.671 li
286.371 114.671 li
286.371 113.841 li
f
296.878 115.561 mo
298.488 115.561 li
298.488 110.001 li
296.738 110.351 li
296.738 109.451 li
298.478 109.101 li
299.468 109.101 li
299.468 115.561 li
301.078 115.561 li
301.078 116.391 li
296.878 116.391 li
296.878 115.561 li
f
303.17 115.151 mo
304.2 115.151 li
304.2 115.991 li
303.4 117.541 li
302.77 117.541 li
303.17 115.991 li
303.17 115.151 li
f
316.053 111.851 mo
322.313 111.851 li
322.313 112.671 li
316.053 112.671 li
316.053 111.851 li
316.053 113.841 mo
322.313 113.841 li
322.313 114.671 li
316.053 114.671 li
316.053 113.841 li
f
328.5 109.751 mo
327.99 109.751 327.61 110.001 327.35 110.501 cv
327.09 111.001 326.97 111.751 326.97 112.751 cv
326.97 113.751 327.09 114.501 327.35 115.001 cv
327.61 115.501 327.99 115.751 328.5 115.751 cv
329.01 115.751 329.39 115.501 329.65 115.001 cv
329.9 114.501 330.03 113.751 330.03 112.751 cv
330.03 111.751 329.9 111.001 329.65 110.501 cv
329.39 110.001 329.01 109.751 328.5 109.751 cv
328.5 108.971 mo
329.31 108.971 329.93 109.301 330.37 109.941 cv
330.8 110.591 331.02 111.531 331.02 112.751 cv
331.02 113.981 330.8 114.921 330.37 115.561 cv
329.93 116.201 329.31 116.521 328.5 116.521 cv
327.68 116.521 327.05 116.201 326.62 115.561 cv
326.19 114.921 325.98 113.981 325.98 112.751 cv
325.98 111.531 326.19 110.591 326.62 109.941 cv
327.05 109.301 327.68 108.971 328.5 108.971 cv
f
332.753 115.151 mo
333.783 115.151 li
333.783 116.391 li
332.753 116.391 li
332.753 115.151 li
f
335.941 109.101 mo
339.811 109.101 li
339.811 109.931 li
336.841 109.931 li
336.841 111.721 li
336.981 111.671 337.131 111.631 337.271 111.611 cv
337.411 111.591 337.561 111.571 337.701 111.571 cv
338.511 111.571 339.151 111.801 339.631 112.241 cv
340.111 112.691 340.351 113.291 340.351 114.051 cv
340.351 114.841 340.101 115.451 339.611 115.881 cv
339.121 116.311 338.431 116.521 337.551 116.521 cv
337.241 116.521 336.931 116.491 336.611 116.451 cv
336.291 116.401 335.971 116.331 335.631 116.221 cv
335.631 115.231 li
335.921 115.391 336.221 115.511 336.541 115.591 cv
336.851 115.671 337.181 115.701 337.531 115.701 cv
338.091 115.701 338.541 115.561 338.871 115.261 cv
339.191 114.961 339.361 114.561 339.361 114.051 cv
339.361 113.551 339.191 113.151 338.871 112.851 cv
338.541 112.551 338.091 112.401 337.531 112.401 cv
337.271 112.401 337.001 112.431 336.741 112.491 cv
336.481 112.551 336.211 112.641 335.941 112.761 cv
335.941 109.101 li
f
342.394 115.151 mo
343.424 115.151 li
343.424 115.991 li
342.624 117.541 li
341.994 117.541 li
342.394 115.991 li
342.394 115.151 li
f
355.477 111.851 mo
361.737 111.851 li
361.737 112.671 li
355.477 112.671 li
355.477 111.851 li
355.477 113.841 mo
361.737 113.841 li
361.737 114.671 li
355.477 114.671 li
355.477 113.841 li
f
368.804 112.461 mo
369.274 112.561 369.644 112.771 369.904 113.091 cv
370.164 113.411 370.304 113.811 370.304 114.271 cv
370.304 114.991 370.054 115.551 369.564 115.941 cv
369.064 116.331 368.364 116.521 367.454 116.521 cv
367.144 116.521 366.824 116.491 366.504 116.431 cv
366.184 116.381 365.844 116.291 365.504 116.171 cv
365.504 115.221 li
365.774 115.381 366.074 115.501 366.404 115.581 cv
366.724 115.661 367.064 115.701 367.424 115.701 cv
368.044 115.701 368.514 115.581 368.834 115.341 cv
369.154 115.101 369.324 114.741 369.324 114.271 cv
369.324 113.851 369.174 113.511 368.874 113.271 cv
368.574 113.031 368.154 112.901 367.614 112.901 cv
366.764 112.901 li
366.764 112.091 li
367.654 112.091 li
368.134 112.091 368.504 112.001 368.764 111.801 cv
369.024 111.611 369.154 111.331 369.154 110.961 cv
369.154 110.591 369.014 110.301 368.754 110.101 cv
368.484 109.901 368.104 109.801 367.614 109.801 cv
367.344 109.801 367.054 109.831 366.744 109.891 cv
366.434 109.951 366.094 110.041 365.724 110.161 cv
365.724 109.281 li
366.094 109.181 366.444 109.101 366.774 109.051 cv
367.094 109.001 367.404 108.971 367.704 108.971 cv
368.444 108.971 369.034 109.141 369.474 109.481 cv
369.914 109.821 370.134 110.281 370.134 110.861 cv
370.134 111.261 370.014 111.601 369.784 111.881 cv
369.554 112.161 369.224 112.361 368.804 112.461 cv
f
372.356 117.311 mo
372.696 117.311 li
373.156 117.311 373.446 117.241 373.586 117.101 cv
373.726 116.961 373.796 116.661 373.796 116.201 cv
373.796 114.991 li
373.796 114.491 373.866 114.121 374.016 113.881 cv
374.156 113.651 374.416 113.491 374.776 113.401 cv
374.416 113.321 374.156 113.171 374.016 112.941 cv
373.866 112.711 373.796 112.341 373.796 111.821 cv
373.796 110.611 li
373.796 110.151 373.726 109.851 373.586 109.711 cv
373.446 109.571 373.156 109.491 372.696 109.491 cv
372.356 109.491 li
372.356 108.791 li
372.666 108.791 li
373.466 108.791 374.006 108.911 374.286 109.151 cv
374.556 109.391 374.696 109.871 374.696 110.591 cv
374.696 111.761 li
374.696 112.251 374.776 112.591 374.956 112.771 cv
375.136 112.961 375.456 113.051 375.916 113.051 cv
376.216 113.051 li
376.216 113.751 li
375.916 113.751 li
375.456 113.751 375.136 113.851 374.956 114.031 cv
374.776 114.221 374.696 114.561 374.696 115.051 cv
374.696 116.221 li
374.696 116.931 374.556 117.411 374.286 117.651 cv
374.006 117.891 373.466 118.011 372.666 118.011 cv
372.356 118.011 li
372.356 117.311 li
f
309.457 111.781 mo
309.997 115.161 li
312.527 110.921 li
313.477 110.921 li
310.207 116.391 li
309.807 118.461 li
308.907 118.461 li
309.307 116.391 li
308.667 112.311 li
308.607 111.901 308.417 111.691 308.107 111.691 cv
307.867 111.691 li
308.017 110.921 li
308.357 110.921 li
308.997 110.921 309.357 111.211 309.457 111.781 cv
f
350.901 112.921 mo
347.801 112.921 li
347.661 113.901 347.661 114.591 347.801 115.001 cv
347.981 115.511 348.311 115.761 348.801 115.761 cv
349.281 115.761 349.711 115.511 350.091 115.001 cv
350.411 114.551 350.681 113.861 350.901 112.921 cv
351.051 112.091 mo
351.131 111.171 351.121 110.551 351.011 110.221 cv
350.831 109.711 350.501 109.451 350.031 109.451 cv
349.531 109.451 349.091 109.711 348.731 110.211 cv
348.441 110.621 348.191 111.251 347.971 112.091 cv
351.051 112.091 li
350.171 108.711 mo
350.951 108.711 351.491 109.061 351.811 109.751 cv
352.121 110.441 352.161 111.391 351.921 112.611 cv
351.681 113.831 351.281 114.781 350.701 115.461 cv
350.121 116.151 349.431 116.491 348.651 116.491 cv
347.871 116.491 347.321 116.151 347.011 115.461 cv
346.701 114.781 346.661 113.831 346.901 112.611 cv
347.141 111.391 347.541 110.441 348.121 109.751 cv
348.701 109.061 349.381 108.711 350.171 108.711 cv
f
282.922 104.719 mo
282.922 21.5594 li
@
366.082 104.719 mo
366.082 21.5594 li
@
282.922 104.719 mo
366.082 104.719 li
@
282.922 21.5594 mo
366.082 21.5594 li
@
314.157 69.9202 mo
312.817 73.5502 li
315.497 73.5502 li
314.157 69.9202 li
313.597 68.9502 mo
314.717 68.9502 li
317.497 76.2402 li
316.467 76.2402 li
315.807 74.3702 li
312.517 74.3702 li
311.857 76.2402 li
310.817 76.2402 li
313.597 68.9502 li
0 1 1 0 cmyk
f
333.385 52.0742 mo
333.385 54.7442 li
334.965 54.7442 li
335.495 54.7442 335.885 54.6342 336.145 54.4142 cv
336.395 54.1942 336.525 53.8642 336.525 53.4042 cv
336.525 52.9542 336.395 52.6242 336.145 52.4042 cv
335.885 52.1842 335.495 52.0742 334.965 52.0742 cv
333.385 52.0742 li
333.385 49.0742 mo
333.385 51.2742 li
334.845 51.2742 li
335.325 51.2742 335.675 51.1842 335.915 51.0042 cv
336.155 50.8242 336.275 50.5542 336.275 50.1742 cv
336.275 49.8142 336.155 49.5342 335.915 49.3542 cv
335.675 49.1742 335.325 49.0742 334.845 49.0742 cv
333.385 49.0742 li
332.395 48.2642 mo
334.915 48.2642 li
335.665 48.2642 336.245 48.4242 336.655 48.7342 cv
337.055 49.0542 337.265 49.4942 337.265 50.0642 cv
337.265 50.5142 337.155 50.8742 336.945 51.1342 cv
336.735 51.3942 336.435 51.5642 336.035 51.6242 cv
336.515 51.7342 336.895 51.9542 337.165 52.2842 cv
337.425 52.6142 337.565 53.0242 337.565 53.5142 cv
337.565 54.1742 337.335 54.6742 336.895 55.0242 cv
336.455 55.3842 335.825 55.5542 335.015 55.5542 cv
332.395 55.5542 li
332.395 48.2642 li
1 /0 /CSD get_res sepcs
0 sep
f
283.857 7.21037 mo
283.373 8.04637 283.021 8.86037 282.79 9.66337 cv
282.548 10.4664 282.438 11.2804 282.438 12.1054 cv
282.438 12.9414 282.548 13.7554 282.79 14.5584 cv
283.021 15.3724 283.373 16.1754 283.857 17.0004 cv
282.999 17.0004 li
282.46 16.1534 282.053 15.3394 281.789 14.5254 cv
281.525 13.7114 281.393 12.9084 281.393 12.1054 cv
281.393 11.3134 281.525 10.5104 281.789 9.69637 cv
282.053 8.88237 282.449 8.05737 282.999 7.21037 cv
283.857 7.21037 li
1 /0 /CSD get_res sepcs
1 sep
f
290.105 9.77337 mo
290.105 10.6974 li
289.819 10.5434 289.544 10.4334 289.258 10.3564 cv
288.972 10.2794 288.697 10.2354 288.411 10.2354 cv
287.773 10.2354 287.267 10.4444 286.915 10.8514 cv
286.563 11.2584 286.387 11.8304 286.387 12.5564 cv
286.387 13.2934 286.563 13.8654 286.915 14.2724 cv
287.267 14.6794 287.773 14.8774 288.411 14.8774 cv
288.697 14.8774 288.972 14.8444 289.258 14.7674 cv
289.544 14.6904 289.819 14.5694 290.105 14.4154 cv
290.105 15.3284 li
289.819 15.4604 289.533 15.5594 289.247 15.6144 cv
288.95 15.6694 288.631 15.7024 288.301 15.7024 cv
287.399 15.7024 286.673 15.4274 286.145 14.8554 cv
285.606 14.2944 285.342 13.5244 285.342 12.5564 cv
285.342 11.5774 285.606 10.8074 286.145 10.2464 cv
286.684 9.68537 287.421 9.39937 288.367 9.39937 cv
288.675 9.39937 288.972 9.43237 289.258 9.49837 cv
289.544 9.56437 289.83 9.65237 290.105 9.77337 cv
f
291.667 7.21037 mo
292.525 7.21037 li
293.053 8.05737 293.46 8.88237 293.724 9.69637 cv
293.988 10.5104 294.131 11.3134 294.131 12.1054 cv
294.131 12.9084 293.988 13.7114 293.724 14.5254 cv
293.46 15.3394 293.053 16.1534 292.525 17.0004 cv
291.667 17.0004 li
292.14 16.1754 292.492 15.3724 292.734 14.5584 cv
292.965 13.7554 293.086 12.9414 293.086 12.1054 cv
293.086 11.2804 292.965 10.4664 292.734 9.66337 cv
292.492 8.86037 292.14 8.04637 291.667 7.21037 cv
f
305.659 8.15637 mo
305.659 9.30037 li
305.285 8.97037 304.9 8.71737 304.482 8.54137 cv
304.064 8.37637 303.635 8.28837 303.173 8.28837 cv
302.249 8.28837 301.545 8.57437 301.061 9.13537 cv
300.577 9.69637 300.335 10.4994 300.335 11.5554 cv
300.335 12.6114 300.577 13.4254 301.061 13.9864 cv
301.545 14.5474 302.249 14.8224 303.173 14.8224 cv
303.635 14.8224 304.064 14.7454 304.482 14.5694 cv
304.9 14.4044 305.285 14.1514 305.659 13.8104 cv
305.659 14.9434 li
305.274 15.2074 304.867 15.3944 304.449 15.5154 cv
304.031 15.6364 303.58 15.7024 303.107 15.7024 cv
301.897 15.7024 300.94 15.3394 300.236 14.6024 cv
299.532 13.8654 299.191 12.8534 299.191 11.5554 cv
299.191 10.2684 299.532 9.25637 300.236 8.50837 cv
300.94 7.77137 301.897 7.39737 303.107 7.39737 cv
303.591 7.39737 304.042 7.46337 304.46 7.58437 cv
304.878 7.71637 305.285 7.90337 305.659 8.15637 cv
f
309.619 10.2354 mo
309.091 10.2354 308.673 10.4444 308.365 10.8624 cv
308.057 11.2804 307.903 11.8414 307.903 12.5564 cv
307.903 13.2824 308.046 13.8434 308.354 14.2614 cv
308.662 14.6794 309.08 14.8774 309.619 14.8774 cv
310.147 14.8774 310.565 14.6794 310.873 14.2614 cv
311.181 13.8434 311.335 13.2824 311.335 12.5564 cv
311.335 11.8524 311.181 11.2804 310.873 10.8624 cv
310.565 10.4444 310.147 10.2354 309.619 10.2354 cv
309.619 9.39937 mo
310.477 9.39937 311.148 9.68537 311.643 10.2354 cv
312.127 10.7964 312.38 11.5664 312.38 12.5564 cv
312.38 13.5464 312.127 14.3164 311.643 14.8664 cv
311.148 15.4274 310.477 15.7024 309.619 15.7024 cv
308.75 15.7024 308.068 15.4274 307.584 14.8664 cv
307.1 14.3164 306.858 13.5464 306.858 12.5564 cv
306.858 11.5664 307.1 10.7964 307.584 10.2354 cv
308.068 9.68537 308.75 9.39937 309.619 9.39937 cv
f
318.705 10.6974 mo
318.947 10.2574 319.244 9.93837 319.585 9.71837 cv
319.926 9.50937 320.333 9.39937 320.806 9.39937 cv
321.422 9.39937 321.906 9.61937 322.247 10.0594 cv
322.588 10.4994 322.764 11.1264 322.764 11.9294 cv
322.764 15.5594 li
321.774 15.5594 li
321.774 11.9624 li
321.774 11.3904 321.664 10.9614 321.466 10.6754 cv
321.257 10.4004 320.949 10.2574 320.531 10.2574 cv
320.014 10.2574 319.607 10.4334 319.31 10.7744 cv
319.013 11.1154 318.87 11.5774 318.87 12.1604 cv
318.87 15.5594 li
317.88 15.5594 li
317.88 11.9624 li
317.88 11.3904 317.77 10.9614 317.572 10.6754 cv
317.363 10.4004 317.044 10.2574 316.626 10.2574 cv
316.12 10.2574 315.713 10.4334 315.416 10.7744 cv
315.119 11.1154 314.976 11.5774 314.976 12.1604 cv
314.976 15.5594 li
313.986 15.5594 li
313.986 9.54237 li
314.976 9.54237 li
314.976 10.4774 li
315.196 10.1144 315.471 9.83937 315.79 9.66337 cv
316.098 9.48737 316.472 9.39937 316.912 9.39937 cv
317.352 9.39937 317.715 9.50937 318.023 9.72937 cv
318.331 9.94937 318.551 10.2794 318.705 10.6974 cv
f
329.056 12.5564 mo
329.056 11.8304 328.902 11.2694 328.605 10.8514 cv
328.297 10.4334 327.89 10.2244 327.373 10.2244 cv
326.845 10.2244 326.438 10.4334 326.141 10.8514 cv
325.833 11.2694 325.69 11.8304 325.69 12.5564 cv
325.69 13.2824 325.833 13.8544 326.141 14.2724 cv
326.438 14.6904 326.845 14.8884 327.373 14.8884 cv
327.89 14.8884 328.297 14.6904 328.605 14.2724 cv
328.902 13.8544 329.056 13.2824 329.056 12.5564 cv
325.69 10.4554 mo
325.888 10.1034 326.152 9.83937 326.471 9.66337 cv
326.79 9.48737 327.175 9.39937 327.615 9.39937 cv
328.341 9.39937 328.935 9.69637 329.397 10.2684 cv
329.848 10.8514 330.079 11.6104 330.079 12.5564 cv
330.079 13.5024 329.848 14.2724 329.397 14.8444 cv
328.935 15.4164 328.341 15.7024 327.615 15.7024 cv
327.175 15.7024 326.79 15.6144 326.471 15.4494 cv
326.152 15.2844 325.888 15.0204 325.69 14.6574 cv
325.69 15.5594 li
324.7 15.5594 li
324.7 7.19937 li
325.69 7.19937 li
325.69 10.4554 li
f
331.718 9.54237 mo
332.708 9.54237 li
332.708 15.5594 li
331.718 15.5594 li
331.718 9.54237 li
331.718 7.19937 mo
332.708 7.19937 li
332.708 8.45337 li
331.718 8.45337 li
331.718 7.19937 li
f
339.781 11.9294 mo
339.781 15.5594 li
338.791 15.5594 li
338.791 11.9624 li
338.791 11.3904 338.67 10.9724 338.45 10.6864 cv
338.23 10.4004 337.9 10.2574 337.46 10.2574 cv
336.921 10.2574 336.503 10.4334 336.195 10.7744 cv
335.887 11.1154 335.733 11.5774 335.733 12.1604 cv
335.733 15.5594 li
334.743 15.5594 li
334.743 9.54237 li
335.733 9.54237 li
335.733 10.4774 li
335.964 10.1254 336.239 9.85037 336.569 9.67437 cv
336.888 9.49837 337.262 9.39937 337.68 9.39937 cv
338.362 9.39937 338.89 9.61937 339.242 10.0484 cv
339.594 10.4774 339.781 11.1044 339.781 11.9294 cv
f
344.489 12.5344 mo
343.686 12.5344 343.136 12.6334 342.828 12.8094 cv
342.52 12.9964 342.366 13.3044 342.366 13.7444 cv
342.366 14.0964 342.476 14.3824 342.707 14.5804 cv
342.938 14.7894 343.257 14.8884 343.653 14.8884 cv
344.203 14.8884 344.643 14.7014 344.973 14.3054 cv
345.303 13.9204 345.468 13.4034 345.468 12.7544 cv
345.468 12.5344 li
344.489 12.5344 li
346.458 12.1274 mo
346.458 15.5594 li
345.468 15.5594 li
345.468 14.6464 li
345.237 15.0204 344.951 15.2844 344.621 15.4494 cv
344.291 15.6144 343.873 15.7024 343.389 15.7024 cv
342.773 15.7024 342.278 15.5374 341.915 15.1964 cv
341.552 14.8554 341.376 14.3934 341.376 13.8104 cv
341.376 13.1394 341.596 12.6334 342.058 12.2814 cv
342.509 11.9404 343.18 11.7644 344.082 11.7644 cv
345.468 11.7644 li
345.468 11.6654 li
345.468 11.2144 345.314 10.8624 345.017 10.6094 cv
344.72 10.3674 344.302 10.2354 343.763 10.2354 cv
343.411 10.2354 343.081 10.2794 342.751 10.3674 cv
342.421 10.4554 342.113 10.5764 341.816 10.7304 cv
341.816 9.81737 li
342.168 9.68537 342.52 9.57537 342.861 9.50937 cv
343.202 9.44337 343.532 9.39937 343.862 9.39937 cv
344.731 9.39937 345.38 9.63037 345.809 10.0814 cv
346.238 10.5324 346.458 11.2144 346.458 12.1274 cv
f
349.472 7.83737 mo
349.472 9.54237 li
351.507 9.54237 li
351.507 10.3124 li
349.472 10.3124 li
349.472 13.5794 li
349.472 14.0744 349.538 14.3934 349.67 14.5254 cv
349.802 14.6684 350.077 14.7344 350.495 14.7344 cv
351.507 14.7344 li
351.507 15.5594 li
350.495 15.5594 li
349.725 15.5594 349.197 15.4164 348.911 15.1304 cv
348.625 14.8444 348.482 14.3274 348.482 13.5794 cv
348.482 10.3124 li
347.756 10.3124 li
347.756 9.54237 li
348.482 9.54237 li
348.482 7.83737 li
349.472 7.83737 li
f
352.805 9.54237 mo
353.795 9.54237 li
353.795 15.5594 li
352.805 15.5594 li
352.805 9.54237 li
352.805 7.19937 mo
353.795 7.19937 li
353.795 8.45337 li
352.805 8.45337 li
352.805 7.19937 li
f
358.195 10.2354 mo
357.667 10.2354 357.249 10.4444 356.941 10.8624 cv
356.633 11.2804 356.479 11.8414 356.479 12.5564 cv
356.479 13.2824 356.622 13.8434 356.93 14.2614 cv
357.238 14.6794 357.656 14.8774 358.195 14.8774 cv
358.723 14.8774 359.141 14.6794 359.449 14.2614 cv
359.757 13.8434 359.911 13.2824 359.911 12.5564 cv
359.911 11.8524 359.757 11.2804 359.449 10.8624 cv
359.141 10.4444 358.723 10.2354 358.195 10.2354 cv
358.195 9.39937 mo
359.053 9.39937 359.724 9.68537 360.219 10.2354 cv
360.703 10.7964 360.956 11.5664 360.956 12.5564 cv
360.956 13.5464 360.703 14.3164 360.219 14.8664 cv
359.724 15.4274 359.053 15.7024 358.195 15.7024 cv
357.326 15.7024 356.644 15.4274 356.16 14.8664 cv
355.676 14.3164 355.434 13.5464 355.434 12.5564 cv
355.434 11.5664 355.676 10.7964 356.16 10.2354 cv
356.644 9.68537 357.326 9.39937 358.195 9.39937 cv
f
367.6 11.9294 mo
367.6 15.5594 li
366.61 15.5594 li
366.61 11.9624 li
366.61 11.3904 366.489 10.9724 366.269 10.6864 cv
366.049 10.4004 365.719 10.2574 365.279 10.2574 cv
364.74 10.2574 364.322 10.4334 364.014 10.7744 cv
363.706 11.1154 363.552 11.5774 363.552 12.1604 cv
363.552 15.5594 li
362.562 15.5594 li
362.562 9.54237 li
363.552 9.54237 li
363.552 10.4774 li
363.783 10.1254 364.058 9.85037 364.388 9.67437 cv
364.707 9.49837 365.081 9.39937 365.499 9.39937 cv
366.181 9.39937 366.709 9.61937 367.061 10.0484 cv
367.413 10.4774 367.6 11.1044 367.6 11.9294 cv
f
gsave
394.305 99.3194 mo
410.505 99.3194 li
410.505 28.0394 li
394.305 28.0394 li
cp
clp
394.305 99.3194 mo
394.305 99.0409 li
394.305 28.3178 li
394.305 28.0394 li
410.505 28.0394 li
410.505 28.3178 li
410.505 99.0409 li
410.505 99.3194 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
.01 lw
0 lc
394.305 99.3194 mo
394.305 99.0409 li
394.305 28.3178 li
394.305 28.0394 li
410.505 28.0394 li
410.505 28.3178 li
410.505 99.0409 li
410.505 99.3194 li
cp
@
grestore
394.56 99.36 mo
410.4 99.36 li
410.4 28.08 li
394.56 28.08 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 126.919 ]ct
[15.84 0 0 71.28 394.56 27.5594 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 22 
/H 99 
/M[22 0 0 -99 0 99 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
li6;+lU'oJli6J0r7pU)lW<EPleLenoh5$Pli6;*lU0u+li6h8o%NCqlT"51le:Yis"Wmqli6;&lTOP]
mf3:dldkA`lQPToldYMcq)I[Xli6;!lS@c=q#C!dld4rNlON7\ld#GXmj[Q.li6:plQba#!!_chlcAB5
lNHPRn\tCElPo-kli6:flPK6qp&XLZlb2TslN->Oqmu=/lO<(Zli6:YlO!Ulli?ANl`oa_lN$DLrV>c[
lNc_Ulh9Y?oEP'plN$8Bl_*PIlN$bLoC)"5lNHMRlg3r&rWDQjlN$87l]:?6m/[.dlfIGglNHMRlf7Pi
qM"5=lN$8-l[A((pAjjdleC`NlNleVldu&Un8mn$lN$8"lYc"plN$7ulY>_mlN$G!r6=P=lO)qXlc\U&
oa:F#lN$7klWi`_lN$e"o#0islO)qXlbVmdrs\9'lN$7alVHgTmK!4dlac=UlOE.[laHCWq+Br_lN$7X
lUU7Np]0pdl`]VAlOE.[l`9tMmm67KlN$7LlTXYE!"J5ol_Ni-lOE.[nY5oTlT"2>lN$7AlSe&<n,W@d
l^R2rlON4\l^%2spFkhAlN$76lRqK3q>g'dl]19]lOE.[l\GKfm3h3/lN$7)lR2*1rXS5ol[S4GlON4\
o6U4YlQPR)lN$6plQQ$5oFC0elZ2;5lON4\rGV.ClQ,:$lN$6cll6!FlON4\lXfB"lONFbqZ,qjlPJjs
lN$6Vp(m?;lON4\lW`ZjlOE^knGqlWlP8^plN$6M!#=i8lO<(ZlVQm_mgB"#lN$6FlP/XllN$QLpe'id
lNukWlUC+Rq$-EplN$6<lOrLglN$oKmQ^"MlNQSSlT=JHrt=W#lN$61lOiFcnc8LdlS[u@lN?GQlSJ8I
ob$KklN$6+lOW:`quH3dlS%Q7lN?GQlRqK6lN6APlR_?2n,rRjlN$6#lO<(\lN$T+pF,>9lN-;OlR(p*
q>p-flN$5rlNukXlN$r.m31d%eH"nXmKrk!lN-;OlQ,9slN-SWq#K_#lNc_VlN$5hp]pEreH"nPlNQGO
mf;YglNPf=lk9@4lNPf=lOiFdnGqYNlOW:`eH"nEn,rRjeH"nClN?#EpAjLdlN,N9lNm=fnc@8@lNZYU
klC)NJ,~>

%%EndBinary
grestore
np
414.985 90.2309 mo
415.975 90.2309 li
415.975 96.6909 li
419.525 96.6909 li
419.525 97.5209 li
414.985 97.5209 li
414.985 90.2309 li
1 /0 /CSD get_res sepcs
1 sep
f
422.635 92.6809 mo
422.155 92.6809 421.775 92.8709 421.495 93.2509 cv
421.215 93.6309 421.075 94.1409 421.075 94.7909 cv
421.075 95.4509 421.205 95.9609 421.485 96.3409 cv
421.765 96.7209 422.145 96.9009 422.635 96.9009 cv
423.115 96.9009 423.495 96.7209 423.775 96.3409 cv
424.055 95.9609 424.195 95.4509 424.195 94.7909 cv
424.195 94.1509 424.055 93.6309 423.775 93.2509 cv
423.495 92.8709 423.115 92.6809 422.635 92.6809 cv
422.635 91.9209 mo
423.415 91.9209 424.025 92.1809 424.475 92.6809 cv
424.915 93.1909 425.145 93.8909 425.145 94.7909 cv
425.145 95.6909 424.915 96.3909 424.475 96.8909 cv
424.025 97.4009 423.415 97.6509 422.635 97.6509 cv
421.845 97.6509 421.225 97.4009 420.785 96.8909 cv
420.345 96.3909 420.125 95.6909 420.125 94.7909 cv
420.125 93.8909 420.345 93.1909 420.785 92.6809 cv
421.225 92.1809 421.845 91.9209 422.635 91.9209 cv
f
426.115 92.0509 mo
427.015 92.0509 li
428.135 96.3209 li
429.255 92.0509 li
430.315 92.0509 li
431.435 96.3209 li
432.555 92.0509 li
433.455 92.0509 li
432.025 97.5209 li
430.965 97.5209 li
429.785 93.0409 li
428.605 97.5209 li
427.545 97.5209 li
426.115 92.0509 li
f
439.495 94.5609 mo
439.495 95.0009 li
435.365 95.0009 li
435.405 95.6209 435.585 96.1009 435.925 96.4209 cv
436.255 96.7409 436.715 96.9009 437.315 96.9009 cv
437.655 96.9009 437.995 96.8609 438.315 96.7809 cv
438.635 96.7009 438.965 96.5709 439.285 96.3909 cv
439.285 97.2409 li
438.965 97.3809 438.635 97.4909 438.295 97.5509 cv
437.955 97.6109 437.605 97.6509 437.265 97.6509 cv
436.385 97.6509 435.695 97.4009 435.185 96.9009 cv
434.675 96.4009 434.425 95.7109 434.425 94.8409 cv
434.425 93.9509 434.665 93.2409 435.145 92.7109 cv
435.625 92.1909 436.285 91.9209 437.105 91.9209 cv
437.845 91.9209 438.425 92.1609 438.855 92.6309 cv
439.275 93.1109 439.495 93.7509 439.495 94.5609 cv
438.595 94.3009 mo
438.585 93.8109 438.445 93.4209 438.185 93.1209 cv
437.915 92.8309 437.555 92.6809 437.115 92.6809 cv
436.615 92.6809 436.215 92.8309 435.915 93.1109 cv
435.615 93.3909 435.435 93.7909 435.395 94.3009 cv
438.595 94.3009 li
f
444.455 92.2109 mo
444.455 93.0609 li
444.195 92.9409 443.935 92.8409 443.665 92.7709 cv
443.385 92.7109 443.105 92.6709 442.815 92.6709 cv
442.365 92.6709 442.025 92.7409 441.805 92.8809 cv
441.585 93.0209 441.475 93.2209 441.475 93.4909 cv
441.475 93.7009 441.555 93.8609 441.715 93.9809 cv
441.875 94.1009 442.195 94.2209 442.675 94.3209 cv
442.985 94.3909 li
443.625 94.5309 444.075 94.7309 444.345 94.9709 cv
444.605 95.2209 444.745 95.5709 444.745 96.0109 cv
444.745 96.5209 444.545 96.9209 444.145 97.2109 cv
443.745 97.5109 443.185 97.6509 442.485 97.6509 cv
442.185 97.6509 441.885 97.6209 441.565 97.5709 cv
441.245 97.5209 440.915 97.4409 440.565 97.3209 cv
440.565 96.3909 li
440.895 96.5709 441.225 96.7009 441.545 96.7809 cv
441.865 96.8709 442.185 96.9109 442.505 96.9109 cv
442.925 96.9109 443.255 96.8409 443.485 96.7009 cv
443.705 96.5609 443.825 96.3509 443.825 96.0809 cv
443.825 95.8409 443.735 95.6509 443.575 95.5209 cv
443.415 95.3909 443.055 95.2609 442.495 95.1409 cv
442.185 95.0709 li
441.625 94.9509 441.215 94.7709 440.975 94.5309 cv
440.725 94.2909 440.605 93.9609 440.605 93.5309 cv
440.605 93.0209 440.785 92.6209 441.145 92.3409 cv
441.505 92.0609 442.025 91.9209 442.705 91.9209 cv
443.035 91.9209 443.345 91.9509 443.645 92.0009 cv
443.935 92.0509 444.205 92.1209 444.455 92.2109 cv
f
447.065 90.5009 mo
447.065 92.0509 li
448.915 92.0509 li
448.915 92.7509 li
447.065 92.7509 li
447.065 95.7209 li
447.065 96.1709 447.125 96.4609 447.245 96.5809 cv
447.365 96.7109 447.615 96.7709 447.995 96.7709 cv
448.915 96.7709 li
448.915 97.5209 li
447.995 97.5209 li
447.295 97.5209 446.815 97.3909 446.555 97.1309 cv
446.295 96.8709 446.165 96.4009 446.165 95.7209 cv
446.165 92.7509 li
445.505 92.7509 li
445.505 92.0509 li
446.165 92.0509 li
446.165 90.5009 li
447.065 90.5009 li
f
415.975 102.232 mo
415.975 104.972 li
417.215 104.972 li
417.675 104.972 418.025 104.862 418.275 104.622 cv
418.525 104.382 418.655 104.042 418.655 103.602 cv
418.655 103.162 418.525 102.832 418.275 102.592 cv
418.025 102.352 417.675 102.232 417.215 102.232 cv
415.975 102.232 li
414.985 101.422 mo
417.215 101.422 li
418.025 101.422 418.645 101.612 419.065 101.982 cv
419.485 102.352 419.695 102.892 419.695 103.602 cv
419.695 104.322 419.485 104.872 419.065 105.232 cv
418.645 105.602 418.025 105.782 417.215 105.782 cv
415.975 105.782 li
415.975 108.712 li
414.985 108.712 li
414.985 101.422 li
f
424.145 104.082 mo
424.045 104.022 423.935 103.982 423.815 103.952 cv
423.695 103.932 423.565 103.912 423.425 103.912 cv
422.915 103.912 422.525 104.082 422.255 104.412 cv
421.975 104.742 421.845 105.212 421.845 105.832 cv
421.845 108.712 li
420.945 108.712 li
420.945 103.242 li
421.845 103.242 li
421.845 104.092 li
422.025 103.762 422.275 103.512 422.575 103.352 cv
422.875 103.192 423.245 103.112 423.685 103.112 cv
423.895 103.122 li
423.965 103.132 424.045 103.142 424.145 103.162 cv
424.145 104.082 li
f
427.205 103.872 mo
426.725 103.872 426.345 104.062 426.065 104.442 cv
425.785 104.822 425.645 105.332 425.645 105.982 cv
425.645 106.642 425.775 107.152 426.055 107.532 cv
426.335 107.912 426.715 108.092 427.205 108.092 cv
427.685 108.092 428.065 107.912 428.345 107.532 cv
428.625 107.152 428.765 106.642 428.765 105.982 cv
428.765 105.342 428.625 104.822 428.345 104.442 cv
428.065 104.062 427.685 103.872 427.205 103.872 cv
427.205 103.112 mo
427.985 103.112 428.595 103.372 429.045 103.872 cv
429.485 104.382 429.715 105.082 429.715 105.982 cv
429.715 106.882 429.485 107.582 429.045 108.082 cv
428.595 108.592 427.985 108.842 427.205 108.842 cv
426.415 108.842 425.795 108.592 425.355 108.082 cv
424.915 107.582 424.695 106.882 424.695 105.982 cv
424.695 105.082 424.915 104.382 425.355 103.872 cv
425.795 103.372 426.415 103.112 427.205 103.112 cv
f
435.135 105.982 mo
435.135 105.322 434.995 104.812 434.725 104.432 cv
434.445 104.052 434.075 103.862 433.605 103.862 cv
433.125 103.862 432.755 104.052 432.485 104.432 cv
432.205 104.812 432.075 105.322 432.075 105.982 cv
432.075 106.642 432.205 107.162 432.485 107.542 cv
432.755 107.922 433.125 108.102 433.605 108.102 cv
434.075 108.102 434.445 107.922 434.725 107.542 cv
434.995 107.162 435.135 106.642 435.135 105.982 cv
432.075 104.072 mo
432.255 103.752 432.495 103.512 432.785 103.352 cv
433.075 103.192 433.425 103.112 433.825 103.112 cv
434.485 103.112 435.025 103.382 435.445 103.902 cv
435.855 104.432 436.065 105.122 436.065 105.982 cv
436.065 106.842 435.855 107.542 435.445 108.062 cv
435.025 108.582 434.485 108.842 433.825 108.842 cv
433.425 108.842 433.075 108.762 432.785 108.612 cv
432.495 108.462 432.255 108.222 432.075 107.892 cv
432.075 108.712 li
431.175 108.712 li
431.175 101.112 li
432.075 101.112 li
432.075 104.072 li
f
440.045 105.962 mo
439.315 105.962 438.815 106.052 438.535 106.212 cv
438.255 106.382 438.115 106.662 438.115 107.062 cv
438.115 107.382 438.215 107.642 438.425 107.822 cv
438.635 108.012 438.925 108.102 439.285 108.102 cv
439.785 108.102 440.185 107.932 440.485 107.572 cv
440.785 107.222 440.935 106.752 440.935 106.162 cv
440.935 105.962 li
440.045 105.962 li
441.835 105.592 mo
441.835 108.712 li
440.935 108.712 li
440.935 107.882 li
440.725 108.222 440.465 108.462 440.165 108.612 cv
439.865 108.762 439.485 108.842 439.045 108.842 cv
438.485 108.842 438.035 108.692 437.705 108.382 cv
437.375 108.072 437.215 107.652 437.215 107.122 cv
437.215 106.512 437.415 106.052 437.835 105.732 cv
438.245 105.422 438.855 105.262 439.675 105.262 cv
440.935 105.262 li
440.935 105.172 li
440.935 104.762 440.795 104.442 440.525 104.212 cv
440.255 103.992 439.875 103.872 439.385 103.872 cv
439.065 103.872 438.765 103.912 438.465 103.992 cv
438.165 104.072 437.885 104.182 437.615 104.322 cv
437.615 103.492 li
437.935 103.372 438.255 103.272 438.565 103.212 cv
438.875 103.152 439.175 103.112 439.475 103.112 cv
440.265 103.112 440.855 103.322 441.245 103.732 cv
441.635 104.142 441.835 104.762 441.835 105.592 cv
f
447.615 105.982 mo
447.615 105.322 447.475 104.812 447.205 104.432 cv
446.925 104.052 446.555 103.862 446.085 103.862 cv
445.605 103.862 445.235 104.052 444.965 104.432 cv
444.685 104.812 444.555 105.322 444.555 105.982 cv
444.555 106.642 444.685 107.162 444.965 107.542 cv
445.235 107.922 445.605 108.102 446.085 108.102 cv
446.555 108.102 446.925 107.922 447.205 107.542 cv
447.475 107.162 447.615 106.642 447.615 105.982 cv
444.555 104.072 mo
444.735 103.752 444.975 103.512 445.265 103.352 cv
445.555 103.192 445.905 103.112 446.305 103.112 cv
446.965 103.112 447.505 103.382 447.925 103.902 cv
448.335 104.432 448.545 105.122 448.545 105.982 cv
448.545 106.842 448.335 107.542 447.925 108.062 cv
447.505 108.582 446.965 108.842 446.305 108.842 cv
445.905 108.842 445.555 108.762 445.265 108.612 cv
444.975 108.462 444.735 108.222 444.555 107.892 cv
444.555 108.712 li
443.655 108.712 li
443.655 101.112 li
444.555 101.112 li
444.555 104.072 li
f
450.035 103.242 mo
450.935 103.242 li
450.935 108.712 li
450.035 108.712 li
450.035 103.242 li
450.035 101.112 mo
450.935 101.112 li
450.935 102.252 li
450.035 102.252 li
450.035 101.112 li
f
452.815 101.112 mo
453.715 101.112 li
453.715 108.712 li
452.815 108.712 li
452.815 101.112 li
f
455.595 103.242 mo
456.495 103.242 li
456.495 108.712 li
455.595 108.712 li
455.595 103.242 li
455.595 101.112 mo
456.495 101.112 li
456.495 102.252 li
455.595 102.252 li
455.595 101.112 li
f
459.265 101.692 mo
459.265 103.242 li
461.115 103.242 li
461.115 103.942 li
459.265 103.942 li
459.265 106.912 li
459.265 107.362 459.325 107.652 459.445 107.772 cv
459.565 107.902 459.815 107.962 460.195 107.962 cv
461.115 107.962 li
461.115 108.712 li
460.195 108.712 li
459.495 108.712 459.015 108.582 458.755 108.322 cv
458.495 108.062 458.365 107.592 458.365 106.912 cv
458.365 103.942 li
457.705 103.942 li
457.705 103.242 li
458.365 103.242 li
458.365 101.692 li
459.265 101.692 li
f
464.575 109.212 mo
464.315 109.852 464.065 110.282 463.825 110.482 cv
463.585 110.682 463.265 110.782 462.865 110.782 cv
462.145 110.782 li
462.145 110.032 li
462.675 110.032 li
462.915 110.032 463.105 109.972 463.245 109.852 cv
463.385 109.732 463.535 109.462 463.705 109.022 cv
463.865 108.622 li
461.655 103.242 li
462.605 103.242 li
464.315 107.522 li
466.025 103.242 li
466.975 103.242 li
464.575 109.212 li
f
419.955 25.2009 mo
419.955 23.2409 li
418.345 23.2409 li
418.345 22.4309 li
420.935 22.4309 li
420.935 25.5609 li
420.555 25.8409 420.135 26.0409 419.675 26.1709 cv
419.215 26.3009 418.725 26.3709 418.205 26.3709 cv
417.065 26.3709 416.165 26.0409 415.525 25.3809 cv
414.885 24.7209 414.565 23.7909 414.565 22.6009 cv
414.565 21.4209 414.885 20.4909 415.525 19.8209 cv
416.165 19.1609 417.065 18.8209 418.205 18.8209 cv
418.675 18.8209 419.125 18.8809 419.555 19.0009 cv
419.985 19.1209 420.385 19.2909 420.745 19.5109 cv
420.745 20.5609 li
420.375 20.2609 419.985 20.0309 419.575 19.8709 cv
419.165 19.7109 418.735 19.6309 418.285 19.6309 cv
417.385 19.6309 416.715 19.8809 416.275 20.3809 cv
415.825 20.8809 415.605 21.6209 415.605 22.6009 cv
415.605 23.5909 415.825 24.3309 416.275 24.8309 cv
416.715 25.3309 417.385 25.5709 418.285 25.5709 cv
418.625 25.5709 418.935 25.5409 419.215 25.4809 cv
419.495 25.4209 419.735 25.3309 419.955 25.2009 cv
f
425.865 21.6109 mo
425.765 21.5509 425.655 21.5109 425.535 21.4809 cv
425.415 21.4609 425.285 21.4409 425.145 21.4409 cv
424.635 21.4409 424.245 21.6109 423.975 21.9409 cv
423.695 22.2709 423.565 22.7409 423.565 23.3609 cv
423.565 26.2409 li
422.665 26.2409 li
422.665 20.7709 li
423.565 20.7709 li
423.565 21.6209 li
423.745 21.2909 423.995 21.0409 424.295 20.8809 cv
424.595 20.7209 424.965 20.6409 425.405 20.6409 cv
425.615 20.6509 li
425.685 20.6609 425.765 20.6709 425.865 20.6909 cv
425.865 21.6109 li
f
431.485 23.2809 mo
431.485 23.7209 li
427.355 23.7209 li
427.395 24.3409 427.575 24.8209 427.915 25.1409 cv
428.245 25.4609 428.705 25.6209 429.305 25.6209 cv
429.645 25.6209 429.985 25.5809 430.305 25.5009 cv
430.625 25.4209 430.955 25.2909 431.275 25.1109 cv
431.275 25.9609 li
430.955 26.1009 430.625 26.2109 430.285 26.2709 cv
429.945 26.3309 429.595 26.3709 429.255 26.3709 cv
428.375 26.3709 427.685 26.1209 427.175 25.6209 cv
426.665 25.1209 426.415 24.4309 426.415 23.5609 cv
426.415 22.6709 426.655 21.9609 427.135 21.4309 cv
427.615 20.9109 428.275 20.6409 429.095 20.6409 cv
429.835 20.6409 430.415 20.8809 430.845 21.3509 cv
431.265 21.8309 431.485 22.4709 431.485 23.2809 cv
430.585 23.0209 mo
430.575 22.5309 430.435 22.1409 430.175 21.8409 cv
429.905 21.5509 429.545 21.4009 429.105 21.4009 cv
428.605 21.4009 428.205 21.5509 427.905 21.8309 cv
427.605 22.1109 427.425 22.5109 427.385 23.0209 cv
430.585 23.0209 li
f
435.445 23.4909 mo
434.715 23.4909 434.215 23.5809 433.935 23.7409 cv
433.655 23.9109 433.515 24.1909 433.515 24.5909 cv
433.515 24.9109 433.615 25.1709 433.825 25.3509 cv
434.035 25.5409 434.325 25.6309 434.685 25.6309 cv
435.185 25.6309 435.585 25.4609 435.885 25.1009 cv
436.185 24.7509 436.335 24.2809 436.335 23.6909 cv
436.335 23.4909 li
435.445 23.4909 li
437.235 23.1209 mo
437.235 26.2409 li
436.335 26.2409 li
436.335 25.4109 li
436.125 25.7509 435.865 25.9909 435.565 26.1409 cv
435.265 26.2909 434.885 26.3709 434.445 26.3709 cv
433.885 26.3709 433.435 26.2209 433.105 25.9109 cv
432.775 25.6009 432.615 25.1809 432.615 24.6509 cv
432.615 24.0409 432.815 23.5809 433.235 23.2609 cv
433.645 22.9509 434.255 22.7909 435.075 22.7909 cv
436.335 22.7909 li
436.335 22.7009 li
436.335 22.2909 436.195 21.9709 435.925 21.7409 cv
435.655 21.5209 435.275 21.4009 434.785 21.4009 cv
434.465 21.4009 434.165 21.4409 433.865 21.5209 cv
433.565 21.6009 433.285 21.7109 433.015 21.8509 cv
433.015 21.0209 li
433.335 20.9009 433.655 20.8009 433.965 20.7409 cv
434.275 20.6809 434.575 20.6409 434.875 20.6409 cv
435.665 20.6409 436.255 20.8509 436.645 21.2609 cv
437.035 21.6709 437.235 22.2909 437.235 23.1209 cv
f
439.975 19.2209 mo
439.975 20.7709 li
441.825 20.7709 li
441.825 21.4709 li
439.975 21.4709 li
439.975 24.4409 li
439.975 24.8909 440.035 25.1809 440.155 25.3009 cv
440.275 25.4309 440.525 25.4909 440.905 25.4909 cv
441.825 25.4909 li
441.825 26.2409 li
440.905 26.2409 li
440.205 26.2409 439.725 26.1109 439.465 25.8509 cv
439.205 25.5909 439.075 25.1209 439.075 24.4409 cv
439.075 21.4709 li
438.415 21.4709 li
438.415 20.7709 li
439.075 20.7709 li
439.075 19.2209 li
439.975 19.2209 li
f
447.685 23.2809 mo
447.685 23.7209 li
443.555 23.7209 li
443.595 24.3409 443.775 24.8209 444.115 25.1409 cv
444.445 25.4609 444.905 25.6209 445.505 25.6209 cv
445.845 25.6209 446.185 25.5809 446.505 25.5009 cv
446.825 25.4209 447.155 25.2909 447.475 25.1109 cv
447.475 25.9609 li
447.155 26.1009 446.825 26.2109 446.485 26.2709 cv
446.145 26.3309 445.795 26.3709 445.455 26.3709 cv
444.575 26.3709 443.885 26.1209 443.375 25.6209 cv
442.865 25.1209 442.615 24.4309 442.615 23.5609 cv
442.615 22.6709 442.855 21.9609 443.335 21.4309 cv
443.815 20.9109 444.475 20.6409 445.295 20.6409 cv
446.035 20.6409 446.615 20.8809 447.045 21.3509 cv
447.465 21.8309 447.685 22.4709 447.685 23.2809 cv
446.785 23.0209 mo
446.775 22.5309 446.635 22.1409 446.375 21.8409 cv
446.105 21.5509 445.745 21.4009 445.305 21.4009 cv
444.805 21.4009 444.405 21.5509 444.105 21.8309 cv
443.805 22.1109 443.625 22.5109 443.585 23.0209 cv
446.785 23.0209 li
f
452.645 20.9309 mo
452.645 21.7809 li
452.385 21.6609 452.125 21.5609 451.855 21.4909 cv
451.575 21.4309 451.295 21.3909 451.005 21.3909 cv
450.555 21.3909 450.215 21.4609 449.995 21.6009 cv
449.775 21.7409 449.665 21.9409 449.665 22.2109 cv
449.665 22.4209 449.745 22.5809 449.905 22.7009 cv
450.065 22.8209 450.385 22.9409 450.865 23.0409 cv
451.175 23.1109 li
451.815 23.2509 452.265 23.4509 452.535 23.6909 cv
452.795 23.9409 452.935 24.2909 452.935 24.7309 cv
452.935 25.2409 452.735 25.6409 452.335 25.9309 cv
451.935 26.2309 451.375 26.3709 450.675 26.3709 cv
450.375 26.3709 450.075 26.3409 449.755 26.2909 cv
449.435 26.2409 449.105 26.1609 448.755 26.0409 cv
448.755 25.1109 li
449.085 25.2909 449.415 25.4209 449.735 25.5009 cv
450.055 25.5909 450.375 25.6309 450.695 25.6309 cv
451.115 25.6309 451.445 25.5609 451.675 25.4209 cv
451.895 25.2809 452.015 25.0709 452.015 24.8009 cv
452.015 24.5609 451.925 24.3709 451.765 24.2409 cv
451.605 24.1109 451.245 23.9809 450.685 23.8609 cv
450.375 23.7909 li
449.815 23.6709 449.405 23.4909 449.165 23.2509 cv
448.915 23.0109 448.795 22.6809 448.795 22.2509 cv
448.795 21.7409 448.975 21.3409 449.335 21.0609 cv
449.695 20.7809 450.215 20.6409 450.895 20.6409 cv
451.225 20.6409 451.535 20.6709 451.835 20.7209 cv
452.125 20.7709 452.395 20.8409 452.645 20.9309 cv
f
455.255 19.2209 mo
455.255 20.7709 li
457.105 20.7709 li
457.105 21.4709 li
455.255 21.4709 li
455.255 24.4409 li
455.255 24.8909 455.315 25.1809 455.435 25.3009 cv
455.555 25.4309 455.805 25.4909 456.185 25.4909 cv
457.105 25.4909 li
457.105 26.2409 li
456.185 26.2409 li
455.485 26.2409 455.005 26.1109 454.745 25.8509 cv
454.485 25.5909 454.355 25.1209 454.355 24.4409 cv
454.355 21.4709 li
453.695 21.4709 li
453.695 20.7709 li
454.355 20.7709 li
454.355 19.2209 li
455.255 19.2209 li
f
415.975 30.9516 mo
415.975 33.6916 li
417.215 33.6916 li
417.675 33.6916 418.025 33.5816 418.275 33.3416 cv
418.525 33.1016 418.655 32.7616 418.655 32.3216 cv
418.655 31.8816 418.525 31.5516 418.275 31.3116 cv
418.025 31.0716 417.675 30.9516 417.215 30.9516 cv
415.975 30.9516 li
414.985 30.1416 mo
417.215 30.1416 li
418.025 30.1416 418.645 30.3316 419.065 30.7016 cv
419.485 31.0716 419.695 31.6116 419.695 32.3216 cv
419.695 33.0416 419.485 33.5916 419.065 33.9516 cv
418.645 34.3216 418.025 34.5016 417.215 34.5016 cv
415.975 34.5016 li
415.975 37.4316 li
414.985 37.4316 li
414.985 30.1416 li
f
424.145 32.8016 mo
424.045 32.7416 423.935 32.7016 423.815 32.6716 cv
423.695 32.6516 423.565 32.6316 423.425 32.6316 cv
422.915 32.6316 422.525 32.8016 422.255 33.1316 cv
421.975 33.4616 421.845 33.9316 421.845 34.5516 cv
421.845 37.4316 li
420.945 37.4316 li
420.945 31.9616 li
421.845 31.9616 li
421.845 32.8116 li
422.025 32.4816 422.275 32.2316 422.575 32.0716 cv
422.875 31.9116 423.245 31.8316 423.685 31.8316 cv
423.895 31.8416 li
423.965 31.8516 424.045 31.8616 424.145 31.8816 cv
424.145 32.8016 li
f
427.205 32.5916 mo
426.725 32.5916 426.345 32.7816 426.065 33.1616 cv
425.785 33.5416 425.645 34.0516 425.645 34.7016 cv
425.645 35.3616 425.775 35.8716 426.055 36.2516 cv
426.335 36.6316 426.715 36.8116 427.205 36.8116 cv
427.685 36.8116 428.065 36.6316 428.345 36.2516 cv
428.625 35.8716 428.765 35.3616 428.765 34.7016 cv
428.765 34.0616 428.625 33.5416 428.345 33.1616 cv
428.065 32.7816 427.685 32.5916 427.205 32.5916 cv
427.205 31.8316 mo
427.985 31.8316 428.595 32.0916 429.045 32.5916 cv
429.485 33.1016 429.715 33.8016 429.715 34.7016 cv
429.715 35.6016 429.485 36.3016 429.045 36.8016 cv
428.595 37.3116 427.985 37.5616 427.205 37.5616 cv
426.415 37.5616 425.795 37.3116 425.355 36.8016 cv
424.915 36.3016 424.695 35.6016 424.695 34.7016 cv
424.695 33.8016 424.915 33.1016 425.355 32.5916 cv
425.795 32.0916 426.415 31.8316 427.205 31.8316 cv
f
435.135 34.7016 mo
435.135 34.0416 434.995 33.5316 434.725 33.1516 cv
434.445 32.7716 434.075 32.5816 433.605 32.5816 cv
433.125 32.5816 432.755 32.7716 432.485 33.1516 cv
432.205 33.5316 432.075 34.0416 432.075 34.7016 cv
432.075 35.3616 432.205 35.8816 432.485 36.2616 cv
432.755 36.6416 433.125 36.8216 433.605 36.8216 cv
434.075 36.8216 434.445 36.6416 434.725 36.2616 cv
434.995 35.8816 435.135 35.3616 435.135 34.7016 cv
432.075 32.7916 mo
432.255 32.4716 432.495 32.2316 432.785 32.0716 cv
433.075 31.9116 433.425 31.8316 433.825 31.8316 cv
434.485 31.8316 435.025 32.1016 435.445 32.6216 cv
435.855 33.1516 436.065 33.8416 436.065 34.7016 cv
436.065 35.5616 435.855 36.2616 435.445 36.7816 cv
435.025 37.3016 434.485 37.5616 433.825 37.5616 cv
433.425 37.5616 433.075 37.4816 432.785 37.3316 cv
432.495 37.1816 432.255 36.9416 432.075 36.6116 cv
432.075 37.4316 li
431.175 37.4316 li
431.175 29.8316 li
432.075 29.8316 li
432.075 32.7916 li
f
440.045 34.6816 mo
439.315 34.6816 438.815 34.7716 438.535 34.9316 cv
438.255 35.1016 438.115 35.3816 438.115 35.7816 cv
438.115 36.1016 438.215 36.3616 438.425 36.5416 cv
438.635 36.7316 438.925 36.8216 439.285 36.8216 cv
439.785 36.8216 440.185 36.6516 440.485 36.2916 cv
440.785 35.9416 440.935 35.4716 440.935 34.8816 cv
440.935 34.6816 li
440.045 34.6816 li
441.835 34.3116 mo
441.835 37.4316 li
440.935 37.4316 li
440.935 36.6016 li
440.725 36.9416 440.465 37.1816 440.165 37.3316 cv
439.865 37.4816 439.485 37.5616 439.045 37.5616 cv
438.485 37.5616 438.035 37.4116 437.705 37.1016 cv
437.375 36.7916 437.215 36.3716 437.215 35.8416 cv
437.215 35.2316 437.415 34.7716 437.835 34.4516 cv
438.245 34.1416 438.855 33.9816 439.675 33.9816 cv
440.935 33.9816 li
440.935 33.8916 li
440.935 33.4816 440.795 33.1616 440.525 32.9316 cv
440.255 32.7116 439.875 32.5916 439.385 32.5916 cv
439.065 32.5916 438.765 32.6316 438.465 32.7116 cv
438.165 32.7916 437.885 32.9016 437.615 33.0416 cv
437.615 32.2116 li
437.935 32.0916 438.255 31.9916 438.565 31.9316 cv
438.875 31.8716 439.175 31.8316 439.475 31.8316 cv
440.265 31.8316 440.855 32.0416 441.245 32.4516 cv
441.635 32.8616 441.835 33.4816 441.835 34.3116 cv
f
447.615 34.7016 mo
447.615 34.0416 447.475 33.5316 447.205 33.1516 cv
446.925 32.7716 446.555 32.5816 446.085 32.5816 cv
445.605 32.5816 445.235 32.7716 444.965 33.1516 cv
444.685 33.5316 444.555 34.0416 444.555 34.7016 cv
444.555 35.3616 444.685 35.8816 444.965 36.2616 cv
445.235 36.6416 445.605 36.8216 446.085 36.8216 cv
446.555 36.8216 446.925 36.6416 447.205 36.2616 cv
447.475 35.8816 447.615 35.3616 447.615 34.7016 cv
444.555 32.7916 mo
444.735 32.4716 444.975 32.2316 445.265 32.0716 cv
445.555 31.9116 445.905 31.8316 446.305 31.8316 cv
446.965 31.8316 447.505 32.1016 447.925 32.6216 cv
448.335 33.1516 448.545 33.8416 448.545 34.7016 cv
448.545 35.5616 448.335 36.2616 447.925 36.7816 cv
447.505 37.3016 446.965 37.5616 446.305 37.5616 cv
445.905 37.5616 445.555 37.4816 445.265 37.3316 cv
444.975 37.1816 444.735 36.9416 444.555 36.6116 cv
444.555 37.4316 li
443.655 37.4316 li
443.655 29.8316 li
444.555 29.8316 li
444.555 32.7916 li
f
450.035 31.9616 mo
450.935 31.9616 li
450.935 37.4316 li
450.035 37.4316 li
450.035 31.9616 li
450.035 29.8316 mo
450.935 29.8316 li
450.935 30.9716 li
450.035 30.9716 li
450.035 29.8316 li
f
452.815 29.8316 mo
453.715 29.8316 li
453.715 37.4316 li
452.815 37.4316 li
452.815 29.8316 li
f
455.595 31.9616 mo
456.495 31.9616 li
456.495 37.4316 li
455.595 37.4316 li
455.595 31.9616 li
455.595 29.8316 mo
456.495 29.8316 li
456.495 30.9716 li
455.595 30.9716 li
455.595 29.8316 li
f
459.265 30.4116 mo
459.265 31.9616 li
461.115 31.9616 li
461.115 32.6616 li
459.265 32.6616 li
459.265 35.6316 li
459.265 36.0816 459.325 36.3716 459.445 36.4916 cv
459.565 36.6216 459.815 36.6816 460.195 36.6816 cv
461.115 36.6816 li
461.115 37.4316 li
460.195 37.4316 li
459.495 37.4316 459.015 37.3016 458.755 37.0416 cv
458.495 36.7816 458.365 36.3116 458.365 35.6316 cv
458.365 32.6616 li
457.705 32.6616 li
457.705 31.9616 li
458.365 31.9616 li
458.365 30.4116 li
459.265 30.4116 li
f
464.575 37.9316 mo
464.315 38.5716 464.065 39.0016 463.825 39.2016 cv
463.585 39.4016 463.265 39.5016 462.865 39.5016 cv
462.145 39.5016 li
462.145 38.7516 li
462.675 38.7516 li
462.915 38.7516 463.105 38.6916 463.245 38.5716 cv
463.385 38.4516 463.535 38.1816 463.705 37.7416 cv
463.865 37.3416 li
461.655 31.9616 li
462.605 31.9616 li
464.315 36.2416 li
466.025 31.9616 li
466.975 31.9616 li
464.575 37.9316 li
f
0 lc
394.305 99.3194 mo
394.305 99.0409 li
394.305 28.3178 li
394.305 28.0394 li
410.505 28.0394 li
410.505 28.3178 li
410.505 99.0409 li
410.505 99.3194 li
cp
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
